{"version":3,"file":"index.es.js","sources":["../src/withTrailingBlock.ts","../src/createTrailingBlockPlugin.ts"],"sourcesContent":["import {\n  ELEMENT_DEFAULT,\n  getLastNodeByLevel,\n  getPluginType,\n  insertElements,\n  PlateEditor,\n  queryNode,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-common';\nimport { Path } from 'slate';\n\nimport { TrailingBlockPlugin } from './createTrailingBlockPlugin';\n\n/**\n * Add a trailing block when the last node type is not `type` and when the editor has .\n */\nexport const withTrailingBlock = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>,\n>(\n  editor: E,\n  {\n    options: { type = getPluginType(editor, ELEMENT_DEFAULT), level, ...query },\n  }: WithPlatePlugin<TrailingBlockPlugin, V, E>\n) => {\n  const { normalizeNode } = editor;\n\n  editor.normalizeNode = ([currentNode, currentPath]) => {\n    if (currentPath.length === 0) {\n      const lastChild = getLastNodeByLevel(editor, level!);\n\n      const lastChildNode = lastChild?.[0];\n\n      if (\n        !lastChildNode ||\n        (lastChildNode.type !== type && queryNode(lastChild, query))\n      ) {\n        const at = lastChild ? Path.next(lastChild[1]) : [0];\n\n        insertElements(editor, editor.blockFactory({}, at), { at });\n        return;\n      }\n    }\n\n    return normalizeNode([currentNode, currentPath]);\n  };\n\n  return editor;\n};\n","import {\n  createPluginFactory,\n  ELEMENT_DEFAULT,\n  getPluginType,\n  QueryNodeOptions,\n} from '@udecode/plate-common';\n\nimport { withTrailingBlock } from './withTrailingBlock';\n\nexport interface TrailingBlockPlugin extends QueryNodeOptions {\n  /**\n   * Level where the trailing node should be, the first level being 0.\n   */\n  level?: number;\n\n  /**\n   * Type of the trailing block\n   */\n  type?: string;\n}\n\nexport const KEY_TRAILING_BLOCK = 'trailingBlock';\n\n/**\n * @see {@link withTrailingBlock}\n */\nexport const createTrailingBlockPlugin =\n  createPluginFactory<TrailingBlockPlugin>({\n    key: KEY_TRAILING_BLOCK,\n    withOverrides: withTrailingBlock,\n    options: {\n      level: 0,\n    },\n    then: (editor) => ({\n      type: getPluginType(editor, ELEMENT_DEFAULT),\n    }),\n  });\n"],"names":["withTrailingBlock","editor","options","type","getPluginType","ELEMENT_DEFAULT","level","query","normalizeNode","currentNode","currentPath","length","lastChild","getLastNodeByLevel","lastChildNode","queryNode","at","Path","next","insertElements","blockFactory","KEY_TRAILING_BLOCK","createTrailingBlockPlugin","createPluginFactory","key","withOverrides","then"],"mappings":";;;AAcA;AACA;AACA;AACaA,MAAAA,iBAAiB,GAAGA,CAI/BC,MAAS,EACT;AACEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAI,GAAGC,aAAa,CAACH,MAAM,EAAEI,eAAe,CAAC;IAAEC,KAAK;IAAE,GAAGC,KAAAA;AAAM,GAAA;AAChC,CAAC,KAC1C;EACH,MAAM;AAAEC,IAAAA,aAAAA;AAAc,GAAC,GAAGP,MAAM,CAAA;EAEhCA,MAAM,CAACO,aAAa,GAAG,CAAC,CAACC,WAAW,EAAEC,WAAW,CAAC,KAAK;AACrD,IAAA,IAAIA,WAAW,CAACC,MAAM,KAAK,CAAC,EAAE;AAC5B,MAAA,MAAMC,SAAS,GAAGC,kBAAkB,CAACZ,MAAM,EAAEK,KAAM,CAAC,CAAA;MAEpD,MAAMQ,aAAa,GAAGF,SAAS,KAAA,IAAA,IAATA,SAAS,KAATA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,SAAS,CAAG,CAAC,CAAC,CAAA;AAEpC,MAAA,IACE,CAACE,aAAa,IACbA,aAAa,CAACX,IAAI,KAAKA,IAAI,IAAIY,SAAS,CAACH,SAAS,EAAEL,KAAK,CAAE,EAC5D;AACA,QAAA,MAAMS,EAAE,GAAGJ,SAAS,GAAGK,IAAI,CAACC,IAAI,CAACN,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AAEpDO,QAAAA,cAAc,CAAClB,MAAM,EAAEA,MAAM,CAACmB,YAAY,CAAC,EAAE,EAAEJ,EAAE,CAAC,EAAE;AAAEA,UAAAA,EAAAA;AAAG,SAAC,CAAC,CAAA;AAC3D,QAAA,OAAA;AACF,OAAA;AACF,KAAA;AAEA,IAAA,OAAOR,aAAa,CAAC,CAACC,WAAW,EAAEC,WAAW,CAAC,CAAC,CAAA;GACjD,CAAA;AAED,EAAA,OAAOT,MAAM,CAAA;AACf;;AC5BO,MAAMoB,kBAAkB,GAAG,gBAAe;;AAEjD;AACA;AACA;AACaC,MAAAA,yBAAyB,GACpCC,mBAAmB,CAAsB;AACvCC,EAAAA,GAAG,EAAEH,kBAAkB;AACvBI,EAAAA,aAAa,EAAEzB,iBAAiB;AAChCE,EAAAA,OAAO,EAAE;AACPI,IAAAA,KAAK,EAAE,CAAA;GACR;EACDoB,IAAI,EAAGzB,MAAM,KAAM;AACjBE,IAAAA,IAAI,EAAEC,aAAa,CAACH,MAAM,EAAEI,eAAe,CAAA;GAC5C,CAAA;AACH,CAAC;;;;"}