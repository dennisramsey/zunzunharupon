{"version":3,"file":"index.js","sources":["../src/image/transforms/insertImage.ts","../src/image/utils/isImageUrl.ts","../src/image/withImageEmbed.ts","../src/image/withImageUpload.ts","../src/image/withImage.ts","../src/image/createImagePlugin.ts","../src/image/components/Image.tsx","../src/media/insertMedia.ts","../src/media/types.ts","../src/media-embed/parseIframeUrl.ts","../src/media-embed/createMediaEmbedPlugin.ts","../src/media-embed/parseTwitterUrl.ts","../src/media-embed/parseVideoUrl.ts","../src/media-embed/transforms/insertMediaEmbed.ts","../src/media/useMediaState.ts","../src/media/useMediaToolbarButton.ts","../src/media/FloatingMedia/floatingMediaStore.ts","../src/media/FloatingMedia/FloatingMediaEditButton.tsx","../src/media/FloatingMedia/submitFloatingMedia.ts","../src/media/FloatingMedia/FloatingMediaUrlInput.tsx","../src/media/FloatingMedia/FloatingMedia.tsx"],"sourcesContent":["import {\n  getPluginType,\n  insertNodes,\n  InsertNodesOptions,\n  PlateEditor,\n  Value,\n} from '@udecode/plate-common';\n\nimport { ELEMENT_IMAGE } from '../createImagePlugin';\nimport { TImageElement } from '../types';\n\nexport const insertImage = <V extends Value>(\n  editor: PlateEditor<V>,\n  url: string | ArrayBuffer,\n  options: InsertNodesOptions<V> = {}\n) => {\n  const text = { text: '' };\n  const image: TImageElement = {\n    type: getPluginType(editor, ELEMENT_IMAGE),\n    url: url as any,\n    children: [text],\n  };\n  insertNodes<TImageElement>(editor, image, {\n    nextBlock: true,\n    ...(options as any),\n  });\n};\n","import { isUrl } from '@udecode/plate-common';\n\nconst imageExtensions = new Set([\n  'ase',\n  'art',\n  'bmp',\n  'blp',\n  'cd5',\n  'cit',\n  'cpt',\n  'cr2',\n  'cut',\n  'dds',\n  'dib',\n  'djvu',\n  'egt',\n  'exif',\n  'gif',\n  'gpl',\n  'grf',\n  'icns',\n  'ico',\n  'iff',\n  'jng',\n  'jpeg',\n  'jpg',\n  'jfif',\n  'jp2',\n  'jps',\n  'lbm',\n  'max',\n  'miff',\n  'mng',\n  'msp',\n  'nitf',\n  'ota',\n  'pbm',\n  'pc1',\n  'pc2',\n  'pc3',\n  'pcf',\n  'pcx',\n  'pdn',\n  'pgm',\n  'PI1',\n  'PI2',\n  'PI3',\n  'pict',\n  'pct',\n  'pnm',\n  'pns',\n  'ppm',\n  'psb',\n  'psd',\n  'pdd',\n  'psp',\n  'px',\n  'pxm',\n  'pxr',\n  'qfx',\n  'raw',\n  'rle',\n  'sct',\n  'sgi',\n  'rgb',\n  'int',\n  'bw',\n  'tga',\n  'tiff',\n  'tif',\n  'vtf',\n  'xbm',\n  'xcf',\n  'xpm',\n  '3dv',\n  'amf',\n  'ai',\n  'awg',\n  'cgm',\n  'cdr',\n  'cmx',\n  'dxf',\n  'e2d',\n  'egt',\n  'eps',\n  'fs',\n  'gbr',\n  'odg',\n  'svg',\n  'stl',\n  'vrml',\n  'x3d',\n  'sxd',\n  'v2d',\n  'vnd',\n  'wmf',\n  'emf',\n  'art',\n  'xar',\n  'png',\n  'webp',\n  'jxr',\n  'hdp',\n  'wdp',\n  'cur',\n  'ecw',\n  'iff',\n  'lbm',\n  'liff',\n  'nrrd',\n  'pam',\n  'pcx',\n  'pgf',\n  'sgi',\n  'rgb',\n  'rgba',\n  'bw',\n  'int',\n  'inta',\n  'sid',\n  'ras',\n  'sun',\n  'tga',\n]);\n\nexport const isImageUrl = (url: string) => {\n  if (!isUrl(url)) return false;\n\n  const ext = new URL(url).pathname.split('.').pop() as string;\n\n  return imageExtensions.has(ext);\n};\n","import { PlateEditor, Value, WithPlatePlugin } from '@udecode/plate-common';\n\nimport { insertImage } from './transforms/insertImage';\nimport { ImagePlugin } from './types';\nimport { isImageUrl } from './utils/isImageUrl';\n\n/**\n * If inserted text is image url, insert image instead.\n */\nexport const withImageEmbed = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>,\n>(\n  editor: E,\n  // eslint-disable-next-line unused-imports/no-unused-vars\n  plugin: WithPlatePlugin<ImagePlugin, V, E>\n) => {\n  const { insertData } = editor;\n\n  editor.insertData = (dataTransfer: DataTransfer) => {\n    const text = dataTransfer.getData('text/plain');\n\n    if (isImageUrl(text)) {\n      insertImage(editor, text);\n      return;\n    }\n\n    insertData(dataTransfer);\n  };\n\n  return editor;\n};\n","import {\n  getInjectedPlugins,\n  pipeInsertDataQuery,\n  PlateEditor,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-common';\n\nimport { insertImage } from './transforms/insertImage';\nimport { ImagePlugin } from './types';\n\n/**\n * Allows for pasting images from clipboard.\n * Not yet: dragging and dropping images, selecting them through a file system dialog.\n */\nexport const withImageUpload = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>,\n>(\n  editor: E,\n  plugin: WithPlatePlugin<ImagePlugin, V, E>\n) => {\n  const {\n    options: { uploadImage },\n  } = plugin;\n  const { insertData } = editor;\n\n  editor.insertData = (dataTransfer: DataTransfer) => {\n    const text = dataTransfer.getData('text/plain');\n    const { files } = dataTransfer;\n\n    if (!text && files && files.length > 0) {\n      const injectedPlugins = getInjectedPlugins<{}, V, E>(editor, plugin);\n      if (\n        !pipeInsertDataQuery<{}, V, E>(injectedPlugins, {\n          data: text,\n          dataTransfer,\n        })\n      ) {\n        return insertData(dataTransfer);\n      }\n\n      for (const file of files) {\n        const reader = new FileReader();\n        const [mime] = file.type.split('/');\n\n        if (mime === 'image') {\n          reader.addEventListener('load', async () => {\n            if (!reader.result) {\n              return;\n            }\n            const uploadedUrl = uploadImage\n              ? await uploadImage(reader.result)\n              : reader.result;\n\n            insertImage(editor, uploadedUrl);\n          });\n\n          reader.readAsDataURL(file);\n        }\n      }\n    } else {\n      insertData(dataTransfer);\n    }\n  };\n\n  return editor;\n};\n","import { PlateEditor, Value, WithPlatePlugin } from '@udecode/plate-common';\n\nimport { ImagePlugin } from './types';\nimport { withImageEmbed } from './withImageEmbed';\nimport { withImageUpload } from './withImageUpload';\n\n/**\n * @see withImageUpload\n * @see withImageEmbed\n */\nexport const withImage = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>,\n>(\n  editor: E,\n  plugin: WithPlatePlugin<ImagePlugin, V, E>\n) => {\n  const {\n    options: { disableUploadInsert, disableEmbedInsert },\n  } = plugin;\n\n  if (!disableUploadInsert) {\n    editor = withImageUpload(editor, plugin);\n  }\n\n  if (!disableEmbedInsert) {\n    editor = withImageEmbed(editor, plugin);\n  }\n\n  return editor;\n};\n","import { createPluginFactory } from '@udecode/plate-common';\n\nimport { ImagePlugin } from './types';\nimport { withImage } from './withImage';\n\nexport const ELEMENT_IMAGE = 'img';\n\n/**\n * Enables support for images.\n */\nexport const createImagePlugin = createPluginFactory<ImagePlugin>({\n  key: ELEMENT_IMAGE,\n  isElement: true,\n  isVoid: true,\n  withOverrides: withImage,\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      rules: [\n        {\n          validNodeName: 'IMG',\n        },\n      ],\n      getNode: (el) => ({\n        type,\n        url: el.getAttribute('src'),\n      }),\n    },\n  }),\n});\n","import { createPrimitiveComponent, useElement } from '@udecode/plate-common';\n\nimport { TMediaElement } from '../../media/index';\n\nexport const useImage = () => {\n  const { url } = useElement<TMediaElement>();\n\n  return {\n    props: {\n      src: url,\n      draggable: true,\n    },\n  };\n};\n\nexport const Image = createPrimitiveComponent('img')({\n  propsHook: useImage,\n});\n","import { getPluginType, PlateEditor, Value } from '@udecode/plate-common';\n\nimport {\n  ELEMENT_IMAGE,\n  ELEMENT_MEDIA_EMBED,\n  insertImage,\n  insertMediaEmbed,\n} from '..';\n\nexport interface InsertMediaOptions {\n  /**\n   * Default onClick is getting the image url by calling this promise before inserting the image.\n   */\n  getUrl?: () => Promise<string>;\n\n  type?: string;\n}\n\nexport const insertMedia = async <V extends Value>(\n  editor: PlateEditor<V>,\n  {\n    getUrl,\n    type = getPluginType(editor, ELEMENT_IMAGE),\n  }: InsertMediaOptions = {}\n) => {\n  const url = getUrl\n    ? await getUrl()\n    : window.prompt(\n        `Enter the URL of the ${\n          type === ELEMENT_IMAGE ? ELEMENT_IMAGE : ELEMENT_MEDIA_EMBED\n        }`\n      );\n  if (!url) return;\n\n  if (type === getPluginType(editor, ELEMENT_IMAGE)) {\n    insertImage(editor, url);\n  } else {\n    insertMediaEmbed(editor, { url });\n  }\n};\n","import { TElement } from '@udecode/plate-common';\n\nexport interface TMediaElement extends TElement {\n  url: string;\n  align?: 'left' | 'center' | 'right';\n}\n\nexport interface MediaPlugin {\n  isUrl?: (text: string) => boolean;\n\n  /**\n   * Transforms the url.\n   */\n  transformUrl?: (url: string) => string;\n}\n\nexport const ELEMENT_MEDIA = 'media';\n","export const parseIframeUrl = (url: string) => {\n  // if not starting with http, assume pasting of full iframe embed code\n  if (url.slice(0, 4) !== 'http') {\n    const regexMatchSrc = /src=\".*?\"/;\n    const regexGroupQuotes = /\"([^\"]*)\"/;\n\n    const src = url.match(regexMatchSrc)?.[0];\n    const returnString = src?.match(regexGroupQuotes)?.[1];\n\n    if (returnString) {\n      url = returnString;\n    }\n  }\n  return url;\n};\n","import { createPluginFactory } from '@udecode/plate-common';\n\nimport { MediaPlugin } from '../media/index';\nimport { parseIframeUrl } from './parseIframeUrl';\n\nexport const ELEMENT_MEDIA_EMBED = 'media_embed';\n\n/**\n * Enables support for embeddable media such as YouTube\n * or Vimeo videos, Instagram posts and tweets or Google Maps.\n */\nexport const createMediaEmbedPlugin = createPluginFactory<MediaPlugin>({\n  key: ELEMENT_MEDIA_EMBED,\n  isElement: true,\n  isVoid: true,\n  options: {\n    transformUrl: parseIframeUrl,\n  },\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      rules: [\n        {\n          validNodeName: 'IFRAME',\n        },\n      ],\n      getNode: (el: HTMLElement) => {\n        const url = el.getAttribute('src');\n        if (url) {\n          return {\n            type,\n            url,\n          };\n        }\n      },\n    },\n  }),\n});\n","import { EmbedUrlData } from '../media';\n\nconst twitterRegex =\n  /^https?:\\/\\/twitter\\.com\\/(?:#!\\/)?(\\w+)\\/status(es)?\\/(?<id>\\d+)/;\n\nexport const parseTwitterUrl = (url: string): EmbedUrlData | undefined => {\n  if (url.match(twitterRegex)) {\n    return {\n      provider: 'twitter',\n      id: twitterRegex.exec(url)?.groups?.id,\n      url,\n    };\n  }\n};\n","import { isUrl } from '@udecode/plate-common';\nimport videoParser from 'js-video-url-parser';\n\nimport { EmbedUrlData } from '../media';\n\nconst YOUTUBE_PREFIX = 'https://www.youtube.com/embed/';\nconst VIMEO_PREFIX = 'https://player.vimeo.com/video/';\nconst DAILYMOTION_PREFIX = 'https://www.dailymotion.com/embed/video/';\nconst YOUKU_PREFIX = 'https://player.youku.com/embed/';\nconst COUB_PREFIX = 'https://coub.com/embed/';\n\nexport const VIDEO_PROVIDERS = [\n  'youtube',\n  'vimeo',\n  'dailymotion',\n  'youku',\n  'coub',\n];\n\nexport const parseVideoUrl = (url: string): EmbedUrlData | undefined => {\n  if (!isUrl(url)) return;\n\n  const videoData = videoParser.parse(url);\n  if (videoData?.provider && videoData.id) {\n    const { id, provider } = videoData;\n\n    const providerUrls: Record<string, string> = {\n      youtube: `${YOUTUBE_PREFIX}${id}`,\n      vimeo: `${VIMEO_PREFIX}${id}`,\n      dailymotion: `${DAILYMOTION_PREFIX}${id}`,\n      youku: `${YOUKU_PREFIX}${id}`,\n      coub: `${COUB_PREFIX}${id}`,\n    };\n\n    return {\n      id,\n      provider,\n      url: providerUrls[provider],\n    };\n  }\n};\n","import {\n  getParentNode,\n  insertNodes,\n  InsertNodesOptions,\n  PlateEditor,\n  PlatePluginKey,\n  Value,\n} from '@udecode/plate-common';\n\nimport { ELEMENT_MEDIA_EMBED } from '../createMediaEmbedPlugin';\nimport { TMediaEmbedElement } from '../types';\n\nexport const insertMediaEmbed = <V extends Value>(\n  editor: PlateEditor<V>,\n  {\n    url = '',\n    key = ELEMENT_MEDIA_EMBED,\n  }: Partial<TMediaEmbedElement> & PlatePluginKey,\n  options: InsertNodesOptions<V> = {}\n): void => {\n  if (!editor.selection) return;\n  const selectionParentEntry = getParentNode(editor, editor.selection);\n  if (!selectionParentEntry) return;\n  const [, path] = selectionParentEntry;\n  insertNodes<TMediaEmbedElement>(\n    editor,\n    {\n      type: key,\n      url,\n      children: [{ text: '' }],\n    },\n    {\n      at: path,\n      nextBlock: true,\n      ...(options as any),\n    }\n  );\n};\n","import { useMemo } from 'react';\nimport { useElement } from '@udecode/plate-common';\nimport { useFocused, useReadOnly, useSelected } from 'slate-react';\n\nimport { VIDEO_PROVIDERS } from '../media-embed';\nimport { TMediaElement } from './types';\n\nexport type EmbedUrlData = {\n  url?: string;\n  provider?: string;\n  id?: string;\n};\n\nexport type EmbedUrlParser = (url: string) => EmbedUrlData | undefined;\n\nexport const useMediaState = ({\n  urlParsers,\n}: {\n  urlParsers?: EmbedUrlParser[];\n} = {}) => {\n  const element = useElement<TMediaElement>();\n  const focused = useFocused();\n  const selected = useSelected();\n  const readOnly = useReadOnly();\n\n  const { url, align } = element;\n\n  const embed = useMemo(() => {\n    if (!urlParsers) return;\n\n    for (const parser of urlParsers) {\n      const data = parser(url);\n      if (data) {\n        return data;\n      }\n    }\n  }, [urlParsers, url]);\n\n  const isTweet = embed?.provider === 'twitter';\n  const isVideo = !!embed?.provider && VIDEO_PROVIDERS.includes(embed.provider);\n  const isYoutube = embed?.provider === 'youtube';\n  return {\n    align,\n    focused,\n    selected,\n    readOnly,\n    embed,\n    isTweet,\n    isVideo,\n    isYoutube,\n  };\n};\n","import { focusEditor, usePlateEditorRef } from '@udecode/plate-common';\n\nimport { insertMedia } from './insertMedia';\n\nexport const useMediaToolbarButton = ({\n  nodeType,\n}: { nodeType?: string } = {}) => {\n  const editor = usePlateEditorRef();\n\n  return {\n    props: {\n      onClick: async () => {\n        await insertMedia(editor, { type: nodeType });\n        focusEditor(editor);\n      },\n    },\n  };\n};\n","import { createStore } from '@udecode/plate-common';\n\nexport const floatingMediaStore = createStore('floatingMedia')({\n  url: '',\n  isEditing: false,\n}).extendActions((set) => ({\n  reset: () => {\n    set.url('');\n    set.isEditing(false);\n  },\n}));\n\nexport const floatingMediaActions = floatingMediaStore.set;\nexport const floatingMediaSelectors = floatingMediaStore.get;\nexport const useFloatingMediaSelectors = () => floatingMediaStore.use;\n","import { useCallback } from 'react';\nimport { createPrimitiveComponent, useElement } from '@udecode/plate-common';\n\nimport { TMediaElement } from '../types';\nimport { floatingMediaActions } from './floatingMediaStore';\n\nexport const useFloatingMediaEditButton = () => {\n  const element = useElement<TMediaElement>();\n\n  return {\n    props: {\n      onClick: useCallback(() => {\n        floatingMediaActions.url(element.url);\n        floatingMediaActions.isEditing(true);\n      }, [element.url]),\n    },\n  };\n};\n\nexport const FloatingMediaEditButton = createPrimitiveComponent('button')({\n  propsHook: useFloatingMediaEditButton,\n});\n","import {\n  focusEditor,\n  getPluginOptions,\n  isUrl,\n  PlateEditor,\n  setNodes,\n  Value,\n} from '@udecode/plate-common';\n\nimport { ELEMENT_MEDIA, MediaPlugin, TMediaElement } from '../types';\nimport {\n  floatingMediaActions,\n  floatingMediaSelectors,\n} from './floatingMediaStore';\n\nexport const submitFloatingMedia = <V extends Value>(\n  editor: PlateEditor<V>,\n  {\n    element,\n    pluginKey = ELEMENT_MEDIA,\n  }: {\n    element: TMediaElement;\n    pluginKey?: string;\n  }\n) => {\n  let url = floatingMediaSelectors.url();\n\n  if (url === element.url) {\n    floatingMediaActions.reset();\n    return true;\n  }\n\n  const { isUrl: _isUrl = isUrl, transformUrl } = getPluginOptions<\n    MediaPlugin,\n    V\n  >(editor, pluginKey);\n  const isValid = _isUrl(url);\n  if (!isValid) return;\n\n  if (transformUrl) {\n    url = transformUrl(url);\n  }\n\n  setNodes<TMediaElement>(editor, {\n    url,\n  });\n\n  floatingMediaActions.reset();\n\n  focusEditor(editor, editor.selection!);\n\n  return true;\n};\n","import { ChangeEventHandler, useCallback } from 'react';\nimport {\n  createPrimitiveComponent,\n  focusEditor,\n  useElement,\n  useHotkeys,\n  usePlateEditorRef,\n} from '@udecode/plate-common';\n\nimport { TMediaElement } from '../types';\nimport {\n  floatingMediaActions,\n  floatingMediaSelectors,\n} from './floatingMediaStore';\nimport { submitFloatingMedia } from './submitFloatingMedia';\n\nexport const useFloatingMediaUrlInputState = ({\n  pluginKey,\n}: {\n  pluginKey?: string;\n} = {}) => {\n  const editor = usePlateEditorRef();\n  const element = useElement<TMediaElement>();\n\n  useHotkeys(\n    'enter',\n    (e) => {\n      if (submitFloatingMedia(editor, { element, pluginKey })) {\n        e.preventDefault();\n      }\n    },\n    {\n      enableOnFormTags: ['INPUT'],\n    },\n    []\n  );\n\n  useHotkeys(\n    'escape',\n    () => {\n      if (floatingMediaSelectors.isEditing()) {\n        floatingMediaActions.reset();\n        focusEditor(editor, editor.selection!);\n      }\n    },\n    {\n      enableOnFormTags: ['INPUT'],\n      enableOnContentEditable: true,\n    },\n    []\n  );\n\n  return {\n    defaultValue: floatingMediaSelectors.url(),\n  };\n};\n\nexport const useFloatingMediaUrlInput = ({\n  defaultValue,\n}: ReturnType<typeof useFloatingMediaUrlInputState>) => {\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((e) => {\n    floatingMediaActions.url(e.target.value);\n  }, []);\n\n  return {\n    props: {\n      onChange,\n      autoFocus: true,\n      defaultValue,\n    },\n  };\n};\n\nexport const FloatingMediaUrlInput = createPrimitiveComponent('input')({\n  stateHook: useFloatingMediaUrlInputState,\n  propsHook: useFloatingMediaUrlInput,\n});\n","import { FloatingMediaEditButton } from './FloatingMediaEditButton';\nimport { FloatingMediaUrlInput } from './FloatingMediaUrlInput';\n\nexport const FloatingMedia = {\n  EditButton: FloatingMediaEditButton,\n  UrlInput: FloatingMediaUrlInput,\n};\n"],"names":["insertImage","editor","url","options","text","image","type","getPluginType","ELEMENT_IMAGE","children","insertNodes","nextBlock","imageExtensions","Set","isImageUrl","isUrl","ext","URL","pathname","split","pop","has","withImageEmbed","plugin","insertData","dataTransfer","getData","withImageUpload","uploadImage","files","length","injectedPlugins","getInjectedPlugins","pipeInsertDataQuery","data","file","reader","FileReader","mime","addEventListener","result","uploadedUrl","readAsDataURL","withImage","disableUploadInsert","disableEmbedInsert","createImagePlugin","createPluginFactory","key","isElement","isVoid","withOverrides","then","deserializeHtml","rules","validNodeName","getNode","el","getAttribute","useImage","useElement","props","src","draggable","Image","createPrimitiveComponent","propsHook","insertMedia","getUrl","window","prompt","ELEMENT_MEDIA_EMBED","insertMediaEmbed","ELEMENT_MEDIA","parseIframeUrl","slice","_url$match","_src$match","regexMatchSrc","regexGroupQuotes","match","returnString","createMediaEmbedPlugin","transformUrl","twitterRegex","parseTwitterUrl","_twitterRegex$exec","_twitterRegex$exec$gr","provider","id","exec","groups","YOUTUBE_PREFIX","VIMEO_PREFIX","DAILYMOTION_PREFIX","YOUKU_PREFIX","COUB_PREFIX","VIDEO_PROVIDERS","parseVideoUrl","videoData","videoParser","parse","providerUrls","youtube","vimeo","dailymotion","youku","coub","selection","selectionParentEntry","getParentNode","path","at","useMediaState","urlParsers","element","focused","useFocused","selected","useSelected","readOnly","useReadOnly","align","embed","useMemo","parser","isTweet","isVideo","includes","isYoutube","useMediaToolbarButton","nodeType","usePlateEditorRef","onClick","focusEditor","floatingMediaStore","createStore","isEditing","extendActions","set","reset","floatingMediaActions","floatingMediaSelectors","get","useFloatingMediaSelectors","use","useFloatingMediaEditButton","useCallback","FloatingMediaEditButton","submitFloatingMedia","pluginKey","_isUrl","getPluginOptions","isValid","setNodes","useFloatingMediaUrlInputState","useHotkeys","e","preventDefault","enableOnFormTags","enableOnContentEditable","defaultValue","useFloatingMediaUrlInput","onChange","target","value","autoFocus","FloatingMediaUrlInput","stateHook","FloatingMedia","EditButton","UrlInput"],"mappings":"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"}