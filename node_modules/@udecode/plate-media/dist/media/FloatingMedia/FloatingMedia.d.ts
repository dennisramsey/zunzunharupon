/// <reference types="react" />
export declare const FloatingMedia: {
    EditButton: import("react").ForwardRefExoticComponent<{
        as?: import("react").ElementType<any> | undefined;
        asChild?: boolean | undefined;
        className?: string | undefined;
        style?: import("react").CSSProperties | undefined;
        options?: any;
        state?: undefined;
        setProps?: ((hookProps: {
            onClick: () => void;
        }) => Omit<import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "ref">) | undefined;
    } & Omit<import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "ref"> & import("react").RefAttributes<any>>;
    UrlInput: import("react").ForwardRefExoticComponent<{
        as?: import("react").ElementType<any> | undefined;
        asChild?: boolean | undefined;
        className?: string | undefined;
        style?: import("react").CSSProperties | undefined;
        options?: {
            pluginKey?: string | undefined;
        } | undefined;
        state?: {
            defaultValue: string;
        } | undefined;
        setProps?: ((hookProps: {
            onChange: import("react").ChangeEventHandler<HTMLInputElement>;
            autoFocus: boolean;
            defaultValue: string;
        }) => Omit<import("react").DetailedHTMLProps<import("react").InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, "ref">) | undefined;
    } & Omit<import("react").DetailedHTMLProps<import("react").InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, "ref"> & import("react").RefAttributes<any>>;
};
//# sourceMappingURL=FloatingMedia.d.ts.map