import { ComponentPropsWithoutRef } from 'react';
import { ResizeHandle } from '@udecode/plate-resizable';
import { TableCellElementState } from './useTableCellElementState';
export type TableCellElementResizableOptions = Pick<TableCellElementState, 'colIndex' | 'rowIndex'> & {
    /**
     * Resize by step instead of by pixel.
     */
    step?: number;
    /**
     * Overrides for X and Y axes.
     */
    stepX?: number;
    stepY?: number;
};
export declare const useTableCellElementResizableState: ({ colIndex, rowIndex, step, stepX, stepY, }: TableCellElementResizableOptions) => {
    disableMarginLeft: boolean | undefined;
    colIndex: number;
    rowIndex: number;
    stepX: number | undefined;
    stepY: number | undefined;
};
export declare const useTableCellElementResizable: ({ disableMarginLeft, colIndex, rowIndex, stepX, stepY, }: ReturnType<typeof useTableCellElementResizableState>) => {
    rightProps: ComponentPropsWithoutRef<typeof ResizeHandle>;
    bottomProps: ComponentPropsWithoutRef<typeof ResizeHandle>;
    leftProps: ComponentPropsWithoutRef<typeof ResizeHandle>;
    hiddenLeft: boolean;
};
//# sourceMappingURL=useTableCellElementResizable.d.ts.map