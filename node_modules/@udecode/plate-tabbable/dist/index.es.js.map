{"version":3,"file":"index.es.js","sources":["../src/constants.ts","../src/findTabDestination.ts","../src/TabbableEffects.tsx","../src/createTabbablePlugin.ts"],"sourcesContent":["export const KEY_TABBABLE = 'tabbable';\n","import {\n  getPoint,\n  getPointAfter,\n  PlateEditor,\n  Value,\n} from '@udecode/plate-common';\nimport { Path } from 'slate';\n\nimport { TabbableEntry, TabDestination } from './types';\n\nexport interface FindTabDestinationOptions {\n  tabbableEntries: TabbableEntry[];\n  activeTabbableEntry: TabbableEntry | null;\n  direction: 'forward' | 'backward';\n}\n\nexport const findTabDestination = <V extends Value = Value>(\n  editor: PlateEditor<V>,\n  { tabbableEntries, activeTabbableEntry, direction }: FindTabDestinationOptions\n): TabDestination | null => {\n  if (activeTabbableEntry) {\n    // Find the next tabbable entry after the active one\n    const activeTabbableEntryIndex =\n      tabbableEntries.indexOf(activeTabbableEntry);\n    const nextTabbableEntryIndex =\n      activeTabbableEntryIndex + (direction === 'forward' ? 1 : -1);\n    const nextTabbableEntry = tabbableEntries[nextTabbableEntryIndex];\n\n    // If the next tabbable entry is in the same void, focus it\n    if (\n      nextTabbableEntry &&\n      Path.equals(activeTabbableEntry.path, nextTabbableEntry.path)\n    ) {\n      return {\n        type: 'dom-node',\n        domNode: nextTabbableEntry.domNode,\n      };\n    }\n\n    // Otherwise, focus the first path after the void\n    if (direction === 'forward') {\n      const pointAfter = getPointAfter(editor, activeTabbableEntry.path);\n      if (!pointAfter) return null;\n      return {\n        type: 'path',\n        path: pointAfter.path,\n      };\n    }\n\n    return {\n      type: 'path',\n      path: getPoint(editor, activeTabbableEntry.path).path,\n    };\n  }\n\n  const selectionPath = editor.selection?.anchor?.path || [];\n\n  // Find the first tabbable entry after the selection\n  const nextTabbableEntry =\n    direction === 'forward'\n      ? tabbableEntries.find(\n          (entry) => !Path.isBefore(entry.path, selectionPath)\n        )\n      : [...tabbableEntries]\n          .reverse()\n          .find((entry) => Path.isBefore(entry.path, selectionPath));\n\n  // If it exists, focus it\n  if (nextTabbableEntry) {\n    return {\n      type: 'dom-node',\n      domNode: nextTabbableEntry.domNode,\n    };\n  }\n\n  // Otherwise, use the default behaviour\n  return null;\n};\n","import { useEffect } from 'react';\nimport {\n  findNodePath,\n  focusEditor,\n  getPluginOptions,\n  toDOMNode,\n  toSlateNode,\n  useEditorState,\n} from '@udecode/plate-common';\nimport { Path } from 'slate';\nimport { tabbable } from 'tabbable';\n\nimport { KEY_TABBABLE } from './constants';\nimport { findTabDestination } from './findTabDestination';\nimport { TabbableEntry, TabbablePlugin } from './types';\n\nexport function TabbableEffects() {\n  const editor = useEditorState();\n  const { query, globalEventListener, insertTabbableEntries, isTabbable } =\n    getPluginOptions<TabbablePlugin>(editor, KEY_TABBABLE);\n\n  useEffect(() => {\n    const editorDOMNode = toDOMNode(editor, editor);\n    if (!editorDOMNode) return;\n\n    const handler = (event: KeyboardEvent) => {\n      if (\n        event.key !== 'Tab' ||\n        event.defaultPrevented ||\n        !query?.(editor, event)\n      ) {\n        return;\n      }\n\n      const insertedTabbableEntries = insertTabbableEntries?.(\n        editor,\n        event\n      ) as TabbableEntry[];\n\n      if (\n        globalEventListener &&\n        event.target &&\n        ![\n          editorDOMNode,\n          ...insertedTabbableEntries.map(({ domNode }) => domNode),\n        ].some((container) => container.contains(event.target as Node))\n      ) {\n        return;\n      }\n\n      const tabbableDOMNodes = tabbable(editorDOMNode) as HTMLElement[];\n\n      const defaultTabbableEntries = tabbableDOMNodes\n        .map((domNode) => {\n          const slateNode = toSlateNode(editor, domNode);\n          if (!slateNode) return;\n          return {\n            domNode,\n            slateNode,\n            path: findNodePath(editor, slateNode),\n          } as TabbableEntry;\n        })\n        .filter(\n          (entry) => entry && isTabbable?.(editor, entry)\n        ) as TabbableEntry[];\n\n      const tabbableEntries = [\n        ...insertedTabbableEntries,\n        ...defaultTabbableEntries,\n      ].sort((a, b) => Path.compare(a.path, b.path));\n\n      const { activeElement } = document;\n      const activeTabbableEntry =\n        (activeElement &&\n          tabbableEntries.find((entry) => entry.domNode === activeElement)) ??\n        null;\n\n      const tabDestination = findTabDestination(editor, {\n        tabbableEntries,\n        activeTabbableEntry,\n        direction: event.shiftKey ? 'backward' : 'forward',\n      });\n\n      if (tabDestination) {\n        event.preventDefault();\n\n        switch (tabDestination.type) {\n          case 'path': {\n            focusEditor(editor, {\n              anchor: { path: tabDestination.path, offset: 0 },\n              focus: { path: tabDestination.path, offset: 0 },\n            });\n            break;\n          }\n\n          case 'dom-node': {\n            tabDestination.domNode.focus();\n            break;\n          }\n        }\n\n        return;\n      }\n\n      tabbableDOMNodes.forEach((domNode) => {\n        const oldTabIndex = domNode.getAttribute('tabindex');\n        domNode.setAttribute('tabindex', '-1');\n\n        setTimeout(() => {\n          if (oldTabIndex) {\n            domNode.setAttribute('tabindex', oldTabIndex);\n          } else {\n            domNode.removeAttribute('tabindex');\n          }\n        }, 0);\n      });\n    };\n\n    const eventListenerNode = globalEventListener\n      ? document.body\n      : editorDOMNode;\n\n    eventListenerNode.addEventListener('keydown', handler, true);\n    return () =>\n      eventListenerNode.removeEventListener('keydown', handler, true);\n  }, [editor, globalEventListener, isTabbable, insertTabbableEntries, query]);\n\n  return null;\n}\n","import { createPluginFactory, isVoid } from '@udecode/plate-common';\n\nimport { KEY_TABBABLE } from './constants';\nimport { TabbableEffects } from './TabbableEffects';\nimport { TabbablePlugin } from './types';\n\nexport const createTabbablePlugin = createPluginFactory<TabbablePlugin>({\n  key: KEY_TABBABLE,\n  renderAfterEditable: TabbableEffects,\n  options: {\n    query: () => true,\n    globalEventListener: false,\n    insertTabbableEntries: () => [],\n    isTabbable: (editor, tabbableEntry) =>\n      isVoid(editor, tabbableEntry.slateNode),\n  },\n});\n"],"names":["KEY_TABBABLE","findTabDestination","editor","tabbableEntries","activeTabbableEntry","direction","_editor$selection","_editor$selection$anc","activeTabbableEntryIndex","indexOf","nextTabbableEntryIndex","nextTabbableEntry","Path","equals","path","type","domNode","pointAfter","getPointAfter","getPoint","selectionPath","selection","anchor","find","entry","isBefore","reverse","TabbableEffects","useEditorState","query","globalEventListener","insertTabbableEntries","isTabbable","getPluginOptions","useEffect","editorDOMNode","toDOMNode","handler","event","_ref","key","defaultPrevented","insertedTabbableEntries","target","map","some","container","contains","tabbableDOMNodes","tabbable","defaultTabbableEntries","slateNode","toSlateNode","findNodePath","filter","sort","a","b","compare","activeElement","document","tabDestination","shiftKey","preventDefault","focusEditor","offset","focus","forEach","oldTabIndex","getAttribute","setAttribute","setTimeout","removeAttribute","eventListenerNode","body","addEventListener","removeEventListener","createTabbablePlugin","createPluginFactory","renderAfterEditable","options","tabbableEntry","isVoid"],"mappings":";;;;;AAAO,MAAMA,YAAY,GAAG;;ACgBfC,MAAAA,kBAAkB,GAAGA,CAChCC,MAAsB,EACtB;EAAEC,eAAe;EAAEC,mBAAmB;AAAEC,EAAAA,SAAAA;AAAqC,CAAC,KACpD;EAAA,IAAAC,iBAAA,EAAAC,qBAAA,CAAA;AAC1B,EAAA,IAAIH,mBAAmB,EAAE;AACvB;AACA,IAAA,MAAMI,wBAAwB,GAC5BL,eAAe,CAACM,OAAO,CAACL,mBAAmB,CAAC,CAAA;AAC9C,IAAA,MAAMM,sBAAsB,GAC1BF,wBAAwB,IAAIH,SAAS,KAAK,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AAC/D,IAAA,MAAMM,iBAAiB,GAAGR,eAAe,CAACO,sBAAsB,CAAC,CAAA;;AAEjE;AACA,IAAA,IACEC,iBAAiB,IACjBC,IAAI,CAACC,MAAM,CAACT,mBAAmB,CAACU,IAAI,EAAEH,iBAAiB,CAACG,IAAI,CAAC,EAC7D;MACA,OAAO;AACLC,QAAAA,IAAI,EAAE,UAAU;QAChBC,OAAO,EAAEL,iBAAiB,CAACK,OAAAA;OAC5B,CAAA;AACH,KAAA;;AAEA;IACA,IAAIX,SAAS,KAAK,SAAS,EAAE;MAC3B,MAAMY,UAAU,GAAGC,aAAa,CAAChB,MAAM,EAAEE,mBAAmB,CAACU,IAAI,CAAC,CAAA;AAClE,MAAA,IAAI,CAACG,UAAU,EAAE,OAAO,IAAI,CAAA;MAC5B,OAAO;AACLF,QAAAA,IAAI,EAAE,MAAM;QACZD,IAAI,EAAEG,UAAU,CAACH,IAAAA;OAClB,CAAA;AACH,KAAA;IAEA,OAAO;AACLC,MAAAA,IAAI,EAAE,MAAM;MACZD,IAAI,EAAEK,QAAQ,CAACjB,MAAM,EAAEE,mBAAmB,CAACU,IAAI,CAAC,CAACA,IAAAA;KAClD,CAAA;AACH,GAAA;EAEA,MAAMM,aAAa,GAAG,CAAAd,CAAAA,iBAAA,GAAAJ,MAAM,CAACmB,SAAS,MAAA,IAAA,IAAAf,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAAC,qBAAA,GAAhBD,iBAAA,CAAkBgB,MAAM,MAAAf,IAAAA,IAAAA,qBAAA,uBAAxBA,qBAAA,CAA0BO,IAAI,KAAI,EAAE,CAAA;;AAE1D;EACA,MAAMH,iBAAiB,GACrBN,SAAS,KAAK,SAAS,GACnBF,eAAe,CAACoB,IAAI,CACjBC,KAAK,IAAK,CAACZ,IAAI,CAACa,QAAQ,CAACD,KAAK,CAACV,IAAI,EAAEM,aAAa,CACrD,CAAC,GACD,CAAC,GAAGjB,eAAe,CAAC,CACjBuB,OAAO,EAAE,CACTH,IAAI,CAAEC,KAAK,IAAKZ,IAAI,CAACa,QAAQ,CAACD,KAAK,CAACV,IAAI,EAAEM,aAAa,CAAC,CAAC,CAAA;;AAElE;AACA,EAAA,IAAIT,iBAAiB,EAAE;IACrB,OAAO;AACLI,MAAAA,IAAI,EAAE,UAAU;MAChBC,OAAO,EAAEL,iBAAiB,CAACK,OAAAA;KAC5B,CAAA;AACH,GAAA;;AAEA;AACA,EAAA,OAAO,IAAI,CAAA;AACb;;AC7DO,SAASW,eAAeA,GAAG;AAChC,EAAA,MAAMzB,MAAM,GAAG0B,cAAc,EAAE,CAAA;EAC/B,MAAM;IAAEC,KAAK;IAAEC,mBAAmB;IAAEC,qBAAqB;AAAEC,IAAAA,UAAAA;AAAW,GAAC,GACrEC,gBAAgB,CAAiB/B,MAAM,EAAEF,YAAY,CAAC,CAAA;AAExDkC,EAAAA,SAAS,CAAC,MAAM;AACd,IAAA,MAAMC,aAAa,GAAGC,SAAS,CAAClC,MAAM,EAAEA,MAAM,CAAC,CAAA;IAC/C,IAAI,CAACiC,aAAa,EAAE,OAAA;IAEpB,MAAME,OAAO,GAAIC,KAAoB,IAAK;AAAA,MAAA,IAAAC,IAAA,CAAA;MACxC,IACED,KAAK,CAACE,GAAG,KAAK,KAAK,IACnBF,KAAK,CAACG,gBAAgB,IACtB,EAACZ,KAAK,KAAA,IAAA,IAALA,KAAK,KAALA,KAAAA,CAAAA,IAAAA,KAAK,CAAG3B,MAAM,EAAEoC,KAAK,CAAC,CACvB,EAAA;AACA,QAAA,OAAA;AACF,OAAA;MAEA,MAAMI,uBAAuB,GAAGX,qBAAqB,KAArBA,IAAAA,IAAAA,qBAAqB,KAArBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAqB,CACnD7B,MAAM,EACNoC,KACF,CAAoB,CAAA;AAEpB,MAAA,IACER,mBAAmB,IACnBQ,KAAK,CAACK,MAAM,IACZ,CAAC,CACCR,aAAa,EACb,GAAGO,uBAAuB,CAACE,GAAG,CAAC,CAAC;AAAE5B,QAAAA,OAAAA;AAAQ,OAAC,KAAKA,OAAO,CAAC,CACzD,CAAC6B,IAAI,CAAEC,SAAS,IAAKA,SAAS,CAACC,QAAQ,CAACT,KAAK,CAACK,MAAc,CAAC,CAAC,EAC/D;AACA,QAAA,OAAA;AACF,OAAA;AAEA,MAAA,MAAMK,gBAAgB,GAAGC,QAAQ,CAACd,aAAa,CAAkB,CAAA;AAEjE,MAAA,MAAMe,sBAAsB,GAAGF,gBAAgB,CAC5CJ,GAAG,CAAE5B,OAAO,IAAK;AAChB,QAAA,MAAMmC,SAAS,GAAGC,WAAW,CAAClD,MAAM,EAAEc,OAAO,CAAC,CAAA;QAC9C,IAAI,CAACmC,SAAS,EAAE,OAAA;QAChB,OAAO;UACLnC,OAAO;UACPmC,SAAS;AACTrC,UAAAA,IAAI,EAAEuC,YAAY,CAACnD,MAAM,EAAEiD,SAAS,CAAA;SACrC,CAAA;AACH,OAAC,CAAC,CACDG,MAAM,CACJ9B,KAAK,IAAKA,KAAK,KAAIQ,UAAU,aAAVA,UAAU,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAVA,UAAU,CAAG9B,MAAM,EAAEsB,KAAK,CAAC,CACjD,CAAoB,CAAA;AAEtB,MAAA,MAAMrB,eAAe,GAAG,CACtB,GAAGuC,uBAAuB,EAC1B,GAAGQ,sBAAsB,CAC1B,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK7C,IAAI,CAAC8C,OAAO,CAACF,CAAC,CAAC1C,IAAI,EAAE2C,CAAC,CAAC3C,IAAI,CAAC,CAAC,CAAA;MAE9C,MAAM;AAAE6C,QAAAA,aAAAA;AAAc,OAAC,GAAGC,QAAQ,CAAA;MAClC,MAAMxD,mBAAmB,IAAAmC,IAAA,GACtBoB,aAAa,IACZxD,eAAe,CAACoB,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACR,OAAO,KAAK2C,aAAa,CAAC,cAAApB,IAAA,KAAA,KAAA,CAAA,GAAAA,IAAA,GAClE,IAAI,CAAA;AAEN,MAAA,MAAMsB,cAAc,GAAG5D,kBAAkB,CAACC,MAAM,EAAE;QAChDC,eAAe;QACfC,mBAAmB;AACnBC,QAAAA,SAAS,EAAEiC,KAAK,CAACwB,QAAQ,GAAG,UAAU,GAAG,SAAA;AAC3C,OAAC,CAAC,CAAA;AAEF,MAAA,IAAID,cAAc,EAAE;QAClBvB,KAAK,CAACyB,cAAc,EAAE,CAAA;QAEtB,QAAQF,cAAc,CAAC9C,IAAI;AACzB,UAAA,KAAK,MAAM;AAAE,YAAA;cACXiD,WAAW,CAAC9D,MAAM,EAAE;AAClBoB,gBAAAA,MAAM,EAAE;kBAAER,IAAI,EAAE+C,cAAc,CAAC/C,IAAI;AAAEmD,kBAAAA,MAAM,EAAE,CAAA;iBAAG;AAChDC,gBAAAA,KAAK,EAAE;kBAAEpD,IAAI,EAAE+C,cAAc,CAAC/C,IAAI;AAAEmD,kBAAAA,MAAM,EAAE,CAAA;AAAE,iBAAA;AAChD,eAAC,CAAC,CAAA;AACF,cAAA,MAAA;AACF,aAAA;AAEA,UAAA,KAAK,UAAU;AAAE,YAAA;AACfJ,cAAAA,cAAc,CAAC7C,OAAO,CAACkD,KAAK,EAAE,CAAA;AAC9B,cAAA,MAAA;AACF,aAAA;AACF,SAAA;AAEA,QAAA,OAAA;AACF,OAAA;AAEAlB,MAAAA,gBAAgB,CAACmB,OAAO,CAAEnD,OAAO,IAAK;AACpC,QAAA,MAAMoD,WAAW,GAAGpD,OAAO,CAACqD,YAAY,CAAC,UAAU,CAAC,CAAA;AACpDrD,QAAAA,OAAO,CAACsD,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;AAEtCC,QAAAA,UAAU,CAAC,MAAM;AACf,UAAA,IAAIH,WAAW,EAAE;AACfpD,YAAAA,OAAO,CAACsD,YAAY,CAAC,UAAU,EAAEF,WAAW,CAAC,CAAA;AAC/C,WAAC,MAAM;AACLpD,YAAAA,OAAO,CAACwD,eAAe,CAAC,UAAU,CAAC,CAAA;AACrC,WAAA;SACD,EAAE,CAAC,CAAC,CAAA;AACP,OAAC,CAAC,CAAA;KACH,CAAA;IAED,MAAMC,iBAAiB,GAAG3C,mBAAmB,GACzC8B,QAAQ,CAACc,IAAI,GACbvC,aAAa,CAAA;IAEjBsC,iBAAiB,CAACE,gBAAgB,CAAC,SAAS,EAAEtC,OAAO,EAAE,IAAI,CAAC,CAAA;IAC5D,OAAO,MACLoC,iBAAiB,CAACG,mBAAmB,CAAC,SAAS,EAAEvC,OAAO,EAAE,IAAI,CAAC,CAAA;AACnE,GAAC,EAAE,CAACnC,MAAM,EAAE4B,mBAAmB,EAAEE,UAAU,EAAED,qBAAqB,EAAEF,KAAK,CAAC,CAAC,CAAA;AAE3E,EAAA,OAAO,IAAI,CAAA;AACb;;AC1HagD,MAAAA,oBAAoB,GAAGC,mBAAmB,CAAiB;AACtEtC,EAAAA,GAAG,EAAExC,YAAY;AACjB+E,EAAAA,mBAAmB,EAAEpD,eAAe;AACpCqD,EAAAA,OAAO,EAAE;IACPnD,KAAK,EAAEA,MAAM,IAAI;AACjBC,IAAAA,mBAAmB,EAAE,KAAK;IAC1BC,qBAAqB,EAAEA,MAAM,EAAE;AAC/BC,IAAAA,UAAU,EAAEA,CAAC9B,MAAM,EAAE+E,aAAa,KAChCC,MAAM,CAAChF,MAAM,EAAE+E,aAAa,CAAC9B,SAAS,CAAA;AAC1C,GAAA;AACF,CAAC;;;;"}