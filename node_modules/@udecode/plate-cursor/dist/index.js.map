{"version":3,"file":"index.js","sources":["../src/hooks/useRequestReRender.ts","../src/hooks/useRefreshOnResize.ts","../src/queries/getCaretPosition.ts","../src/queries/getCursorOverlayState.ts","../src/queries/getSelectionRects.ts","../src/hooks/useCursorOverlayPositions.ts","../src/components/CursorOverlay.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\n\nexport const useRequestReRender = () => {\n  const [, setUpdateCounter] = useState(0);\n  const animationFrameRef = useRef<number | null>(null);\n\n  const requestReRender = useCallback((immediate = false) => {\n    if (animationFrameRef.current && !immediate) {\n      return;\n    }\n\n    if (!immediate) {\n      animationFrameRef.current = requestAnimationFrame(() => {\n        setUpdateCounter((state) => state + 1);\n        animationFrameRef.current = null;\n      });\n      return;\n    }\n\n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n      animationFrameRef.current = null;\n    }\n\n    setUpdateCounter((state) => state + 1);\n  }, []);\n\n  useEffect(() => {\n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n      animationFrameRef.current = null;\n    }\n  });\n\n  useEffect(\n    () => () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    },\n    []\n  );\n\n  return requestReRender;\n};\n","import { MutableRefObject, useCallback, useEffect } from 'react';\nimport { Range } from 'slate';\n\nimport { CursorOverlayProps } from '../components';\nimport { SelectionRect } from '../types';\nimport { useRequestReRender } from './useRequestReRender';\n\nexport interface UseRefreshOnResizeOptions\n  extends Pick<CursorOverlayProps, 'refreshOnResize' | 'containerRef'> {\n  selectionRectCache: MutableRefObject<WeakMap<Range, SelectionRect[]>>;\n}\n\nexport const useRefreshOnResize = ({\n  containerRef,\n  refreshOnResize,\n  selectionRectCache,\n}: UseRefreshOnResizeOptions) => {\n  const requestReRender = useRequestReRender();\n\n  // Reset the selection rect cache and request re-render.\n  const refresh = useCallback(\n    (sync = false) => {\n      selectionRectCache.current = new WeakMap();\n      requestReRender(sync);\n    },\n    [requestReRender, selectionRectCache]\n  );\n\n  // Refresh on container resize\n  useEffect(() => {\n    if (!refreshOnResize || !containerRef?.current) {\n      return;\n    }\n\n    const resizeObserver = new ResizeObserver(() => refresh());\n    resizeObserver.observe(containerRef.current);\n    return () => resizeObserver.disconnect();\n  }, [containerRef, refresh, refreshOnResize]);\n\n  return {\n    refresh,\n  };\n};\n","import { Range } from 'slate';\n\nimport { CaretPosition, SelectionRect } from '../types';\n\n/**\n * Get the caret position of a range from selectionRects.\n */\nexport const getCaretPosition = (\n  selectionRects: SelectionRect[],\n  range: Range\n): CaretPosition | null => {\n  const isCollapsed = range && Range.isCollapsed(range);\n  const isBackward = range && Range.isBackward(range);\n  const anchorRect = selectionRects[isBackward ? 0 : selectionRects.length - 1];\n\n  if (!anchorRect) {\n    return null;\n  }\n\n  return {\n    height: anchorRect.height,\n    top: anchorRect.top,\n    left: anchorRect.left + (isBackward || isCollapsed ? 0 : anchorRect.width),\n  };\n};\n","import { UnknownObject } from '@udecode/plate-common';\n\nimport { CursorOverlayProps } from '../components';\nimport { FROZEN_EMPTY_ARRAY } from '../hooks';\nimport { CursorOverlayState, SelectionRect } from '../types';\nimport { getCaretPosition } from './getCaretPosition';\n\n/**\n * Get cursor overlay state from selection rects.\n */\nexport const getCursorOverlayState = <\n  TCursorData extends UnknownObject = UnknownObject,\n>({\n  cursors: cursorStates,\n  selectionRects,\n}: Pick<CursorOverlayProps<TCursorData>, 'cursors'> & {\n  selectionRects: Record<string, SelectionRect[]>;\n}): CursorOverlayState<TCursorData>[] => {\n  if (!cursorStates) return [];\n\n  return Object.entries(cursorStates).map(([key, cursorState]) => {\n    const selection = cursorState?.selection ?? null;\n    const rects = selectionRects[key] ?? FROZEN_EMPTY_ARRAY;\n\n    const caretPosition = selection ? getCaretPosition(rects, selection) : null;\n\n    return {\n      ...cursorState,\n      selection,\n      caretPosition,\n      selectionRects: rects,\n    };\n  });\n};\n","import {\n  getNodeEntries,\n  isText,\n  toDOMNode,\n  toDOMRange,\n  TReactEditor,\n  Value,\n} from '@udecode/plate-common';\nimport { Path, Range } from 'slate';\n\nimport { SelectionRect } from '../types';\n\nexport const getSelectionRects = <V extends Value>(\n  editor: TReactEditor<V>,\n  {\n    range,\n    xOffset,\n    yOffset,\n  }: {\n    range: Range;\n    xOffset: number;\n    yOffset: number;\n  }\n): SelectionRect[] => {\n  const [start, end] = Range.edges(range);\n  const domRange = toDOMRange(editor, range);\n  if (!domRange) {\n    return [];\n  }\n\n  const selectionRects: SelectionRect[] = [];\n  const textEntries = getNodeEntries(editor, {\n    at: range,\n    match: isText,\n  });\n\n  for (const [textNode, textPath] of textEntries) {\n    const domNode = toDOMNode(editor, textNode);\n\n    // Fix: failed to execute 'selectNode' on 'Range': the given Node has no parent\n    if (!domNode || !domNode.parentElement) {\n      return [];\n    }\n\n    const isStartNode = Path.equals(textPath, start.path);\n    const isEndNode = Path.equals(textPath, end.path);\n\n    let clientRects: DOMRectList | null = null;\n    if (isStartNode || isEndNode) {\n      const nodeRange = document.createRange();\n\n      nodeRange.selectNode(domNode);\n\n      if (isStartNode) {\n        nodeRange.setStart(domRange.startContainer, domRange.startOffset);\n      }\n      if (isEndNode) {\n        nodeRange.setEnd(domRange.endContainer, domRange.endOffset);\n      }\n\n      clientRects = nodeRange.getClientRects();\n    } else {\n      clientRects = domNode.getClientRects();\n    }\n\n    for (let i = 0; i < clientRects.length; i++) {\n      const clientRect = clientRects.item(i);\n      if (!clientRect) {\n        continue;\n      }\n\n      selectionRects.push({\n        width: clientRect.width,\n        height: clientRect.height,\n        top: clientRect.top - yOffset,\n        left: clientRect.left - xOffset,\n      });\n    }\n  }\n\n  return selectionRects;\n};\n","import { useCallback, useMemo, useRef, useState } from 'react';\nimport {\n  UnknownObject,\n  useIsomorphicLayoutEffect,\n  usePlateEditorRef,\n} from '@udecode/plate-common';\nimport { Range } from 'slate';\n\nimport { CursorOverlayProps } from '../components/CursorOverlay';\nimport { getCursorOverlayState } from '../queries/getCursorOverlayState';\nimport { getSelectionRects } from '../queries/getSelectionRects';\nimport { CursorState, SelectionRect } from '../types';\nimport { useRefreshOnResize } from './useRefreshOnResize';\n\nexport const FROZEN_EMPTY_ARRAY = Object.freeze(\n  []\n) as unknown as SelectionRect[];\n\nexport const useCursorOverlayPositions = <TCursorData extends UnknownObject>({\n  containerRef,\n  cursors: cursorStates,\n  refreshOnResize = true,\n}: CursorOverlayProps<TCursorData> = {}) => {\n  const editor = usePlateEditorRef();\n\n  const selectionRectCache = useRef<WeakMap<Range, SelectionRect[]>>(\n    new WeakMap()\n  );\n\n  const [selectionRects, setSelectionRects] = useState<\n    Record<string, SelectionRect[]>\n  >({});\n\n  const updateSelectionRects = useCallback(() => {\n    // We have a container ref but the ref is null => container\n    // isn't mounted to we can't calculate the selection rects.\n    if (!containerRef?.current) return;\n    if (!cursorStates) return;\n\n    let xOffset = 0;\n    let yOffset = 0;\n    if (containerRef) {\n      const contentRect = containerRef.current!.getBoundingClientRect();\n      xOffset = contentRect.x;\n      yOffset = contentRect.y;\n    }\n\n    let selectionRectsChanged =\n      Object.keys(selectionRects).length !== Object.keys(cursorStates).length;\n\n    const getCachedSelectionRects = ({\n      cursor,\n    }: {\n      cursor: CursorState<TCursorData>;\n    }) => {\n      const range = cursor.selection;\n\n      if (!range) {\n        return FROZEN_EMPTY_ARRAY;\n      }\n\n      const cached = selectionRectCache.current.get(range);\n      if (cached) {\n        return cached;\n      }\n\n      const rects = getSelectionRects(editor, { range, xOffset, yOffset });\n      selectionRectsChanged = true;\n      selectionRectCache.current.set(range, rects);\n\n      return rects;\n    };\n\n    const updated: Record<string, SelectionRect[]> = Object.fromEntries(\n      Object.entries(cursorStates).map(([key, cursor]) => [\n        key,\n        getCachedSelectionRects({\n          cursor,\n        }),\n      ])\n    );\n\n    if (selectionRectsChanged) {\n      setSelectionRects(updated);\n    }\n  }, [containerRef, cursorStates, editor, selectionRects]);\n\n  // Update selection rects after paint\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useIsomorphicLayoutEffect(() => {\n    updateSelectionRects();\n  });\n\n  const cursors = useMemo(\n    () =>\n      getCursorOverlayState({\n        selectionRects,\n        cursors: cursorStates,\n      }),\n    [cursorStates, selectionRects]\n  );\n\n  const { refresh } = useRefreshOnResize({\n    containerRef,\n    selectionRectCache,\n    refreshOnResize,\n  });\n\n  return { refresh, cursors };\n};\n","import React, { RefObject } from 'react';\nimport {\n  ClassNames,\n  UnknownObject,\n  usePlateSelectors,\n} from '@udecode/plate-common';\n\nimport { useCursorOverlayPositions } from '../hooks/useCursorOverlayPositions';\nimport {\n  CursorData,\n  CursorOverlayState,\n  CursorState,\n  SelectionRect,\n} from '../types';\n\nexport interface CursorProps<TCursorData extends UnknownObject = UnknownObject>\n  extends CursorOverlayState<TCursorData>,\n    ClassNames<{\n      caret: string;\n      selectionRect: string;\n    }> {\n  /**\n   * Whether to disable the caret.\n   */\n  disableCaret?: boolean;\n\n  /**\n   * Whether to disable the selection rects.\n   */\n  disableSelection?: boolean;\n\n  /**\n   * Custom caret component.\n   * For example, you could display a label next to the caret.\n   * @default styled div\n   */\n  onRenderCaret?: React.FC<\n    Pick<CursorProps<TCursorData>, 'data' | 'caretPosition'>\n  >;\n\n  /**\n   * Overrides `Caret` component\n   */\n  onRenderSelectionRect?: React.FC<\n    Pick<CursorProps<TCursorData>, 'data'> & {\n      selectionRect: SelectionRect;\n    }\n  >;\n}\n\nexport interface CursorOverlayProps<\n  TCursorData extends UnknownObject = UnknownObject,\n> extends Pick<\n    CursorProps<CursorData>,\n    | 'disableCaret'\n    | 'disableSelection'\n    | 'onRenderCaret'\n    | 'onRenderSelectionRect'\n    | 'classNames'\n  > {\n  /**\n   * Cursor states to use for calculating the overlay positions, by key.\n   */\n  cursors?: Record<string, CursorState<TCursorData>>;\n\n  /**\n   * Container the overlay will be rendered in.\n   * If set, all returned overlay positions will be relative to this container.\n   */\n  containerRef?: RefObject<HTMLElement>;\n\n  /**\n   * Whether to refresh the cursor overlay positions on container resize.\n   * @default true\n   */\n  refreshOnResize?: boolean;\n\n  /**\n   * Overrides `Cursor` component.\n   */\n  onRenderCursor?: React.FC<CursorProps>;\n}\n\nexport function CursorOverlayContent<\n  TCursorData extends UnknownObject = UnknownObject,\n>({\n  classNames,\n  onRenderCursor: CursorComponent,\n  onRenderSelectionRect,\n  onRenderCaret,\n  ...props\n}: CursorOverlayProps<TCursorData>) {\n  const { disableCaret, disableSelection } = props;\n\n  const { cursors } = useCursorOverlayPositions(props);\n\n  const cursorProps = {\n    classNames,\n    onRenderSelectionRect,\n    onRenderCaret,\n    disableCaret,\n    disableSelection,\n  };\n\n  if (!CursorComponent) return null;\n\n  return (\n    <>\n      {cursors.map((cursor) => (\n        <CursorComponent key={cursor.key} {...cursorProps} {...cursor} />\n      ))}\n    </>\n  );\n}\n\nexport function CursorOverlay<\n  TCursorData extends UnknownObject = UnknownObject,\n>(props: CursorOverlayProps<TCursorData>) {\n  const isRendered = usePlateSelectors().isRendered();\n\n  if (!isRendered) return null;\n\n  return <CursorOverlayContent {...props} />;\n}\n"],"names":["useRequestReRender","setUpdateCounter","useState","animationFrameRef","useRef","requestReRender","useCallback","immediate","current","requestAnimationFrame","state","cancelAnimationFrame","useEffect","useRefreshOnResize","containerRef","refreshOnResize","selectionRectCache","refresh","sync","WeakMap","resizeObserver","ResizeObserver","observe","disconnect","getCaretPosition","selectionRects","range","isCollapsed","Range","isBackward","anchorRect","length","height","top","left","width","getCursorOverlayState","cursors","cursorStates","Object","entries","map","key","cursorState","_cursorState$selectio","_selectionRects$key","selection","rects","FROZEN_EMPTY_ARRAY","caretPosition","getSelectionRects","editor","xOffset","yOffset","start","end","edges","domRange","toDOMRange","textEntries","getNodeEntries","at","match","isText","textNode","textPath","domNode","toDOMNode","parentElement","isStartNode","Path","equals","path","isEndNode","clientRects","nodeRange","document","createRange","selectNode","setStart","startContainer","startOffset","setEnd","endContainer","endOffset","getClientRects","i","clientRect","item","push","freeze","useCursorOverlayPositions","usePlateEditorRef","setSelectionRects","updateSelectionRects","contentRect","getBoundingClientRect","x","y","selectionRectsChanged","keys","getCachedSelectionRects","cursor","cached","get","set","updated","fromEntries","useIsomorphicLayoutEffect","useMemo","CursorOverlayContent","classNames","onRenderCursor","CursorComponent","onRenderSelectionRect","onRenderCaret","props","disableCaret","disableSelection","cursorProps","React","createElement","Fragment","_extends","CursorOverlay","isRendered","usePlateSelectors"],"mappings":"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"}