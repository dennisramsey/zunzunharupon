export declare const useColorDropdownMenuState: ({ nodeType, closeOnSelect, colors, customColors, }: {
    nodeType: string;
    colors: {
        name: string;
        value: string;
        isBrightColor: boolean;
    }[];
    customColors: {
        name: string;
        value: string;
        isBrightColor: boolean;
    }[];
    closeOnSelect?: boolean | undefined;
}) => {
    open: boolean;
    onToggle: (value?: boolean) => void;
    selectedColor: string | undefined;
    color: string;
    updateColorAndClose: (value: string) => void;
    updateColor: (value: string) => void;
    clearColor: () => void;
    colors: {
        name: string;
        value: string;
        isBrightColor: boolean;
    }[];
    customColors: {
        name: string;
        value: string;
        isBrightColor: boolean;
    }[];
};
export declare const useColorDropdownMenu: ({ open, onToggle, }: ReturnType<typeof useColorDropdownMenuState>) => {
    menuProps: {
        open: boolean;
        onOpenChange: (value?: boolean) => void;
    };
    buttonProps: {
        pressed: boolean;
    };
};
//# sourceMappingURL=useColorDropdownMenu.d.ts.map