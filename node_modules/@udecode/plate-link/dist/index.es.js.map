{"version":3,"file":"index.es.js","sources":["../src/utils/createLinkNode.ts","../src/utils/getLinkAttributes.ts","../src/components/useLink.ts","../src/components/useLinkToolbarButton.ts","../src/components/FloatingLink/floatingLinkStore.ts","../src/components/FloatingLink/FloatingLinkNewTabInput.tsx","../src/components/FloatingLink/FloatingLinkUrlInput.tsx","../src/components/FloatingLink/LinkOpenButton.tsx","../src/utils/triggerFloatingLinkEdit.ts","../src/transforms/insertLink.ts","../src/transforms/unwrapLink.ts","../src/transforms/upsertLinkText.ts","../src/transforms/wrapLink.ts","../src/transforms/upsertLink.ts","../src/transforms/submitFloatingLink.ts","../src/components/FloatingLink/useFloatingLinkEnter.ts","../src/components/FloatingLink/useFloatingLinkEscape.ts","../src/components/FloatingLink/useVirtualFloatingLink.ts","../src/components/FloatingLink/useFloatingLinkEdit.ts","../src/utils/triggerFloatingLinkInsert.ts","../src/components/FloatingLink/useFloatingLinkInsert.ts","../src/utils/triggerFloatingLink.ts","../src/utils/validateUrl.ts","../src/withLink.ts","../src/createLinkPlugin.ts"],"sourcesContent":["import {\n  getPluginType,\n  PlateEditor,\n  TText,\n  Value,\n} from '@udecode/plate-common';\n\nimport { ELEMENT_LINK } from '../createLinkPlugin';\nimport { TLinkElement } from '../types';\n\nexport interface CreateLinkNodeOptions {\n  url: string;\n  text?: string;\n  target?: string;\n  children?: TText[];\n}\n\nexport const createLinkNode = <V extends Value>(\n  editor: PlateEditor<V>,\n  { url, text = '', target, children }: CreateLinkNodeOptions\n): TLinkElement => {\n  const type = getPluginType(editor, ELEMENT_LINK);\n\n  return {\n    type,\n    url,\n    target,\n    children: children ?? [{ text }],\n  };\n};\n","import {\n  getPluginOptions,\n  PlateEditor,\n  sanitizeUrl,\n  Value,\n} from '@udecode/plate-common';\n\nimport { ELEMENT_LINK, LinkPlugin } from '../createLinkPlugin';\nimport { TLinkElement } from '../types';\n\nexport const getLinkAttributes = <V extends Value>(\n  editor: PlateEditor<V>,\n  link: TLinkElement\n) => {\n  const { allowedSchemes, defaultLinkAttributes, dangerouslySkipSanitization } =\n    getPluginOptions<LinkPlugin, V>(editor, ELEMENT_LINK);\n\n  const attributes = { ...defaultLinkAttributes };\n\n  const href = dangerouslySkipSanitization\n    ? link.url\n    : sanitizeUrl(link.url, { allowedSchemes }) || undefined;\n\n  // Avoid passing `undefined` for href or target\n  if (href !== undefined) {\n    attributes.href = href;\n  }\n\n  if ('target' in link) {\n    attributes.target = link.target;\n  }\n\n  return attributes;\n};\n","import { usePlateEditorRef } from '@udecode/plate-common';\n\nimport { TLinkElement } from '../types';\nimport { getLinkAttributes } from '../utils/index';\n\nexport const useLink = ({ element }: { element: TLinkElement }) => {\n  const editor = usePlateEditorRef();\n\n  return {\n    props: {\n      ...getLinkAttributes(editor, element),\n      // quick fix: hovering <a> with href loses the editor focus\n      onMouseOver: (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n        e.stopPropagation();\n      },\n    },\n  };\n};\n","import {\n  getPluginType,\n  someNode,\n  usePlateEditorRef,\n  usePlateEditorState,\n} from '@udecode/plate-common';\n\nimport { ELEMENT_LINK, triggerFloatingLink } from '../index';\n\nexport const useLinkToolbarButtonState = () => {\n  const editor = usePlateEditorState();\n  const pressed =\n    !!editor?.selection &&\n    someNode(editor, { match: { type: getPluginType(editor, ELEMENT_LINK) } });\n\n  return {\n    pressed,\n  };\n};\n\nexport const useLinkToolbarButton = (\n  state: ReturnType<typeof useLinkToolbarButtonState>\n) => {\n  const editor = usePlateEditorRef();\n\n  return {\n    props: {\n      pressed: state.pressed,\n      onClick: (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        triggerFloatingLink(editor, { focused: true });\n      },\n    },\n  };\n};\n","import { createStore } from '@udecode/plate-common';\n\nexport type FloatingLinkMode = '' | 'insert' | 'edit';\n\nexport const floatingLinkStore = createStore('floatingLink')({\n  openEditorId: null as null | string,\n  mouseDown: false,\n  updated: false,\n  url: '',\n  text: '',\n  newTab: false,\n  mode: '' as FloatingLinkMode,\n  isEditing: false,\n})\n  .extendActions((set) => ({\n    reset: () => {\n      set.url('');\n      set.text('');\n      set.newTab(false);\n      set.mode('');\n      set.isEditing(false);\n    },\n  }))\n  .extendActions((set) => ({\n    show: (mode: FloatingLinkMode, editorId: string) => {\n      set.mode(mode);\n      set.isEditing(false);\n      set.openEditorId(editorId);\n    },\n    hide: () => {\n      set.openEditorId(null);\n      set.reset();\n    },\n  }))\n  .extendSelectors((state) => ({\n    isOpen: (editorId: string) => state.openEditorId === editorId,\n  }));\n\nexport const floatingLinkActions = floatingLinkStore.set;\nexport const floatingLinkSelectors = floatingLinkStore.get;\nexport const useFloatingLinkSelectors = () => floatingLinkStore.use;\n","import {\n  ChangeEventHandler,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { createPrimitiveComponent } from '@udecode/plate-common';\n\nimport {\n  floatingLinkActions,\n  floatingLinkSelectors,\n  useFloatingLinkSelectors,\n} from './floatingLinkStore';\n\nexport const useFloatingLinkNewTabInputState = () => {\n  const updated = useFloatingLinkSelectors().updated();\n  const ref = useRef<HTMLInputElement>(null);\n  const [checked, setChecked] = useState<boolean>(\n    floatingLinkSelectors.newTab()\n  );\n\n  useEffect(() => {\n    if (ref.current && updated) {\n      setTimeout(() => {\n        ref.current?.focus();\n      }, 0);\n    }\n  }, [updated]);\n\n  return {\n    ref,\n    checked,\n    setChecked,\n  };\n};\n\nexport const useFloatingLinkNewTabInput = ({\n  checked,\n  ref,\n  setChecked,\n}: ReturnType<typeof useFloatingLinkNewTabInputState>) => {\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (e) => {\n      setChecked(e.target.checked);\n      floatingLinkActions.newTab(e.target.checked);\n    },\n    [setChecked]\n  );\n\n  return {\n    ref,\n    props: {\n      onChange,\n      checked,\n      type: 'checkbox',\n    },\n  };\n};\n\nexport const FloatingLinkNewTabInput = createPrimitiveComponent('input')({\n  propsHook: useFloatingLinkNewTabInput,\n  stateHook: useFloatingLinkNewTabInputState,\n});\n","import { ChangeEventHandler, useCallback, useEffect, useRef } from 'react';\nimport { createPrimitiveComponent } from '@udecode/plate-common';\n\nimport {\n  floatingLinkActions,\n  floatingLinkSelectors,\n  useFloatingLinkSelectors,\n} from './floatingLinkStore';\n\nexport const useFloatingLinkUrlInputState = () => {\n  const updated = useFloatingLinkSelectors().updated();\n  const ref = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (ref.current && updated) {\n      setTimeout(() => {\n        ref.current?.focus();\n      }, 0);\n    }\n  }, [updated]);\n\n  return {\n    ref,\n  };\n};\n\nexport const useFloatingLinkUrlInput = (\n  state: ReturnType<typeof useFloatingLinkUrlInputState>\n) => {\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((e) => {\n    floatingLinkActions.url(e.target.value);\n  }, []);\n\n  return {\n    ref: state.ref,\n    props: {\n      onChange,\n      defaultValue: floatingLinkSelectors.url(),\n    },\n  };\n};\n\nexport const FloatingLinkUrlInput = createPrimitiveComponent('input')({\n  propsHook: useFloatingLinkUrlInput,\n  stateHook: useFloatingLinkUrlInputState,\n});\n","import { useMemo } from 'react';\nimport {\n  createPrimitiveComponent,\n  findNode,\n  getPluginType,\n  usePlateEditorRef,\n  usePlateSelection,\n} from '@udecode/plate-common';\n\nimport { ELEMENT_LINK } from '../../createLinkPlugin';\nimport { TLinkElement } from '../../types';\nimport { getLinkAttributes } from '../../utils/index';\n\nexport const useLinkOpenButtonState = () => {\n  const editor = usePlateEditorRef();\n  const selection = usePlateSelection();\n\n  const entry = useMemo(\n    () =>\n      findNode<TLinkElement>(editor, {\n        match: { type: getPluginType(editor, ELEMENT_LINK) },\n      }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [editor, selection]\n  );\n\n  if (!entry) {\n    return {};\n  }\n\n  const [element] = entry;\n\n  return {\n    element,\n  };\n};\n\nexport const useLinkOpenButton = ({ element }: { element?: TLinkElement }) => {\n  const editor = usePlateEditorRef();\n\n  if (!element) {\n    return {\n      props: {},\n    };\n  }\n\n  const linkAttributes = getLinkAttributes(editor, element);\n\n  return {\n    props: {\n      ...linkAttributes,\n      target: '_blank',\n      'aria-label': 'Open link in a new tab',\n      onMouseOver: (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n        e.stopPropagation();\n      },\n    },\n  };\n};\n\nexport const LinkOpenButton = createPrimitiveComponent('a')({\n  stateHook: useLinkOpenButtonState,\n  propsHook: useLinkOpenButton,\n});\n","import {\n  findNode,\n  getEditorString,\n  getPluginType,\n  PlateEditor,\n  Value,\n} from '@udecode/plate-common';\n\nimport { floatingLinkActions } from '../components/FloatingLink/floatingLinkStore';\nimport { ELEMENT_LINK } from '../createLinkPlugin';\nimport { TLinkElement } from '../types';\n\nexport const triggerFloatingLinkEdit = <V extends Value>(\n  editor: PlateEditor<V>\n) => {\n  const entry = findNode<TLinkElement>(editor, {\n    match: { type: getPluginType(editor, ELEMENT_LINK) },\n  });\n  if (!entry) return;\n\n  const [link, path] = entry;\n\n  let text = getEditorString(editor, path);\n\n  floatingLinkActions.url(link.url);\n\n  floatingLinkActions.newTab(link.target === '_blank');\n\n  if (text === link.url) {\n    text = '';\n  }\n\n  floatingLinkActions.text(text);\n\n  floatingLinkActions.isEditing(true);\n\n  return true;\n};\n","import {\n  insertNodes,\n  InsertNodesOptions,\n  PlateEditor,\n  TText,\n  Value,\n} from '@udecode/plate-common';\n\nimport { TLinkElement } from '../types';\nimport { createLinkNode, CreateLinkNodeOptions } from '../utils/index';\n\n/**\n * Insert a link node.\n */\nexport const insertLink = <V extends Value>(\n  editor: PlateEditor<V>,\n  createLinkNodeOptions: CreateLinkNodeOptions,\n  options?: InsertNodesOptions<V>\n) => {\n  insertNodes<TLinkElement | TText>(\n    editor,\n    [createLinkNode(editor, createLinkNodeOptions)],\n    options as any\n  );\n};\n","import {\n  getAboveNode,\n  getPluginType,\n  isElement,\n  PlateEditor,\n  splitNodes,\n  unwrapNodes,\n  UnwrapNodesOptions,\n  Value,\n  withoutNormalizing,\n} from '@udecode/plate-common';\n\nimport { ELEMENT_LINK } from '../createLinkPlugin';\n\n/**\n * Unwrap link node.\n */\nexport const unwrapLink = <V extends Value>(\n  editor: PlateEditor<V>,\n  options?: UnwrapNodesOptions & {\n    split?: boolean;\n  }\n) => {\n  return withoutNormalizing(editor, () => {\n    if (options?.split) {\n      const linkAboveAnchor = getAboveNode(editor, {\n        at: editor.selection?.anchor,\n        match: { type: getPluginType(editor, ELEMENT_LINK) },\n      });\n\n      // anchor in link\n      if (linkAboveAnchor) {\n        splitNodes(editor, {\n          at: editor.selection?.anchor,\n          match: (n) =>\n            isElement(n) && n.type === getPluginType(editor, ELEMENT_LINK),\n        });\n        unwrapLink(editor, {\n          at: editor.selection?.anchor,\n        });\n        return true;\n      }\n      const linkAboveFocus = getAboveNode(editor, {\n        at: editor.selection?.focus,\n        match: { type: getPluginType(editor, ELEMENT_LINK) },\n      });\n\n      // focus in link\n      if (linkAboveFocus) {\n        splitNodes(editor, {\n          at: editor.selection?.focus,\n          match: (n) =>\n            isElement(n) && n.type === getPluginType(editor, ELEMENT_LINK),\n        });\n        unwrapLink(editor, {\n          at: editor.selection?.focus,\n        });\n        return true;\n      }\n    }\n\n    unwrapNodes(editor, {\n      match: { type: getPluginType(editor, ELEMENT_LINK) },\n      ...options,\n    });\n  });\n};\n","import {\n  getAboveNode,\n  getEditorString,\n  getPluginType,\n  PlateEditor,\n  replaceNodeChildren,\n  TText,\n  Value,\n} from '@udecode/plate-common';\n\nimport { ELEMENT_LINK } from '../createLinkPlugin';\nimport { TLinkElement } from '../types';\nimport { UpsertLinkOptions } from './upsertLink';\n\n/**\n * If the text is different than the link above text, replace link children by a new text.\n * The new text has the same marks than the first text replaced.\n */\nexport const upsertLinkText = <V extends Value>(\n  editor: PlateEditor<V>,\n  { text }: UpsertLinkOptions<V>\n) => {\n  const newLink = getAboveNode<TLinkElement>(editor, {\n    match: { type: getPluginType(editor, ELEMENT_LINK) },\n  });\n\n  if (newLink) {\n    const [newLinkNode, newLinkPath] = newLink;\n\n    if (text?.length && text !== getEditorString(editor, newLinkPath)) {\n      const firstText = newLinkNode.children[0];\n\n      // remove link children\n      replaceNodeChildren<TText>(editor, {\n        at: newLinkPath,\n        nodes: { ...firstText, text },\n        insertOptions: {\n          select: true,\n        },\n      });\n    }\n  }\n};\n","import {\n  getPluginType,\n  PlateEditor,\n  Value,\n  wrapNodes,\n  WrapNodesOptions,\n} from '@udecode/plate-common';\n\nimport { ELEMENT_LINK } from '../createLinkPlugin';\nimport { TLinkElement } from '../types';\n\nexport interface WrapLinkOptions<V extends Value = Value>\n  extends WrapNodesOptions<V> {\n  url: string;\n  target?: string;\n}\n\n/**\n * Wrap a link node with split.\n */\nexport const wrapLink = <V extends Value>(\n  editor: PlateEditor<V>,\n  { url, target, ...options }: WrapLinkOptions<V>\n) => {\n  wrapNodes<TLinkElement, Value>(\n    editor,\n    {\n      type: getPluginType(editor, ELEMENT_LINK),\n      url,\n      target,\n      children: [],\n    },\n    { split: true, ...options } as any\n  );\n};\n","import {\n  findNode,\n  getAboveNode,\n  getEditorString,\n  getNodeLeaf,\n  getNodeProps,\n  getPluginType,\n  InsertNodesOptions,\n  isDefined,\n  isExpanded,\n  PlateEditor,\n  removeNodes,\n  setNodes,\n  UnwrapNodesOptions,\n  Value,\n  WrapNodesOptions,\n} from '@udecode/plate-common';\n\nimport { ELEMENT_LINK } from '../createLinkPlugin';\nimport { TLinkElement } from '../types';\nimport { CreateLinkNodeOptions, validateUrl } from '../utils/index';\nimport { insertLink } from './insertLink';\nimport { unwrapLink } from './unwrapLink';\nimport { upsertLinkText } from './upsertLinkText';\nimport { wrapLink } from './wrapLink';\n\nexport type UpsertLinkOptions<V extends Value = Value> =\n  CreateLinkNodeOptions & {\n    /**\n     * If true, insert text when selection is in url.\n     */\n    insertTextInLink?: boolean;\n    insertNodesOptions?: InsertNodesOptions<V>;\n    unwrapNodesOptions?: UnwrapNodesOptions<V>;\n    wrapNodesOptions?: WrapNodesOptions<V>;\n    skipValidation?: boolean;\n  };\n\n/**\n * If selection in a link or is not url:\n * - insert text with url, exit\n * If selection is expanded or `update` in a link:\n * - remove link node, get link text\n * Then:\n * - insert link node\n */\nexport const upsertLink = <V extends Value>(\n  editor: PlateEditor<V>,\n  {\n    url,\n    text,\n    target,\n    insertTextInLink,\n    insertNodesOptions,\n    skipValidation = false,\n  }: UpsertLinkOptions<V>\n) => {\n  const at = editor.selection;\n\n  if (!at) return;\n\n  const linkAbove = getAboveNode<TLinkElement>(editor, {\n    at,\n    match: { type: getPluginType(editor, ELEMENT_LINK) },\n  });\n\n  // anchor and focus in link -> insert text\n  if (insertTextInLink && linkAbove) {\n    // we don't want to insert marks in links\n    editor.insertText(url);\n    return true;\n  }\n\n  if (!skipValidation && !validateUrl(editor, url)) return;\n\n  if (isDefined(text) && text.length === 0) {\n    text = url;\n  }\n\n  // edit the link url and/or target\n  if (linkAbove) {\n    if (url !== linkAbove[0]?.url || target !== linkAbove[0]?.target) {\n      setNodes<TLinkElement>(\n        editor,\n        { url, target },\n        {\n          at: linkAbove[1],\n        }\n      );\n    }\n\n    upsertLinkText(editor, { url, text, target });\n\n    return true;\n  }\n\n  // selection contains at one edge edge or between the edges\n  const linkEntry = findNode<TLinkElement>(editor, {\n    at,\n    match: { type: getPluginType(editor, ELEMENT_LINK) },\n  });\n\n  const [linkNode, linkPath] = linkEntry ?? [];\n\n  let shouldReplaceText = false;\n\n  if (linkPath && text?.length) {\n    const linkText = getEditorString(editor, linkPath);\n\n    if (text !== linkText) {\n      shouldReplaceText = true;\n    }\n  }\n\n  if (isExpanded(at)) {\n    // anchor and focus in link\n    if (linkAbove) {\n      unwrapLink(editor, {\n        at: linkAbove[1],\n      });\n    } else {\n      unwrapLink(editor, {\n        split: true,\n      });\n    }\n\n    wrapLink(editor, {\n      url,\n      target,\n    });\n\n    upsertLinkText(editor, { url, target, text });\n\n    return true;\n  }\n\n  if (shouldReplaceText) {\n    removeNodes(editor, {\n      at: linkPath,\n    });\n  }\n\n  const props = getNodeProps(linkNode ?? ({} as any));\n\n  const path = editor.selection?.focus.path;\n  if (!path) return;\n\n  // link text should have the focused leaf marks\n  const leaf = getNodeLeaf(editor, path);\n\n  // if text is empty, text is url\n  if (!text?.length) {\n    text = url;\n  }\n\n  insertLink(\n    editor,\n    {\n      ...props,\n      url,\n      target,\n      children: [\n        {\n          ...leaf,\n          text,\n        },\n      ],\n    },\n    insertNodesOptions\n  );\n  return true;\n};\n","import {\n  focusEditor,\n  getPluginOptions,\n  PlateEditor,\n  Value,\n} from '@udecode/plate-common';\n\nimport {\n  floatingLinkActions,\n  floatingLinkSelectors,\n} from '../components/FloatingLink/floatingLinkStore';\nimport { ELEMENT_LINK, LinkPlugin } from '../createLinkPlugin';\nimport { validateUrl } from '../utils/index';\nimport { upsertLink } from './index';\n\n/**\n * Insert link if url is valid.\n * Text is url if empty.\n * Close floating link.\n * Focus editor.\n */\nexport const submitFloatingLink = <V extends Value>(editor: PlateEditor<V>) => {\n  if (!editor.selection) return;\n\n  const { forceSubmit } = getPluginOptions<LinkPlugin, V>(editor, ELEMENT_LINK);\n\n  const url = floatingLinkSelectors.url();\n  if (!forceSubmit && !validateUrl(editor, url)) return;\n\n  const text = floatingLinkSelectors.text();\n  const target = floatingLinkSelectors.newTab() ? '_blank' : undefined;\n\n  floatingLinkActions.hide();\n\n  upsertLink(editor, {\n    url,\n    text,\n    target,\n    skipValidation: true,\n  });\n\n  setTimeout(() => {\n    focusEditor(editor, editor.selection!);\n  }, 0);\n\n  return true;\n};\n","import { useHotkeys, usePlateEditorRef } from '@udecode/plate-common';\n\nimport { submitFloatingLink } from '../../transforms/submitFloatingLink';\nimport { useFloatingLinkSelectors } from './floatingLinkStore';\n\nexport const useFloatingLinkEnter = () => {\n  const editor = usePlateEditorRef();\n\n  const open = useFloatingLinkSelectors().isOpen(editor.id);\n\n  useHotkeys(\n    '*',\n    (e) => {\n      if (e.key !== 'Enter') return;\n\n      if (submitFloatingLink(editor)) {\n        e.preventDefault();\n      }\n    },\n    {\n      enabled: open,\n      enableOnFormTags: ['INPUT'],\n    },\n    []\n  );\n};\n","import {\n  focusEditor,\n  useHotkeys,\n  usePlateEditorRef,\n} from '@udecode/plate-common';\n\nimport {\n  floatingLinkActions,\n  floatingLinkSelectors,\n  useFloatingLinkSelectors,\n} from './floatingLinkStore';\n\nexport const useFloatingLinkEscape = () => {\n  const editor = usePlateEditorRef();\n\n  const open = useFloatingLinkSelectors().isOpen(editor.id);\n\n  useHotkeys(\n    'escape',\n    (e) => {\n      if (!floatingLinkSelectors.mode()) return;\n\n      e.preventDefault();\n\n      if (\n        floatingLinkSelectors.mode() === 'edit' &&\n        floatingLinkSelectors.isEditing()\n      ) {\n        floatingLinkActions.show('edit', editor.id);\n        focusEditor(editor, editor.selection!);\n        return;\n      }\n\n      if (floatingLinkSelectors.mode() === 'insert') {\n        focusEditor(editor, editor.selection!);\n      }\n\n      floatingLinkActions.hide();\n    },\n    {\n      enabled: open,\n      enableOnFormTags: ['INPUT'],\n      enableOnContentEditable: true,\n    },\n    []\n  );\n};\n","import {\n  useVirtualFloating,\n  UseVirtualFloatingOptions,\n} from '@udecode/plate-floating';\n\nimport { floatingLinkActions } from './floatingLinkStore';\n\nexport const useVirtualFloatingLink = ({\n  editorId,\n  ...floatingOptions\n}: { editorId: string } & UseVirtualFloatingOptions) => {\n  return useVirtualFloating({\n    onOpenChange: (open) =>\n      floatingLinkActions.openEditorId(open ? editorId : null),\n    ...floatingOptions,\n  });\n};\n","import { useCallback, useEffect } from 'react';\nimport {\n  focusEditor,\n  getAboveNode,\n  getEndPoint,\n  getPluginOptions,\n  getPluginType,\n  getStartPoint,\n  someNode,\n  useHotkeys,\n  usePlateEditorRef,\n  usePlateReadOnly,\n  usePlateSelectors,\n} from '@udecode/plate-common';\nimport {\n  getDefaultBoundingClientRect,\n  getRangeBoundingClientRect,\n} from '@udecode/plate-floating';\n\nimport { ELEMENT_LINK, LinkPlugin } from '../../createLinkPlugin';\nimport { LinkFloatingToolbarState, unwrapLink } from '../../index';\nimport { triggerFloatingLinkEdit } from '../../utils/triggerFloatingLinkEdit';\nimport {\n  floatingLinkActions,\n  floatingLinkSelectors,\n  useFloatingLinkSelectors,\n} from './floatingLinkStore';\nimport { useFloatingLinkEnter } from './useFloatingLinkEnter';\nimport { useFloatingLinkEscape } from './useFloatingLinkEscape';\nimport { useVirtualFloatingLink } from './useVirtualFloatingLink';\n\nexport const useFloatingLinkEditState = ({\n  floatingOptions,\n}: LinkFloatingToolbarState = {}) => {\n  const editor = usePlateEditorRef();\n  const { triggerFloatingLinkHotkeys } = getPluginOptions<LinkPlugin>(\n    editor,\n    ELEMENT_LINK\n  );\n  const readOnly = usePlateReadOnly();\n  const isEditing = useFloatingLinkSelectors().isEditing();\n  const keyEditor = usePlateSelectors().keyEditor();\n  const mode = useFloatingLinkSelectors().mode();\n  const open = useFloatingLinkSelectors().isOpen(editor.id);\n\n  const getBoundingClientRect = useCallback(() => {\n    const entry = getAboveNode(editor, {\n      match: { type: getPluginType(editor, ELEMENT_LINK) },\n    });\n\n    if (entry) {\n      const [, path] = entry;\n      return getRangeBoundingClientRect(editor, {\n        anchor: getStartPoint(editor, path),\n        focus: getEndPoint(editor, path),\n      });\n    }\n\n    return getDefaultBoundingClientRect();\n  }, [editor]);\n\n  const isOpen = open && mode === 'edit';\n\n  const floating = useVirtualFloatingLink({\n    editorId: editor.id,\n    open: isOpen,\n    getBoundingClientRect,\n    ...floatingOptions,\n  });\n\n  return {\n    editor,\n    triggerFloatingLinkHotkeys,\n    isOpen,\n    floating,\n    keyEditor,\n    isEditing,\n    readOnly,\n  };\n};\n\nexport const useFloatingLinkEdit = ({\n  editor,\n  triggerFloatingLinkHotkeys,\n  keyEditor,\n  floating,\n  isOpen,\n  readOnly,\n}: ReturnType<typeof useFloatingLinkEditState>) => {\n  useEffect(() => {\n    if (\n      editor.selection &&\n      someNode(editor, {\n        match: { type: getPluginType(editor, ELEMENT_LINK) },\n      })\n    ) {\n      floatingLinkActions.show('edit', editor.id);\n      floating.update();\n      return;\n    }\n\n    if (floatingLinkSelectors.mode() === 'edit') {\n      floatingLinkActions.hide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor, keyEditor, floating.update]);\n\n  useHotkeys(\n    triggerFloatingLinkHotkeys!,\n    (e) => {\n      if (\n        floatingLinkSelectors.mode() === 'edit' &&\n        triggerFloatingLinkEdit(editor)\n      ) {\n        e.preventDefault();\n      }\n    },\n    {\n      enableOnContentEditable: true,\n    },\n    []\n  );\n\n  useFloatingLinkEnter();\n\n  useFloatingLinkEscape();\n\n  return {\n    ref: floating.refs.setFloating,\n    props: {\n      style: {\n        ...floating.style,\n        zIndex: 1,\n      },\n    },\n    editButtonProps: {\n      onClick: useCallback(() => {\n        triggerFloatingLinkEdit(editor);\n      }, [editor]),\n    },\n    unlinkButtonProps: {\n      onClick: useCallback(() => {\n        unwrapLink(editor);\n        focusEditor(editor, editor.selection!);\n      }, [editor]),\n    },\n  };\n};\n","import {\n  getEditorString,\n  getPluginType,\n  isRangeAcrossBlocks,\n  PlateEditor,\n  someNode,\n  Value,\n} from '@udecode/plate-common';\n\nimport {\n  floatingLinkActions,\n  floatingLinkSelectors,\n} from '../components/FloatingLink/floatingLinkStore';\nimport { ELEMENT_LINK } from '../createLinkPlugin';\n\n/**\n * Trigger floating link.\n *\n * Do not trigger when:\n * - selection is across blocks\n * - selection has more than one leaf node\n * - lowest selection is not text\n * - selection has a link node\n */\nexport const triggerFloatingLinkInsert = <V extends Value>(\n  editor: PlateEditor<V>,\n  {\n    focused,\n  }: {\n    focused?: boolean;\n  } = {}\n) => {\n  if (floatingLinkSelectors.mode()) return;\n\n  if (!focused) return;\n\n  if (isRangeAcrossBlocks(editor, { at: editor.selection })) return;\n\n  const hasLink = someNode(editor, {\n    match: { type: getPluginType(editor, ELEMENT_LINK) },\n  });\n  if (hasLink) return;\n\n  floatingLinkActions.text(getEditorString(editor, editor.selection));\n  floatingLinkActions.show('insert', editor.id);\n\n  return true;\n};\n","import { ChangeEventHandler, useCallback, useEffect } from 'react';\nimport {\n  focusEditor,\n  getPluginOptions,\n  useComposedRef,\n  useHotkeys,\n  useOnClickOutside,\n  usePlateEditorRef,\n  usePlateReadOnly,\n} from '@udecode/plate-common';\nimport {\n  getSelectionBoundingClientRect,\n  UseVirtualFloatingOptions,\n} from '@udecode/plate-floating';\nimport { useFocused } from 'slate-react';\n\nimport { ELEMENT_LINK, LinkPlugin } from '../../createLinkPlugin';\nimport { triggerFloatingLinkInsert } from '../../utils/triggerFloatingLinkInsert';\nimport {\n  floatingLinkActions,\n  floatingLinkSelectors,\n  useFloatingLinkSelectors,\n} from './floatingLinkStore';\nimport { useFloatingLinkEscape } from './useFloatingLinkEscape';\nimport { useVirtualFloatingLink } from './useVirtualFloatingLink';\n\nexport type LinkFloatingToolbarState = {\n  floatingOptions?: UseVirtualFloatingOptions;\n};\n\nexport const useFloatingLinkInsertState = ({\n  floatingOptions,\n}: LinkFloatingToolbarState = {}) => {\n  const editor = usePlateEditorRef();\n  const { triggerFloatingLinkHotkeys } = getPluginOptions<LinkPlugin>(\n    editor,\n    ELEMENT_LINK\n  );\n  const readOnly = usePlateReadOnly();\n  const focused = useFocused();\n  const mode = useFloatingLinkSelectors().mode();\n  const isOpen = useFloatingLinkSelectors().isOpen(editor.id);\n\n  const floating = useVirtualFloatingLink({\n    editorId: editor.id,\n    open: isOpen && mode === 'insert',\n    getBoundingClientRect: getSelectionBoundingClientRect,\n    whileElementsMounted: () => {},\n    ...floatingOptions,\n  });\n\n  return {\n    editor,\n    triggerFloatingLinkHotkeys,\n    floating,\n    focused,\n    isOpen,\n    readOnly,\n  };\n};\n\nexport const useFloatingLinkInsert = ({\n  editor,\n  triggerFloatingLinkHotkeys,\n  floating,\n  focused,\n  isOpen,\n  readOnly,\n}: ReturnType<typeof useFloatingLinkInsertState>) => {\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((e) => {\n    floatingLinkActions.text(e.target.value);\n  }, []);\n\n  const ref = useOnClickOutside(\n    () => {\n      if (floatingLinkSelectors.mode() === 'insert') {\n        floatingLinkActions.hide();\n        focusEditor(editor, editor.selection!);\n      }\n    },\n    {\n      disabled: !isOpen,\n    }\n  );\n\n  // wait for update before focusing input\n  useEffect(() => {\n    if (isOpen) {\n      floating.update();\n      floatingLinkActions.updated(true);\n    } else {\n      floatingLinkActions.updated(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen, floating.update]);\n\n  useHotkeys(\n    triggerFloatingLinkHotkeys!,\n    (e) => {\n      if (triggerFloatingLinkInsert(editor, { focused })) {\n        e.preventDefault();\n      }\n    },\n    {\n      enableOnContentEditable: true,\n    },\n    [focused]\n  );\n\n  useFloatingLinkEscape();\n\n  return {\n    ref: useComposedRef<HTMLDivElement>(floating.refs.setFloating, ref),\n    props: {\n      style: {\n        ...floating.style,\n        zIndex: 1,\n      },\n    },\n    hidden: readOnly,\n    textInputProps: {\n      onChange,\n      defaultValue: floatingLinkSelectors.text(),\n    },\n  };\n};\n","import { PlateEditor, Value } from '@udecode/plate-common';\n\nimport { floatingLinkSelectors } from '../components/index';\nimport { triggerFloatingLinkEdit } from './triggerFloatingLinkEdit';\nimport { triggerFloatingLinkInsert } from './triggerFloatingLinkInsert';\n\nexport const triggerFloatingLink = <V extends Value>(\n  editor: PlateEditor<V>,\n  {\n    focused,\n  }: {\n    focused?: boolean;\n  } = {}\n) => {\n  if (floatingLinkSelectors.mode() === 'edit') {\n    triggerFloatingLinkEdit(editor);\n    return;\n  }\n\n  triggerFloatingLinkInsert(editor, {\n    focused,\n  });\n};\n","import {\n  getPluginOptions,\n  PlateEditor,\n  sanitizeUrl,\n  Value,\n} from '@udecode/plate-common';\n\nimport { ELEMENT_LINK, LinkPlugin } from '../createLinkPlugin';\n\nexport const validateUrl = <V extends Value>(\n  editor: PlateEditor<V>,\n  url: string\n): boolean => {\n  const { allowedSchemes, isUrl, dangerouslySkipSanitization } =\n    getPluginOptions<LinkPlugin, V>(editor, ELEMENT_LINK);\n\n  if (isUrl && !isUrl(url)) return false;\n\n  if (\n    !dangerouslySkipSanitization &&\n    !sanitizeUrl(url, {\n      allowedSchemes,\n      permitInvalid: true,\n    })\n  )\n    return false;\n\n  return true;\n};\n","import {\n  collapseSelection,\n  getAboveNode,\n  getEditorString,\n  getNextNodeStartPoint,\n  getPluginType,\n  getPreviousNodeEndPoint,\n  getRangeBefore,\n  getRangeFromBlockStart,\n  insertNodes,\n  isCollapsed,\n  isEndPoint,\n  isStartPoint,\n  mockPlugin,\n  PlateEditor,\n  select,\n  someNode,\n  Value,\n  withoutNormalizing,\n  WithPlatePlugin,\n} from '@udecode/plate-common';\nimport { withRemoveEmptyNodes } from '@udecode/plate-normalizers';\nimport { Path, Point, Range } from 'slate';\n\nimport { ELEMENT_LINK, LinkPlugin } from './createLinkPlugin';\nimport { upsertLink } from './transforms/index';\n\n/**\n * Insert space after a url to wrap a link.\n * Lookup from the block start to the cursor to check if there is an url.\n * If not found, lookup before the cursor for a space character to check the url.\n *\n * On insert data:\n * Paste a string inside a link element will edit its children text but not its url.\n *\n */\n\nexport const withLink = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>,\n>(\n  editor: E,\n  {\n    type,\n    options: { isUrl, getUrlHref, rangeBeforeOptions, keepSelectedTextOnPaste },\n  }: WithPlatePlugin<LinkPlugin, V, E>\n) => {\n  const { insertData, insertText, apply, normalizeNode, insertBreak } = editor;\n\n  const wrapLink = () => {\n    withoutNormalizing(editor, () => {\n      const selection = editor.selection!;\n\n      // get the range from first space before the cursor\n      let beforeWordRange = getRangeBefore(\n        editor,\n        selection,\n        rangeBeforeOptions\n      );\n\n      // if no space found before, get the range from block start\n      if (!beforeWordRange) {\n        beforeWordRange = getRangeFromBlockStart(editor);\n      }\n\n      // if no word found before the cursor, exit\n      if (!beforeWordRange) return;\n\n      const hasLink = someNode(editor, {\n        at: beforeWordRange,\n        match: { type: getPluginType(editor, ELEMENT_LINK) },\n      });\n\n      // if word before the cursor has a link, exit\n      if (hasLink) return;\n\n      let beforeWordText = getEditorString(editor, beforeWordRange);\n      beforeWordText = getUrlHref?.(beforeWordText) ?? beforeWordText;\n\n      // if word before is not an url, exit\n      if (!isUrl!(beforeWordText)) return;\n\n      // select the word to wrap link\n      select(editor, beforeWordRange);\n\n      // wrap link\n      upsertLink(editor, {\n        url: beforeWordText,\n      });\n\n      // collapse selection\n      collapseSelection(editor, { edge: 'end' });\n    });\n  };\n\n  editor.insertBreak = () => {\n    if (!isCollapsed(editor.selection)) return insertBreak();\n    wrapLink();\n    insertBreak();\n  };\n\n  editor.insertText = (text) => {\n    if (text === ' ' && isCollapsed(editor.selection)) {\n      wrapLink();\n    }\n\n    insertText(text);\n  };\n\n  editor.insertData = (data: DataTransfer) => {\n    const text = data.getData('text/plain');\n    const textHref = getUrlHref?.(text);\n\n    if (text) {\n      const value = textHref || text;\n      const inserted = upsertLink(editor, {\n        text: keepSelectedTextOnPaste ? undefined : value,\n        url: value,\n        insertTextInLink: true,\n      });\n      if (inserted) return;\n    }\n\n    insertData(data);\n  };\n\n  // TODO: plugin\n  editor.apply = (operation) => {\n    if (operation.type === 'set_selection') {\n      const range = operation.newProperties as Range | null;\n\n      if (range && range.focus && range.anchor && isCollapsed(range)) {\n        const entry = getAboveNode(editor, {\n          at: range,\n          match: { type: getPluginType(editor, ELEMENT_LINK) },\n        });\n\n        if (entry) {\n          const [, path] = entry;\n\n          let newPoint: Point | undefined;\n\n          if (isStartPoint(editor, range.focus, path)) {\n            newPoint = getPreviousNodeEndPoint(editor, path);\n          }\n\n          if (isEndPoint(editor, range.focus, path)) {\n            newPoint = getNextNodeStartPoint(editor, path);\n          }\n\n          if (newPoint) {\n            operation.newProperties = {\n              anchor: newPoint,\n              focus: newPoint,\n            };\n          }\n        }\n      }\n    }\n\n    apply(operation);\n  };\n\n  // TODO: plugin\n  editor.normalizeNode = ([node, path]) => {\n    if (node.type === getPluginType(editor, ELEMENT_LINK)) {\n      const range = editor.selection as Range | null;\n\n      if (\n        range &&\n        isCollapsed(range) &&\n        isEndPoint(editor, range.focus, path)\n      ) {\n        const nextPoint = getNextNodeStartPoint(editor, path);\n\n        // select next text node if any\n        if (nextPoint) {\n          select(editor, nextPoint);\n        } else {\n          // insert text node then select\n          const nextPath = Path.next(path);\n          insertNodes(editor, { text: '' } as any, { at: nextPath });\n          select(editor, nextPath);\n        }\n      }\n    }\n\n    normalizeNode([node, path]);\n  };\n\n  editor = withRemoveEmptyNodes<V, E>(\n    editor,\n    mockPlugin<{}, V, E>({\n      options: { types: type },\n    })\n  );\n\n  return editor;\n};\n","import { AnchorHTMLAttributes } from 'react';\nimport {\n  createPluginFactory,\n  isUrl,\n  RangeBeforeOptions,\n} from '@udecode/plate-common';\n\nimport { TLinkElement } from './types';\nimport { getLinkAttributes, validateUrl } from './utils/index';\nimport { withLink } from './withLink';\n\nexport const ELEMENT_LINK = 'a';\n\nexport interface LinkPlugin {\n  forceSubmit?: boolean;\n\n  /**\n   * Allow custom config for rangeBeforeOptions.\n   * @example default\n   * {\n   *   matchString: ' ',\n   *   skipInvalid: true,\n   *   afterMatch: true,\n   * }\n   */\n  rangeBeforeOptions?: RangeBeforeOptions;\n\n  /**\n   * Hotkeys to trigger floating link.\n   * @default 'meta+k, ctrl+k'\n   */\n  triggerFloatingLinkHotkeys?: string | string[];\n\n  /**\n   * List of allowed URL schemes.\n   * @default ['http', 'https', 'mailto', 'tel']\n   */\n  allowedSchemes?: string[];\n\n  /**\n   * Skips sanitation of links.\n   * @default false\n   */\n  dangerouslySkipSanitization?: boolean;\n\n  /**\n   * Default HTML attributes for link elements.\n   * @default {}\n   */\n  defaultLinkAttributes?: AnchorHTMLAttributes<HTMLAnchorElement>;\n\n  /**\n   * Keeps selected text on pasting links by default.\n   * @default true\n   */\n  keepSelectedTextOnPaste?: boolean;\n\n  /**\n   * Callback to validate an url.\n   * @default isUrl\n   */\n  isUrl?: (text: string) => boolean;\n\n  /**\n   * Callback to optionally get the href for a url\n   * @returns href: an optional link to be used that is different from the text content (example https://google.com for google.com)\n   */\n  getUrlHref?: (url: string) => string | undefined;\n\n  /**\n   * On keyboard shortcut or toolbar mousedown, get the link url by calling this promise. The\n   * default behavior is to use the browser's native `prompt`.\n   */\n  getLinkUrl?: (prevUrl: string | null) => Promise<string | null>;\n}\n\n/**\n * Enables support for hyperlinks.\n */\nexport const createLinkPlugin = createPluginFactory<LinkPlugin>({\n  key: ELEMENT_LINK,\n  isElement: true,\n  isInline: true,\n  withOverrides: withLink,\n  options: {\n    allowedSchemes: ['http', 'https', 'mailto', 'tel'],\n    dangerouslySkipSanitization: false,\n    defaultLinkAttributes: {},\n    isUrl,\n    rangeBeforeOptions: {\n      matchString: ' ',\n      skipInvalid: true,\n      afterMatch: true,\n    },\n    triggerFloatingLinkHotkeys: 'meta+k, ctrl+k',\n    keepSelectedTextOnPaste: true,\n  },\n  then: (editor, { type }) => ({\n    props: ({ element }) => ({\n      nodeProps: getLinkAttributes(editor, element as TLinkElement),\n    }),\n    deserializeHtml: {\n      rules: [\n        {\n          validNodeName: 'A',\n        },\n      ],\n      getNode: (el) => {\n        const url = el.getAttribute('href');\n\n        if (url && validateUrl(editor, url)) {\n          return {\n            type,\n            url,\n            target: el.getAttribute('target') || '_blank',\n          };\n        }\n      },\n    },\n  }),\n});\n"],"names":["createLinkNode","editor","url","text","target","children","type","getPluginType","ELEMENT_LINK","getLinkAttributes","link","allowedSchemes","defaultLinkAttributes","dangerouslySkipSanitization","getPluginOptions","attributes","href","sanitizeUrl","undefined","useLink","element","usePlateEditorRef","props","onMouseOver","e","stopPropagation","useLinkToolbarButtonState","usePlateEditorState","pressed","selection","someNode","match","useLinkToolbarButton","state","onClick","preventDefault","triggerFloatingLink","focused","floatingLinkStore","createStore","openEditorId","mouseDown","updated","newTab","mode","isEditing","extendActions","set","reset","show","editorId","hide","extendSelectors","isOpen","floatingLinkActions","floatingLinkSelectors","get","useFloatingLinkSelectors","use","useFloatingLinkNewTabInputState","ref","useRef","checked","setChecked","useState","useEffect","current","setTimeout","_ref$current","focus","useFloatingLinkNewTabInput","onChange","useCallback","FloatingLinkNewTabInput","createPrimitiveComponent","propsHook","stateHook","useFloatingLinkUrlInputState","useFloatingLinkUrlInput","value","defaultValue","FloatingLinkUrlInput","useLinkOpenButtonState","usePlateSelection","entry","useMemo","findNode","useLinkOpenButton","linkAttributes","LinkOpenButton","triggerFloatingLinkEdit","path","getEditorString","insertLink","createLinkNodeOptions","options","insertNodes","unwrapLink","withoutNormalizing","split","_editor$selection","_editor$selection4","linkAboveAnchor","getAboveNode","at","anchor","_editor$selection2","_editor$selection3","splitNodes","n","isElement","linkAboveFocus","_editor$selection5","_editor$selection6","unwrapNodes","upsertLinkText","newLink","newLinkNode","newLinkPath","length","firstText","replaceNodeChildren","nodes","insertOptions","select","wrapLink","wrapNodes","upsertLink","insertTextInLink","insertNodesOptions","skipValidation","_text","_text2","linkAbove","insertText","validateUrl","isDefined","_linkAbove$","_linkAbove$2","setNodes","linkEntry","linkNode","linkPath","shouldReplaceText","linkText","isExpanded","removeNodes","getNodeProps","leaf","getNodeLeaf","submitFloatingLink","forceSubmit","focusEditor","useFloatingLinkEnter","open","id","useHotkeys","key","enabled","enableOnFormTags","useFloatingLinkEscape","enableOnContentEditable","useVirtualFloatingLink","floatingOptions","useVirtualFloating","onOpenChange","useFloatingLinkEditState","triggerFloatingLinkHotkeys","readOnly","usePlateReadOnly","keyEditor","usePlateSelectors","getBoundingClientRect","getRangeBoundingClientRect","getStartPoint","getEndPoint","getDefaultBoundingClientRect","floating","useFloatingLinkEdit","update","refs","setFloating","style","zIndex","editButtonProps","unlinkButtonProps","triggerFloatingLinkInsert","isRangeAcrossBlocks","hasLink","useFloatingLinkInsertState","useFocused","getSelectionBoundingClientRect","whileElementsMounted","useFloatingLinkInsert","useOnClickOutside","disabled","useComposedRef","hidden","textInputProps","isUrl","permitInvalid","withLink","getUrlHref","rangeBeforeOptions","keepSelectedTextOnPaste","insertData","apply","normalizeNode","insertBreak","_getUrlHref","beforeWordRange","getRangeBefore","getRangeFromBlockStart","beforeWordText","collapseSelection","edge","isCollapsed","data","getData","textHref","inserted","operation","range","newProperties","newPoint","isStartPoint","getPreviousNodeEndPoint","isEndPoint","getNextNodeStartPoint","node","nextPoint","nextPath","Path","next","withRemoveEmptyNodes","mockPlugin","types","createLinkPlugin","createPluginFactory","isInline","withOverrides","matchString","skipInvalid","afterMatch","then","nodeProps","deserializeHtml","rules","validNodeName","getNode","el","getAttribute"],"mappings":"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"}