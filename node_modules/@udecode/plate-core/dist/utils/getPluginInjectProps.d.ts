/// <reference types="react" />
import { Value } from '@udecode/slate';
import { PlateEditor } from '../types/PlateEditor';
import { PluginKey } from '../types/plugin/PlatePluginKey';
export declare const getPluginInjectProps: <V extends Value>(editor: PlateEditor<V>, key: PluginKey) => {
    classNames?: import("packages/utils/dist").AnyObject | undefined;
    defaultNodeValue?: any;
    nodeKey?: string | undefined;
    query?: ((options: any, nodeProps: import("./pluginInjectProps").GetInjectPropsOptions<V>) => boolean) | undefined;
    styleKey?: keyof import("react").CSSProperties | undefined;
    transformClassName?: ((options: import("..").TransformOptions<V>) => any) | undefined;
    transformNodeValue?: ((options: import("..").TransformOptions<V>) => any) | undefined;
    transformProps?: ((options: import("..").TransformOptions<V>, props: import("./pluginInjectProps").GetInjectPropsReturnType) => import("packages/utils/dist").AnyObject | undefined) | undefined;
    transformStyle?: ((options: import("..").TransformOptions<V>) => import("react").CSSProperties) | undefined;
    validNodeValues?: any[] | undefined;
    validTypes?: string[] | undefined;
};
//# sourceMappingURL=getPluginInjectProps.d.ts.map