{"version":3,"file":"index.es.js","sources":["../src/constants.ts","../src/stores/comments/CommentsProvider.tsx","../src/stores/comment/CommentProvider.tsx","../src/queries/findCommentNode.ts","../src/utils/getCommentKey.ts","../src/queries/findCommentNodeById.ts","../src/utils/isCommentKey.ts","../src/utils/getCommentCount.ts","../src/utils/getCommentKeyId.ts","../src/utils/getCommentKeys.ts","../src/utils/getCommentUrl.ts","../src/utils/getElementAbsolutePosition.tsx","../src/utils/isCommentNodeById.ts","../src/utils/isCommentText.ts","../src/utils/unsetCommentNodesById.ts","../src/queries/getCommentNodeEntries.ts","../src/queries/getCommentNodesById.ts","../../../node_modules/lodash/_baseClamp.js","../../../node_modules/lodash/_trimmedEndIndex.js","../../../node_modules/lodash/_baseTrim.js","../../../node_modules/lodash/isObject.js","../../../node_modules/lodash/_freeGlobal.js","../../../node_modules/lodash/_root.js","../../../node_modules/lodash/_Symbol.js","../../../node_modules/lodash/_getRawTag.js","../../../node_modules/lodash/_objectToString.js","../../../node_modules/lodash/_baseGetTag.js","../../../node_modules/lodash/isObjectLike.js","../../../node_modules/lodash/isSymbol.js","../../../node_modules/lodash/toNumber.js","../../../node_modules/lodash/clamp.js","../src/queries/getCommentPosition.ts","../src/stores/comments/useActiveCommentNode.ts","../src/stores/comments/useAddCommentMark.ts","../src/stores/comments/useCommentsResolved.ts","../src/useHooksComments.ts","../src/transforms/removeCommentMark.ts","../src/withComments.ts","../src/createCommentsPlugin.ts","../src/components/CommentDeleteButton.tsx","../src/components/CommentEditCancelButton.tsx","../src/components/CommentEditSaveButton.tsx","../src/components/CommentEditActions.tsx","../src/components/CommentEditButton.tsx","../src/components/CommentEditTextarea.tsx","../src/components/CommentNewSubmitButton.tsx","../src/components/CommentNewTextarea.tsx","../src/components/CommentResolveButton.tsx","../src/components/CommentUserName.tsx","../src/components/CommentsPositioner.tsx","../src/components/useCommentAddButton.ts","../src/components/useCommentItemContent.ts","../src/components/useCommentLeaf.ts","../src/components/useCommentValue.ts","../src/components/useCommentsShowResolvedButton.ts","../src/components/useFloatingCommentsContentState.ts","../src/components/useFloatingCommentsState.ts"],"sourcesContent":["export const MARK_COMMENT = 'comment';\n","import React, { ReactNode } from 'react';\nimport {\n  createAtomStore,\n  getJotaiProviderInitialValues,\n  getNodeString,\n  JotaiProvider,\n  nanoid,\n  Value,\n  WithPartial,\n} from '@udecode/plate-common';\n\nimport { CommentUser, TComment } from '../../types';\n\nexport const SCOPE_COMMENTS = Symbol('comments');\n\nexport interface CommentsStoreState {\n  /**\n   * Id of the current user.\n   */\n  myUserId: string | null;\n\n  /**\n   * Users data.\n   */\n  users: Record<string, CommentUser>;\n\n  /**\n   * Comments data.\n   */\n  comments: Record<string, TComment>;\n\n  /**\n   * Id of the active comment. If null, no comment is active.\n   */\n  activeCommentId: string | null;\n\n  addingCommentId: string | null;\n\n  newValue: Value;\n\n  focusTextarea: boolean;\n\n  onCommentAdd: ((value: WithPartial<TComment, 'userId'>) => void) | null;\n  onCommentUpdate:\n    | ((value: Pick<TComment, 'id'> & Partial<Omit<TComment, 'id'>>) => void)\n    | null;\n  onCommentDelete: ((id: string) => void) | null;\n}\n\nexport const { commentsStore, useCommentsStore } = createAtomStore(\n  {\n    /**\n     * Id of the current user.\n     */\n    myUserId: null,\n\n    /**\n     * Users data.\n     */\n    users: {},\n\n    /**\n     * Comments data.\n     */\n    comments: {},\n\n    /**\n     * Id of the active comment. If null, no comment is active.\n     */\n    activeCommentId: null,\n\n    addingCommentId: null,\n\n    newValue: [{ type: 'p', children: [{ text: '' }] }],\n\n    focusTextarea: false,\n\n    onCommentAdd: null,\n    onCommentUpdate: null,\n    onCommentDelete: null,\n  } as CommentsStoreState,\n  {\n    name: 'comments',\n    scope: SCOPE_COMMENTS,\n  }\n);\n\nexport function CommentsProvider({\n  children,\n  ...props\n}: Partial<CommentsStoreState> & { children: ReactNode }) {\n  return (\n    <JotaiProvider\n      initialValues={getJotaiProviderInitialValues(commentsStore, props)}\n      scope={SCOPE_COMMENTS}\n    >\n      {children}\n    </JotaiProvider>\n  );\n}\n\nexport const useCommentsStates = () => useCommentsStore().use;\nexport const useCommentsSelectors = () => useCommentsStore().get;\nexport const useCommentsActions = () => useCommentsStore().set;\n\nexport const useCommentById = (id?: string | null): TComment | null => {\n  const comments = useCommentsSelectors().comments();\n  if (!id) return null;\n\n  return comments[id];\n};\n\nexport const useUserById = (id: string | null): CommentUser | null => {\n  const users = useCommentsSelectors().users();\n  if (!id) return null;\n\n  return users[id];\n};\n\nexport const useMyUser = (): CommentUser | null => {\n  const users = useCommentsSelectors().users();\n  const myUserId = useCommentsSelectors().myUserId();\n  if (!myUserId) return null;\n\n  return users[myUserId];\n};\n\nexport const useNewCommentText = () => {\n  const editingValue = useCommentsSelectors().newValue();\n\n  return getNodeString(editingValue?.[0]);\n};\n\nexport const useResetNewCommentValue = () => {\n  const setNewValue = useCommentsActions().newValue();\n\n  return () => {\n    setNewValue([{ type: 'p', children: [{ text: '' }] }]);\n  };\n};\n\nexport const useUpdateComment = (id?: string | null) => {\n  const comment = useCommentById(id);\n\n  const [comments, setComments] = useCommentsStates().comments();\n\n  return (value: Partial<TComment>) => {\n    if (!id) return;\n\n    setComments({\n      ...comments,\n      [id]: { ...comment, ...value } as any,\n    });\n  };\n};\n\nexport const useAddRawComment = () => {\n  const [comments, setComments] = useCommentsStates().comments();\n  const myUserId = useCommentsSelectors().myUserId();\n\n  return (id: string) => {\n    if (!myUserId) return;\n\n    setComments({\n      ...comments,\n      [id]: {\n        id,\n        userId: myUserId,\n      },\n    } as any);\n  };\n};\n\nexport const useAddComment = () => {\n  const [comments, setComments] = useCommentsStates().comments();\n  const myUserId = useCommentsSelectors().myUserId();\n\n  return (value: WithPartial<TComment, 'id' | 'userId' | 'createdAt'>) => {\n    const id = value.id ?? nanoid();\n\n    const newComment: WithPartial<TComment, 'userId'> = {\n      id,\n      userId: myUserId ?? undefined,\n      createdAt: Date.now(),\n      ...value,\n    };\n\n    if (newComment.userId) {\n      setComments({\n        ...comments,\n        [id]: newComment as TComment,\n      });\n    }\n\n    return newComment;\n  };\n};\n\nexport const useRemoveComment = () => {\n  const [comments, setComments] = useCommentsStates().comments();\n\n  return (id: string | null) => {\n    if (!id) return;\n\n    delete comments[id];\n\n    setComments({\n      ...comments,\n    });\n  };\n};\n","import React, { ReactNode } from 'react';\nimport {\n  createAtomStore,\n  getJotaiProviderInitialValues,\n  getNodeString,\n  JotaiProvider,\n  Scope,\n  Value,\n} from '@udecode/plate-common';\n\nimport { CommentUser, TComment } from '../../types';\nimport {\n  useCommentById,\n  useCommentsSelectors,\n} from '../comments/CommentsProvider';\n\nexport const SCOPE_COMMENT = Symbol('comment');\nexport const SCOPE_ACTIVE_COMMENT = Symbol('activeComment');\n\nexport interface CommentStoreState {\n  id: string;\n  isMenuOpen: boolean;\n  editingValue: Value | null;\n}\n\nexport const { commentStore, useCommentStore } = createAtomStore(\n  {\n    id: '',\n    isMenuOpen: false,\n    editingValue: null,\n  } as CommentStoreState,\n  {\n    name: 'comment',\n    scope: SCOPE_COMMENT,\n  }\n);\n\nexport const useCommentStates = () => useCommentStore().use;\nexport const useCommentSelectors = () => useCommentStore().get;\nexport const useCommentActions = () => useCommentStore().set;\n\nexport function CommentProvider({\n  children,\n  scope,\n  ...props\n}: Partial<CommentStoreState> & { children: ReactNode; scope?: Scope }) {\n  return (\n    <JotaiProvider\n      initialValues={getJotaiProviderInitialValues(commentStore, props)}\n      scope={scope ?? SCOPE_COMMENT}\n    >\n      {children}\n    </JotaiProvider>\n  );\n}\n\nexport const useCommentUser = (scope?: Scope): CommentUser | null => {\n  const commentId = useCommentSelectors().id(scope);\n  const users = useCommentsSelectors().users();\n  const comment = useCommentById(commentId);\n  if (!comment) return null;\n\n  return users[comment.userId];\n};\n\nexport const useCommentReplies = (scope?: Scope) => {\n  const commentId = useCommentSelectors().id(scope);\n  const comments = useCommentsSelectors().comments();\n\n  const replies: Record<string, TComment> = {};\n\n  Object.keys(comments).forEach((id) => {\n    const comment = comments[id];\n    if (!comment) return null;\n\n    if (comment.parentId === commentId) {\n      replies[id] = comment;\n    }\n  });\n\n  return replies;\n};\n\nexport const useComment = (scope?: Scope) => {\n  const commentId = useCommentSelectors().id(scope);\n\n  return useCommentById(commentId);\n};\n\nexport const useCommentText = (scope?: Scope) => {\n  const comment = useComment(scope);\n  if (!comment) return null;\n\n  return getNodeString(comment.value?.[0]);\n};\n\nexport const useEditingCommentText = () => {\n  const editingValue = useCommentSelectors().editingValue();\n  if (!editingValue) return null;\n\n  return getNodeString(editingValue?.[0]);\n};\n","import {\n  findNode,\n  FindNodeOptions,\n  PlateEditor,\n  Value,\n} from '@udecode/plate-common';\n\nimport { MARK_COMMENT } from '../constants';\nimport { TCommentText } from '../types';\n\nexport const findCommentNode = <V extends Value>(\n  editor: PlateEditor<V>,\n  options?: FindNodeOptions\n) => {\n  return findNode<TCommentText>(editor, {\n    match: (n) => n[MARK_COMMENT],\n    ...options,\n  });\n};\n","import { MARK_COMMENT } from '../constants';\n\nexport const getCommentKey = (id: string) => `${MARK_COMMENT}_${id}`;\n","import { findNode, PlateEditor, Value } from '@udecode/plate-common';\n\nimport { TCommentText } from '../types';\nimport { getCommentKey } from '../utils/getCommentKey';\n\nexport const findCommentNodeById = <V extends Value>(\n  editor: PlateEditor<V>,\n  id: string\n) => {\n  return findNode<TCommentText>(editor, {\n    at: [],\n    match: (n) => n[getCommentKey(id)],\n  });\n};\n","import { MARK_COMMENT } from '../constants';\n\nexport const isCommentKey = (key: string) => key.startsWith(`${MARK_COMMENT}_`);\n","import { TCommentText } from '../types';\nimport { isCommentKey } from './isCommentKey';\n\nexport const getCommentCount = (node: TCommentText) => {\n  let commentCount = 0;\n  Object.keys(node).forEach((key) => {\n    if (isCommentKey(key)) commentCount++;\n  });\n  return commentCount;\n};\n","import { MARK_COMMENT } from '../constants';\n\nexport const getCommentKeyId = (key: string) =>\n  key.replace(`${MARK_COMMENT}_`, '');\n","import { TCommentText } from '../types';\nimport { isCommentKey } from './isCommentKey';\n\nexport const getCommentKeys = (node: TCommentText) => {\n  const keys: string[] = [];\n\n  Object.keys(node).forEach((key) => {\n    if (isCommentKey(key)) keys.push(key);\n  });\n\n  return keys;\n};\n","export const getCommentUrl = (commentId: string) => {\n  const url = new URL(window.location.href);\n  url.searchParams.set('comment', commentId);\n\n  return url.toString();\n};\n","export const getElementAbsolutePosition = (element: HTMLElement) => {\n  let left = 0;\n  let top = 0;\n  let currentElement: HTMLElement | null = element;\n\n  do {\n    left += (currentElement.offsetLeft || 0) - currentElement.scrollLeft;\n    top += (currentElement.offsetTop || 0) - currentElement.scrollTop;\n    currentElement = currentElement.offsetParent as HTMLElement;\n  } while (currentElement);\n\n  return {\n    left,\n    top,\n  };\n};\n","import { TNode } from '@udecode/plate-common';\n\nimport { getCommentKey } from './getCommentKey';\n\n/**\n * Whether the node has a comment id.\n */\nexport const isCommentNodeById = (node: TNode, id: string) =>\n  !!node[getCommentKey(id)];\n","import { TNode } from '@udecode/plate-common';\n\nimport { MARK_COMMENT } from '../constants';\nimport { TCommentText } from '../types';\n\nexport const isCommentText = (node: TNode): node is TCommentText => {\n  return !!node[MARK_COMMENT];\n};\n","import { PlateEditor, unsetNodes, Value } from '@udecode/plate-common';\n\nimport { TCommentText } from '../types';\nimport { getCommentKey } from './getCommentKey';\nimport { isCommentNodeById } from './isCommentNodeById';\n\nexport const unsetCommentNodesById = <V extends Value>(\n  editor: PlateEditor<V>,\n  { id }: { id: string }\n) => {\n  unsetNodes<TCommentText>(editor, getCommentKey(id), {\n    at: [],\n    match: (n) => isCommentNodeById(n, id),\n  });\n};\n","import { getNodeEntries, PlateEditor, Value } from '@udecode/plate-common';\n\nimport { TCommentText } from '../types';\nimport { isCommentText } from '../utils/index';\n\nexport const getCommentNodeEntries = <V extends Value>(\n  editor: PlateEditor<V>\n) => {\n  return [\n    ...getNodeEntries<TCommentText>(editor, {\n      at: [],\n      match: (n) => isCommentText(n),\n    }),\n  ];\n};\n","import { getNodeEntries, PlateEditor, Value } from '@udecode/plate-common';\n\nimport { isCommentNodeById } from '../utils/isCommentNodeById';\n\nexport const getCommentNodesById = <V extends Value>(\n  editor: PlateEditor<V>,\n  id: string\n) => {\n  return Array.from(\n    getNodeEntries(editor, {\n      at: [],\n      match: (n) => isCommentNodeById(n, id),\n    })\n  );\n};\n","/**\n * The base implementation of `_.clamp` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n */\nfunction baseClamp(number, lower, upper) {\n  if (number === number) {\n    if (upper !== undefined) {\n      number = number <= upper ? number : upper;\n    }\n    if (lower !== undefined) {\n      number = number >= lower ? number : lower;\n    }\n  }\n  return number;\n}\n\nmodule.exports = baseClamp;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseClamp = require('./_baseClamp'),\n    toNumber = require('./toNumber');\n\n/**\n * Clamps `number` within the inclusive `lower` and `upper` bounds.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Number\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n * @example\n *\n * _.clamp(-10, -5, 5);\n * // => -5\n *\n * _.clamp(10, -5, 5);\n * // => 5\n */\nfunction clamp(number, lower, upper) {\n  if (upper === undefined) {\n    upper = lower;\n    lower = undefined;\n  }\n  if (upper !== undefined) {\n    upper = toNumber(upper);\n    upper = upper === upper ? upper : 0;\n  }\n  if (lower !== undefined) {\n    lower = toNumber(lower);\n    lower = lower === lower ? lower : 0;\n  }\n  return baseClamp(toNumber(number), lower, upper);\n}\n\nmodule.exports = clamp;\n","import { PlateEditor, toDOMNode, Value } from '@udecode/plate-common';\nimport { clamp } from 'lodash';\n\nimport { TCommentText } from '../types';\nimport { getElementAbsolutePosition } from '../utils/getElementAbsolutePosition';\n\nexport const getCommentPosition = <V extends Value>(\n  editor: PlateEditor<V>,\n  node: TCommentText\n) => {\n  const DOMNode = toDOMNode(editor, node);\n  if (!DOMNode) return;\n\n  const DOMNodePosition = getElementAbsolutePosition(DOMNode);\n\n  const editorDOMNode = toDOMNode(editor, editor);\n  if (!editorDOMNode) return;\n\n  const { x: editorX, width: editorWidth } =\n    editorDOMNode.getBoundingClientRect();\n\n  const sidebarWidth = 418;\n  const padding = 16;\n\n  return {\n    left: clamp(\n      editorX + editorWidth + 16,\n      window.innerWidth - (sidebarWidth + padding)\n    ),\n    top: DOMNodePosition.top,\n  };\n};\n","import { usePlateEditorRef } from '@udecode/plate-common';\n\nimport { findCommentNodeById } from '../../queries/index';\nimport { useCommentsSelectors } from './CommentsProvider';\n\nexport const useActiveCommentNode = () => {\n  const editor = usePlateEditorRef();\n\n  const id = useCommentsSelectors().activeCommentId();\n  if (!id) return null;\n\n  return findCommentNodeById(editor, id);\n};\n","import {\n  deselectEditor,\n  isExpanded,\n  isText,\n  nanoid,\n  setNodes,\n  usePlateEditorRef,\n} from '@udecode/plate-common';\n\nimport { MARK_COMMENT } from '../../constants';\nimport { getCommentKey } from '../../utils/index';\nimport { useCommentsActions } from './CommentsProvider';\n\nexport const useAddCommentMark = () => {\n  const editor = usePlateEditorRef();\n  const setActiveCommentId = useCommentsActions().activeCommentId();\n\n  return () => {\n    const { selection } = editor;\n    if (!isExpanded(selection)) return;\n\n    const id = nanoid();\n\n    // add comment prop to inline elements\n    // const entries = getNodes(editor, {\n    //   // TODO\n    // });\n    //\n    // Array.from(entries).forEach(([, path]) => {\n    //   setNodes(\n    //     editor,\n    //     {\n    //       [key]: comment,\n    //     },\n    //     { at: path }\n    //   );\n    // });\n\n    setNodes(\n      editor,\n      { [MARK_COMMENT]: true, [getCommentKey(id)]: true },\n      { match: isText, split: true }\n    );\n\n    try {\n      deselectEditor(editor);\n    } catch {}\n\n    setTimeout(() => {\n      setActiveCommentId(id);\n    }, 0);\n  };\n};\n","import { TComment } from '../../types';\nimport { useCommentsSelectors } from './CommentsProvider';\n\nexport const useCommentsResolved = () => {\n  const comments = useCommentsSelectors().comments();\n\n  const res: TComment[] = [];\n\n  Object.keys(comments).forEach((key) => {\n    const comment = comments[key];\n    if (comment?.isResolved) {\n      res.push(comment);\n    }\n  });\n\n  return res;\n};\n","import {\n  isExpanded,\n  PlateEditor,\n  useHotkeys,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-common';\n\nimport { useAddCommentMark, useCommentsActions } from './stores/index';\nimport { CommentsPlugin } from './types';\n\nexport const useHooksComments = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>,\n>(\n  editor: E,\n  { options }: WithPlatePlugin<CommentsPlugin>\n) => {\n  const { hotkey } = options;\n\n  const addCommentMark = useAddCommentMark();\n  const setFocusTextarea = useCommentsActions().focusTextarea();\n\n  useHotkeys(\n    hotkey!,\n    (e) => {\n      if (!editor.selection) return;\n\n      e.preventDefault();\n\n      // block comments\n\n      if (!isExpanded(editor.selection)) return;\n\n      addCommentMark();\n      setFocusTextarea(true);\n    },\n    {\n      enableOnContentEditable: true,\n    }\n  );\n};\n","import { PlateEditor, Value, withoutNormalizing } from '@udecode/plate-common';\n\nimport { MARK_COMMENT } from '../constants';\nimport { findCommentNode } from '../queries/index';\nimport { getCommentKeys } from '../utils/index';\n\nexport const removeCommentMark = <V extends Value>(editor: PlateEditor<V>) => {\n  const nodeEntry = findCommentNode(editor);\n  if (!nodeEntry) return;\n\n  const keys = getCommentKeys(nodeEntry[0]);\n\n  withoutNormalizing(editor, () => {\n    keys.forEach((key) => {\n      editor.removeMark(key);\n    });\n\n    editor.removeMark(MARK_COMMENT);\n  });\n};\n","import {\n  PlateEditor,\n  unsetNodes,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-common';\n\nimport { MARK_COMMENT } from './constants';\nimport { removeCommentMark } from './transforms/removeCommentMark';\nimport { CommentsPlugin } from './types';\nimport { getCommentCount } from './utils/getCommentCount';\n\nexport const withComments = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>,\n>(\n  editor: E,\n  // eslint-disable-next-line unused-imports/no-unused-vars\n  plugin: WithPlatePlugin<CommentsPlugin, V, E>\n) => {\n  const { normalizeNode, insertBreak } = editor;\n\n  editor.insertBreak = () => {\n    removeCommentMark(editor);\n\n    insertBreak();\n  };\n\n  editor.normalizeNode = (entry) => {\n    const [node, path] = entry;\n\n    // Unset MARK_COMMENT prop when there is no comments\n    if (node[MARK_COMMENT] && getCommentCount(node as any) < 1) {\n      unsetNodes(editor, MARK_COMMENT, { at: path });\n      return;\n    }\n\n    normalizeNode(entry);\n  };\n\n  return editor;\n};\n","import { createPluginFactory } from '@udecode/plate-common';\n\nimport { MARK_COMMENT } from './constants';\nimport { CommentsPlugin } from './types';\nimport { useHooksComments } from './useHooksComments';\nimport { withComments } from './withComments';\n\nexport const createCommentsPlugin = createPluginFactory<CommentsPlugin>({\n  key: MARK_COMMENT,\n  isLeaf: true,\n  withOverrides: withComments,\n  useHooks: useHooksComments,\n  options: {\n    hotkey: ['meta+shift+m', 'ctrl+shift+m'],\n  },\n});\n","import {\n  createPrimitiveComponent,\n  usePlateEditorRef,\n} from '@udecode/plate-common';\n\nimport { useCommentSelectors } from '../stores/comment/CommentProvider';\nimport {\n  useCommentsActions,\n  useCommentsSelectors,\n  useRemoveComment,\n} from '../stores/comments/CommentsProvider';\nimport { unsetCommentNodesById } from '../utils/index';\n\nexport const useCommentDeleteButtonState = () => {\n  const activeCommentId = useCommentsSelectors().activeCommentId();\n  const onCommentDelete = useCommentsSelectors().onCommentDelete();\n  const id = useCommentSelectors().id();\n  const setActiveCommentId = useCommentsActions().activeCommentId();\n  const removeComment = useRemoveComment();\n  const editor = usePlateEditorRef();\n\n  return {\n    activeCommentId,\n    onCommentDelete,\n    id,\n    setActiveCommentId,\n    removeComment,\n    editor,\n  };\n};\n\nexport const useCommentDeleteButton = ({\n  activeCommentId,\n  editor,\n  id,\n  onCommentDelete,\n  removeComment,\n  setActiveCommentId,\n}: ReturnType<typeof useCommentDeleteButtonState>) => {\n  return {\n    props: {\n      onClick: () => {\n        if (activeCommentId === id) {\n          unsetCommentNodesById(editor, { id });\n          setActiveCommentId(null);\n        } else {\n          removeComment(id);\n        }\n\n        onCommentDelete?.(id);\n      },\n    },\n  };\n};\n\nexport const CommentDeleteButton = createPrimitiveComponent('button')({\n  stateHook: useCommentDeleteButtonState,\n  propsHook: useCommentDeleteButton,\n});\n","import { createPrimitiveComponent } from '@udecode/plate-common';\n\nimport { useCommentActions } from '../stores/comment/CommentProvider';\n\nexport const useCommentEditCancelButton = () => {\n  const setEditingValue = useCommentActions().editingValue();\n\n  return {\n    props: {\n      onClick: () => {\n        setEditingValue(null);\n      },\n    },\n  };\n};\n\nexport const CommentEditCancelButton = createPrimitiveComponent('button')({\n  propsHook: useCommentEditCancelButton,\n});\n","import { useCallback } from 'react';\nimport { createPrimitiveComponent } from '@udecode/plate-common';\n\nimport {\n  useCommentActions,\n  useCommentSelectors,\n  useCommentText,\n} from '../stores/comment/CommentProvider';\nimport {\n  useCommentsSelectors,\n  useUpdateComment,\n} from '../stores/comments/CommentsProvider';\n\nexport const useCommentEditSaveButtonState = () => {\n  const onCommentUpdate = useCommentsSelectors().onCommentUpdate();\n  const editingValue = useCommentSelectors().editingValue();\n  const setEditingValue = useCommentActions().editingValue();\n  const id = useCommentSelectors().id();\n  const updateComment = useUpdateComment(id);\n  const value = useCommentText();\n\n  return {\n    value,\n    editingValue,\n    setEditingValue,\n    id,\n    onCommentUpdate,\n    updateComment,\n  };\n};\n\nexport const useCommentEditSaveButton = ({\n  editingValue,\n  setEditingValue,\n  id,\n  onCommentUpdate,\n  updateComment,\n  value,\n}: ReturnType<typeof useCommentEditSaveButtonState>) => {\n  return {\n    props: {\n      onClick: useCallback(() => {\n        if (!editingValue) return;\n\n        updateComment({\n          value: editingValue,\n        });\n\n        setEditingValue(null);\n\n        onCommentUpdate?.({ id, value: editingValue });\n      }, [editingValue, id, onCommentUpdate, setEditingValue, updateComment]),\n      disabled: value?.trim().length === 0,\n    },\n  };\n};\n\nexport const CommentEditSaveButton = createPrimitiveComponent('button')({\n  stateHook: useCommentEditSaveButtonState,\n  propsHook: useCommentEditSaveButton,\n});\n","import { CommentEditCancelButton } from './CommentEditCancelButton';\nimport { CommentEditSaveButton } from './CommentEditSaveButton';\n\nexport const CommentEditActions = {\n  SaveButton: CommentEditSaveButton,\n  CancelButton: CommentEditCancelButton,\n};\n","import { createPrimitiveComponent } from '@udecode/plate-common';\n\nimport {\n  useComment,\n  useCommentActions,\n} from '../stores/comment/CommentProvider';\n\nexport const useCommentEditButtonState = () => {\n  const setIsMenuOpen = useCommentActions().isMenuOpen();\n  const comment = useComment()!;\n  const editingValue = useCommentActions().editingValue();\n\n  return {\n    setIsMenuOpen,\n    comment,\n    editingValue,\n  };\n};\n\nexport const useCommentEditButton = ({\n  setIsMenuOpen,\n  comment,\n  editingValue,\n}: ReturnType<typeof useCommentEditButtonState>) => {\n  return {\n    props: {\n      onClick: () => {\n        setIsMenuOpen(false);\n        editingValue(comment.value);\n      },\n    },\n  };\n};\n\nexport const CommentEditButton = createPrimitiveComponent('button')({\n  stateHook: useCommentEditButtonState,\n  propsHook: useCommentEditButton,\n});\n","import { useEffect, useRef } from 'react';\nimport { createPrimitiveComponent } from '@udecode/plate-common';\n\nimport {\n  useCommentActions,\n  useEditingCommentText,\n} from '../stores/comment/CommentProvider';\n\nexport const useCommentEditTextareaState = () => {\n  const setEditingValue = useCommentActions().editingValue();\n  const value = useEditingCommentText();\n\n  const textareaRef = useRef<HTMLTextAreaElement | null>(null);\n\n  useEffect(() => {\n    setTimeout(() => {\n      const textarea = textareaRef.current;\n      if (textarea) {\n        textarea.focus();\n      }\n    }, 0);\n  }, [textareaRef]);\n\n  return {\n    textareaRef,\n    setEditingValue,\n    value,\n  };\n};\n\nexport const useCommentEditTextarea = ({\n  setEditingValue,\n  textareaRef,\n  value,\n}: ReturnType<typeof useCommentEditTextareaState>) => {\n  return {\n    props: {\n      placeholder: 'Add a comment...',\n      rows: 1,\n      ref: textareaRef,\n      value: value ?? undefined,\n      onChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setEditingValue([\n          { type: 'p', children: [{ text: event.target.value }] },\n        ]);\n      },\n    },\n  };\n};\n\nexport const CommentEditTextarea = createPrimitiveComponent('textarea')({\n  stateHook: useCommentEditTextareaState,\n  propsHook: useCommentEditTextarea,\n});\n","import { createPrimitiveComponent, nanoid } from '@udecode/plate-common';\n\nimport {\n  SCOPE_ACTIVE_COMMENT,\n  useComment,\n} from '../stores/comment/CommentProvider';\nimport {\n  useAddComment,\n  useCommentsSelectors,\n  useNewCommentText,\n  useResetNewCommentValue,\n} from '../stores/comments/CommentsProvider';\n\nexport const useCommentNewSubmitButtonState = () => {\n  const onCommentAdd = useCommentsSelectors().onCommentAdd();\n  const activeCommentId = useCommentsSelectors().activeCommentId()!;\n  const comment = useComment(SCOPE_ACTIVE_COMMENT)!;\n  const newValue = useCommentsSelectors().newValue();\n\n  const editingCommentText = useNewCommentText();\n  const resetNewCommentValue = useResetNewCommentValue();\n  const addComment = useAddComment();\n\n  const isReplyComment = !!comment;\n\n  const submitButtonText = isReplyComment ? 'Reply' : 'Comment';\n\n  return {\n    editingCommentText,\n    resetNewCommentValue,\n    addComment,\n    isReplyComment,\n    submitButtonText,\n    onCommentAdd,\n    activeCommentId,\n    comment,\n    newValue,\n  };\n};\n\nexport const useCommentNewSubmitButton = ({\n  editingCommentText,\n  resetNewCommentValue,\n  addComment,\n  isReplyComment,\n  submitButtonText,\n  onCommentAdd,\n  activeCommentId,\n  comment,\n  newValue,\n}: ReturnType<typeof useCommentNewSubmitButtonState>) => {\n  return {\n    props: {\n      type: 'submit',\n      disabled: !editingCommentText?.trim().length,\n      children: submitButtonText,\n      onClick: () => {\n        const newComment = addComment(\n          isReplyComment\n            ? {\n                id: nanoid(),\n                parentId: comment.id,\n                value: newValue,\n              }\n            : {\n                id: activeCommentId,\n                value: newValue,\n              }\n        );\n\n        onCommentAdd?.(newComment);\n\n        resetNewCommentValue();\n      },\n    },\n  };\n};\n\nexport const CommentNewSubmitButton = createPrimitiveComponent('button')({\n  stateHook: useCommentNewSubmitButtonState,\n  propsHook: useCommentNewSubmitButton,\n});\n","import { useEffect, useRef } from 'react';\nimport { createPrimitiveComponent } from '@udecode/plate-common';\n\nimport {\n  useCommentById,\n  useCommentsActions,\n  useCommentsSelectors,\n  useNewCommentText,\n} from '../stores/comments/CommentsProvider';\n\nexport const useCommentNewTextareaState = () => {\n  const setNewValue = useCommentsActions().newValue();\n  const activeComment = useCommentById(\n    useCommentsSelectors().activeCommentId()\n  );\n  const value = useNewCommentText();\n  const focusTextarea = useCommentsSelectors().focusTextarea();\n  const setFocusTextarea = useCommentsActions().focusTextarea();\n\n  const textareaRef = useRef<HTMLTextAreaElement | null>(null);\n\n  useEffect(() => {\n    if (focusTextarea) {\n      textareaRef.current?.focus();\n      setFocusTextarea(false);\n    }\n  }, [focusTextarea, setFocusTextarea, textareaRef]);\n\n  const placeholder = `${activeComment ? 'Reply...' : 'Add a comment...'}`;\n\n  return {\n    textareaRef,\n    placeholder,\n    value,\n    setNewValue,\n  };\n};\n\nexport const useCommentNewTextarea = ({\n  textareaRef,\n  placeholder,\n  value,\n  setNewValue,\n}: ReturnType<typeof useCommentNewTextareaState>) => {\n  return {\n    props: {\n      placeholder,\n      rows: 1,\n      ref: textareaRef,\n      value: value ?? undefined,\n      onChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setNewValue([{ type: 'p', children: [{ text: event.target.value }] }]);\n      },\n    },\n  };\n};\n\nexport const CommentNewTextarea = createPrimitiveComponent('textarea')({\n  stateHook: useCommentNewTextareaState,\n  propsHook: useCommentNewTextarea,\n});\n","import { createPrimitiveComponent } from '@udecode/plate-common';\n\nimport { useComment } from '../stores/comment/CommentProvider';\nimport {\n  useCommentsActions,\n  useCommentsSelectors,\n  useUpdateComment,\n} from '../stores/comments/CommentsProvider';\n\nexport const useCommentResolveButton = () => {\n  const onCommentUpdate = useCommentsSelectors().onCommentUpdate();\n  const activeCommentId = useCommentsSelectors().activeCommentId();\n  const setActiveCommentId = useCommentsActions().activeCommentId();\n  const updateComment = useUpdateComment(activeCommentId);\n\n  const comment = useComment()!;\n\n  return {\n    props: {\n      onClick: () => {\n        const isResolved = !comment.isResolved;\n\n        const value = {\n          isResolved,\n        };\n\n        updateComment(value);\n\n        onCommentUpdate?.({\n          id: activeCommentId!,\n          ...value,\n        });\n\n        if (isResolved) {\n          setActiveCommentId(null);\n        }\n      },\n    },\n  };\n};\n\nexport const CommentResolveButton = createPrimitiveComponent('button')({\n  propsHook: useCommentResolveButton,\n});\n","import { createPrimitiveComponent } from '@udecode/plate-common';\n\nimport { useCommentUser } from '../stores/comment/CommentProvider';\n\nexport const useCommentUserName = () => {\n  const user = useCommentUser();\n\n  return {\n    props: {\n      children: user?.name ?? 'Anonymous',\n    },\n  };\n};\n\nexport const CommentUserName = createPrimitiveComponent('div')({\n  propsHook: useCommentUserName,\n});\n","import { useEffect, useState } from 'react';\nimport {\n  createPrimitiveComponent,\n  toDOMNode,\n  usePlateEditorRef,\n} from '@udecode/plate-common';\n\nimport { getCommentPosition } from '../queries/index';\nimport { useCommentsSelectors } from '../stores/comments/CommentsProvider';\nimport { useActiveCommentNode } from '../stores/comments/useActiveCommentNode';\n\nexport const useCommentsPositionerState = () => {\n  const editor = usePlateEditorRef();\n  let activeCommentId = useCommentsSelectors().activeCommentId();\n\n  const [position, setPosition] = useState<{ top: number; left: number }>({\n    left: 0,\n    top: 0,\n  });\n\n  if (position.left === 0 && position.top === 0) {\n    activeCommentId = null;\n  }\n\n  const [node] = useActiveCommentNode() ?? [];\n\n  useEffect(() => {\n    if (!node) return;\n\n    const domNode = toDOMNode(editor, node);\n    if (!domNode) return;\n\n    const newPosition = getCommentPosition(editor, node);\n    if (!newPosition) return;\n\n    setPosition(newPosition);\n  }, [editor, node]);\n\n  return {\n    activeCommentId,\n    position,\n  };\n};\n\nexport const useCommentsPositioner = ({\n  activeCommentId,\n  position,\n}: ReturnType<typeof useCommentsPositionerState>) => {\n  return {\n    hidden: !activeCommentId,\n    props: {\n      style: {\n        ...position,\n      },\n    },\n  };\n};\n\nexport const CommentsPositioner = createPrimitiveComponent('div')({\n  stateHook: useCommentsPositionerState,\n  propsHook: useCommentsPositioner,\n});\n","import { MouseEventHandler, useCallback } from 'react';\n\nimport {\n  useAddCommentMark,\n  useCommentsActions,\n  useCommentsSelectors,\n} from '../stores/index';\n\nexport const useCommentAddButton = () => {\n  const addCommentMark = useAddCommentMark();\n  const setFocusTextarea = useCommentsActions().focusTextarea();\n  const myUserId = useCommentsSelectors().myUserId();\n\n  const onClick = useCallback<MouseEventHandler<HTMLSpanElement>>(\n    (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      addCommentMark();\n      setFocusTextarea(true);\n    },\n    [addCommentMark, setFocusTextarea]\n  );\n\n  return {\n    hidden: !myUserId,\n    props: { onClick },\n  };\n};\n","import {\n  useComment,\n  useCommentSelectors,\n  useCommentsSelectors,\n  useCommentText,\n  useCommentUser,\n} from '..';\n\nexport const useCommentItemContentState = () => {\n  const comment = useComment()!;\n  const isReplyComment = !!comment.parentId;\n  const commentText = useCommentText();\n  const user = useCommentUser();\n  const myUserId = useCommentsSelectors().myUserId();\n  const editingValue = useCommentSelectors().editingValue();\n\n  const isMyComment = myUserId === comment.userId;\n\n  return {\n    comment,\n    isReplyComment,\n    commentText,\n    user,\n    myUserId,\n    editingValue,\n    isMyComment,\n  };\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { usePlateEditorRef } from '@udecode/plate-common';\n\nimport {\n  getCommentKeyId,\n  isCommentKey,\n  TCommentText,\n  unsetCommentNodesById,\n  useCommentsActions,\n  useCommentsSelectors,\n} from '..';\n\nexport const useCommentLeafState = ({ leaf }: { leaf: TCommentText }) => {\n  const editor = usePlateEditorRef();\n  const [commentIds, setCommentIds] = useState<string[]>([]);\n  const activeCommentId = useCommentsSelectors().activeCommentId();\n  const setActiveCommentId = useCommentsActions().activeCommentId();\n  const comments = useCommentsSelectors().comments();\n  const [commentCount, setCommentCount] = useState(1);\n  const [isActive, setIsActive] = useState(false);\n\n  useEffect(() => {\n    const ids: string[] = [];\n    let count = 0;\n\n    let _isActive = false;\n\n    Object.keys(leaf).forEach((key) => {\n      if (!isCommentKey(key)) return;\n\n      const id = getCommentKeyId(key);\n\n      if (comments[id]?.isResolved) return;\n\n      if (id === activeCommentId) {\n        _isActive = true;\n        setIsActive(true);\n      }\n\n      ids.push(getCommentKeyId(key));\n      count++;\n    });\n\n    if (!_isActive && isActive) {\n      setIsActive(false);\n\n      // Remove comment nodes for unsubmitted comments\n      ids.forEach((id) => {\n        if (!comments[id]) {\n          unsetCommentNodesById(editor, { id });\n        }\n      });\n    }\n\n    setCommentCount(count);\n    setCommentIds(ids);\n  }, [editor, activeCommentId, comments, isActive, leaf]);\n\n  const lastCommentId = commentIds.at(-1)!;\n\n  return {\n    commentCount,\n    isActive,\n    lastCommentId,\n    setActiveCommentId,\n  };\n};\n\nexport const useCommentLeaf = ({\n  setActiveCommentId,\n  lastCommentId,\n}: ReturnType<typeof useCommentLeafState>) => {\n  return {\n    props: {\n      onClick: useCallback(\n        (e: MouseEvent) => {\n          e.stopPropagation();\n          setActiveCommentId(lastCommentId);\n        },\n        [lastCommentId, setActiveCommentId]\n      ),\n    },\n  };\n};\n","import { useEffect, useRef } from 'react';\n\nexport const useCommentValue = () => {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    const textarea = textareaRef.current!;\n    textarea.focus();\n\n    const { length } = textarea.value;\n    textarea.setSelectionRange(length, length);\n  }, [textareaRef]);\n\n  return {\n    textareaRef,\n  };\n};\n","import React from 'react';\nimport { focusEditor, usePlateEditorRef } from '@udecode/plate-common';\n\nexport const useCommentsShowResolvedButton = () => {\n  const editor = usePlateEditorRef();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n  const isActive = Boolean(anchorEl);\n\n  return {\n    props: {\n      pressed: isActive,\n      onClick: (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        setAnchorEl(e.currentTarget);\n\n        focusEditor(editor);\n      },\n    },\n  };\n};\n","import { useRef } from 'react';\n\nimport { useCommentById, useCommentsSelectors } from '../stores/index';\n\nexport const useFloatingCommentsContentState = () => {\n  const activeCommentId = useCommentsSelectors().activeCommentId()!;\n  const activeComment = useCommentById(activeCommentId);\n  const myUserId = useCommentsSelectors().myUserId();\n\n  const ref = useRef(null);\n\n  return {\n    ref,\n    activeCommentId,\n    myUserId,\n    hasNoComment: !activeComment,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport {\n  someNode,\n  usePlateEditorRef,\n  usePlateSelectors,\n} from '@udecode/plate-common';\n\nimport { MARK_COMMENT } from '../constants';\nimport {\n  useCommentsActions,\n  useCommentsSelectors,\n  useResetNewCommentValue,\n} from '../stores/index';\n\nexport const useFloatingCommentsState = () => {\n  const activeCommentId = useCommentsSelectors().activeCommentId();\n  const resetNewCommentValue = useResetNewCommentValue();\n  const setActiveCommentId = useCommentsActions().activeCommentId()!;\n  const editor = usePlateEditorRef();\n  const key = usePlateSelectors().keyEditor();\n\n  const [loaded, setLoaded] = useState(false);\n\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    // there is a delay between activeCommentId and someNode, so we sync in `active`\n    if (\n      activeCommentId &&\n      someNode(editor, {\n        match: (n) => n[MARK_COMMENT],\n      })\n    ) {\n      setActive(true);\n    }\n\n    if (!someNode(editor, { match: (n) => n[MARK_COMMENT] })) {\n      setActiveCommentId(null);\n      setActive(false);\n    }\n  }, [active, activeCommentId, editor, key, setActiveCommentId]);\n\n  useEffect(() => {\n    setLoaded(true);\n  }, []);\n\n  // reset comment editing value when active comment id changes\n  useEffect(() => {\n    if (activeCommentId) {\n      resetNewCommentValue();\n    }\n  }, [activeCommentId, resetNewCommentValue]);\n\n  return {\n    loaded,\n    activeCommentId,\n  };\n};\n"],"names":["MARK_COMMENT","SCOPE_COMMENTS","Symbol","commentsStore","useCommentsStore","createAtomStore","myUserId","users","comments","activeCommentId","addingCommentId","newValue","type","children","text","focusTextarea","onCommentAdd","onCommentUpdate","onCommentDelete","name","scope","CommentsProvider","props","React","createElement","JotaiProvider","initialValues","getJotaiProviderInitialValues","useCommentsStates","use","useCommentsSelectors","get","useCommentsActions","set","useCommentById","id","useUserById","useMyUser","useNewCommentText","editingValue","getNodeString","useResetNewCommentValue","setNewValue","useUpdateComment","comment","setComments","value","useAddRawComment","userId","useAddComment","_value$id","nanoid","newComment","undefined","createdAt","Date","now","useRemoveComment","SCOPE_COMMENT","SCOPE_ACTIVE_COMMENT","commentStore","useCommentStore","isMenuOpen","useCommentStates","useCommentSelectors","useCommentActions","CommentProvider","useCommentUser","commentId","useCommentReplies","replies","Object","keys","forEach","parentId","useComment","useCommentText","_comment$value","useEditingCommentText","findCommentNode","editor","options","findNode","match","n","getCommentKey","findCommentNodeById","at","isCommentKey","key","startsWith","getCommentCount","node","commentCount","getCommentKeyId","replace","getCommentKeys","push","getCommentUrl","url","URL","window","location","href","searchParams","toString","getElementAbsolutePosition","element","left","top","currentElement","offsetLeft","scrollLeft","offsetTop","scrollTop","offsetParent","isCommentNodeById","isCommentText","unsetCommentNodesById","unsetNodes","getCommentNodeEntries","getNodeEntries","getCommentNodesById","Array","from","trimmedEndIndex","global","freeGlobal","root","objectProto","nativeObjectToString","symToStringTag","getRawTag","objectToString","isObjectLike","baseGetTag","isSymbol","isObject","baseTrim","toNumber","baseClamp","getCommentPosition","DOMNode","toDOMNode","DOMNodePosition","editorDOMNode","x","editorX","width","editorWidth","getBoundingClientRect","sidebarWidth","padding","_clamp","innerWidth","useActiveCommentNode","usePlateEditorRef","useAddCommentMark","setActiveCommentId","selection","isExpanded","setNodes","isText","split","deselectEditor","setTimeout","useCommentsResolved","res","isResolved","useHooksComments","hotkey","addCommentMark","setFocusTextarea","useHotkeys","e","preventDefault","enableOnContentEditable","removeCommentMark","nodeEntry","withoutNormalizing","removeMark","withComments","plugin","normalizeNode","insertBreak","entry","path","createCommentsPlugin","createPluginFactory","isLeaf","withOverrides","useHooks","useCommentDeleteButtonState","removeComment","useCommentDeleteButton","onClick","CommentDeleteButton","createPrimitiveComponent","stateHook","propsHook","useCommentEditCancelButton","setEditingValue","CommentEditCancelButton","useCommentEditSaveButtonState","updateComment","useCommentEditSaveButton","useCallback","disabled","trim","length","CommentEditSaveButton","CommentEditActions","SaveButton","CancelButton","useCommentEditButtonState","setIsMenuOpen","useCommentEditButton","CommentEditButton","useCommentEditTextareaState","textareaRef","useRef","useEffect","textarea","current","focus","useCommentEditTextarea","placeholder","rows","ref","onChange","event","target","CommentEditTextarea","useCommentNewSubmitButtonState","editingCommentText","resetNewCommentValue","addComment","isReplyComment","submitButtonText","useCommentNewSubmitButton","CommentNewSubmitButton","useCommentNewTextareaState","activeComment","_textareaRef$current","useCommentNewTextarea","CommentNewTextarea","useCommentResolveButton","CommentResolveButton","useCommentUserName","_user$name","user","CommentUserName","useCommentsPositionerState","_useActiveCommentNode","position","setPosition","useState","domNode","newPosition","useCommentsPositioner","hidden","style","CommentsPositioner","useCommentAddButton","stopPropagation","useCommentItemContentState","commentText","isMyComment","useCommentLeafState","leaf","commentIds","setCommentIds","setCommentCount","isActive","setIsActive","ids","count","_isActive","_comments$id","lastCommentId","useCommentLeaf","useCommentValue","setSelectionRange","useCommentsShowResolvedButton","anchorEl","setAnchorEl","Boolean","pressed","currentTarget","focusEditor","useFloatingCommentsContentState","hasNoComment","useFloatingCommentsState","usePlateSelectors","keyEditor","loaded","setLoaded","active","setActive","someNode"],"mappings":"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","x_google_ignoreList":[17,18,19,20,21,22,23,24,25,26,27,28,29,30]}