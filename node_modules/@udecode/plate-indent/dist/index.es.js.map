{"version":3,"file":"index.es.js","sources":["../src/transforms/setIndent.ts","../src/transforms/indent.ts","../src/transforms/outdent.ts","../src/onKeyDownIndent.ts","../src/withIndent.ts","../src/createIndentPlugin.ts","../src/createTextIndentPlugin.ts","../src/hooks/useIndentButton.ts","../src/hooks/useOutdentButton.ts"],"sourcesContent":["import {\n  AnyObject,\n  getNodeEntries,\n  GetNodeEntriesOptions,\n  getPluginInjectProps,\n  PlateEditor,\n  setElements,\n  UnhangRangeOptions,\n  unsetNodes,\n  Value,\n  withoutNormalizing,\n} from '@udecode/plate-common';\n\nimport { KEY_INDENT } from '../createIndentPlugin';\n\nexport interface SetIndentOptions<V extends Value = Value> {\n  /**\n   * 1 to indent\n   * -1 to outdent\n   * @default 1\n   */\n  offset?: number;\n\n  /**\n   * getNodeEntries options\n   */\n  getNodesOptions?: GetNodeEntriesOptions<V> & UnhangRangeOptions;\n\n  /**\n   * Set other props than the indent one.\n   * These will be unset if indent = 0.\n   */\n  setNodesProps?: ({ indent }: { indent: number }) => AnyObject;\n\n  /**\n   * Nodes props to unset when indent = 0.\n   */\n  unsetNodesProps?: string[];\n}\n\n/**\n * Add offset to the indentation of the selected blocks.\n */\nexport const setIndent = <V extends Value>(\n  editor: PlateEditor<V>,\n  {\n    offset = 1,\n    getNodesOptions,\n    setNodesProps,\n    unsetNodesProps = [],\n  }: SetIndentOptions<V>\n) => {\n  const { nodeKey } = getPluginInjectProps(editor, KEY_INDENT);\n\n  const _nodes = getNodeEntries(editor, {\n    block: true,\n    mode: 'lowest',\n    ...getNodesOptions,\n  });\n  const nodes = Array.from(_nodes);\n\n  withoutNormalizing(editor, () => {\n    nodes.forEach(([node, path]) => {\n      const blockIndent = (node[nodeKey!] as number) ?? 0;\n      const newIndent = blockIndent + offset;\n\n      const props = setNodesProps?.({ indent: newIndent }) ?? {};\n\n      if (newIndent <= 0) {\n        unsetNodes(editor, [nodeKey!, ...unsetNodesProps], {\n          at: path,\n        });\n      } else {\n        setElements(editor, { [nodeKey!]: newIndent, ...props }, { at: path });\n      }\n    });\n  });\n};\n","import { PlateEditor, Value } from '@udecode/plate-common';\n\nimport { setIndent, SetIndentOptions } from './setIndent';\n\n/**\n * Increase the indentation of the selected blocks.\n */\nexport const indent = <V extends Value>(\n  editor: PlateEditor<V>,\n  options?: SetIndentOptions<V>\n) => {\n  setIndent(editor, { offset: 1, ...options });\n};\n","import { PlateEditor, Value } from '@udecode/plate-common';\n\nimport { setIndent, SetIndentOptions } from './setIndent';\n\n/**\n * Decrease the indentation of the selected blocks.\n */\nexport const outdent = <V extends Value>(\n  editor: PlateEditor<V>,\n  options?: SetIndentOptions<V>\n) => {\n  setIndent(editor, { offset: -1, ...options });\n};\n","import {\n  Hotkeys,\n  KeyboardHandlerReturnType,\n  PlateEditor,\n  Value,\n} from '@udecode/plate-common';\n\nimport { indent, outdent } from './transforms/index';\n\nexport const onKeyDownIndent =\n  <V extends Value = Value, E extends PlateEditor<V> = PlateEditor<V>>(\n    editor: E\n  ): KeyboardHandlerReturnType =>\n  (e) => {\n    if (e.defaultPrevented) return;\n\n    if (Hotkeys.isTab(editor, e)) {\n      e.preventDefault();\n      indent(editor);\n    }\n\n    if (Hotkeys.isUntab(editor, e)) {\n      e.preventDefault();\n      outdent(editor);\n    }\n  };\n","import {\n  PlateEditor,\n  setElements,\n  unsetNodes,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-common';\n\nimport { IndentPlugin, TIndentElement } from './types';\n\n/**\n * - `node.indent` can not exceed `indentMax`\n * - `node.indent` is unset if `node.type` is not in `types`\n */\nexport const withIndent = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>,\n>(\n  editor: E,\n  {\n    inject: { props: { validTypes } = {} },\n    options: { indentMax },\n  }: WithPlatePlugin<IndentPlugin, V, E>\n) => {\n  const { normalizeNode } = editor;\n\n  editor.normalizeNode = ([node, path]) => {\n    const element = node as TIndentElement;\n    const { type } = element;\n\n    if (type) {\n      if (validTypes!.includes(type)) {\n        if (indentMax && element.indent && element.indent > indentMax) {\n          setElements(editor, { indent: indentMax }, { at: path });\n          return;\n        }\n      } else if (element.indent) {\n        unsetNodes(editor, 'indent', { at: path });\n        return;\n      }\n    }\n\n    return normalizeNode([node, path]);\n  };\n\n  return editor;\n};\n","import {\n  createPluginFactory,\n  ELEMENT_DEFAULT,\n  getPluginType,\n} from '@udecode/plate-common';\n\nimport { onKeyDownIndent } from './onKeyDownIndent';\nimport { IndentPlugin } from './types';\nimport { withIndent } from './withIndent';\n\nexport const KEY_INDENT = 'indent';\n\nexport const createIndentPlugin = createPluginFactory<IndentPlugin>({\n  key: KEY_INDENT,\n  withOverrides: withIndent,\n  handlers: {\n    onKeyDown: onKeyDownIndent,\n  },\n  options: {\n    offset: 24,\n    unit: 'px',\n  },\n  then: (editor, { options: { offset, unit } = {} }) => ({\n    inject: {\n      props: {\n        nodeKey: KEY_INDENT,\n        styleKey: 'marginLeft',\n        validTypes: [getPluginType(editor, ELEMENT_DEFAULT)],\n        transformNodeValue: ({ nodeValue }) => nodeValue * offset! + unit!,\n      },\n    },\n  }),\n});\n","import {\n  createPluginFactory,\n  ELEMENT_DEFAULT,\n  getPluginType,\n} from '@udecode/plate-common';\n\nimport { IndentPlugin } from './types';\n\nexport const KEY_TEXT_INDENT = 'textIndent';\n\nexport const createTextIndentPlugin = createPluginFactory<IndentPlugin>({\n  key: KEY_TEXT_INDENT,\n  options: {\n    offset: 24,\n    unit: 'px',\n  },\n  then: (editor, { options: { offset, unit } = {} }) => ({\n    inject: {\n      props: {\n        nodeKey: KEY_TEXT_INDENT,\n        styleKey: 'textIndent',\n        validTypes: [getPluginType(editor, ELEMENT_DEFAULT)],\n        transformNodeValue({ nodeValue }) {\n          return nodeValue * offset! + unit!;\n        },\n      },\n    },\n  }),\n});\n","import { focusEditor, usePlateEditorRef } from '@udecode/plate-common';\n\nimport { indent } from '../index';\n\nexport const useIndentButton = () => {\n  const editor = usePlateEditorRef();\n\n  return {\n    props: {\n      onClick: (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n        e.stopPropagation();\n        indent(editor);\n        focusEditor(editor);\n      },\n    },\n  };\n};\n","import { focusEditor, usePlateEditorRef } from '@udecode/plate-common';\n\nimport { outdent } from '../index';\n\nexport const useOutdentButton = () => {\n  const editor = usePlateEditorRef();\n\n  return {\n    props: {\n      onClick: (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n        e.stopPropagation();\n        outdent(editor);\n        focusEditor(editor);\n      },\n    },\n  };\n};\n"],"names":["setIndent","editor","offset","getNodesOptions","setNodesProps","unsetNodesProps","nodeKey","getPluginInjectProps","KEY_INDENT","_nodes","getNodeEntries","block","mode","nodes","Array","from","withoutNormalizing","forEach","node","path","_ref","_setNodesProps","blockIndent","newIndent","props","indent","unsetNodes","at","setElements","options","outdent","onKeyDownIndent","e","defaultPrevented","Hotkeys","isTab","preventDefault","isUntab","withIndent","inject","validTypes","indentMax","normalizeNode","element","type","includes","createIndentPlugin","createPluginFactory","key","withOverrides","handlers","onKeyDown","unit","then","styleKey","getPluginType","ELEMENT_DEFAULT","transformNodeValue","nodeValue","KEY_TEXT_INDENT","createTextIndentPlugin","useIndentButton","usePlateEditorRef","onClick","stopPropagation","focusEditor","useOutdentButton"],"mappings":"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"}