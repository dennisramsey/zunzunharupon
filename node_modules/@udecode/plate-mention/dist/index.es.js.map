{"version":3,"file":"index.es.js","sources":["../../../node_modules/is-hotkey/lib/index.js","../src/queries/findMentionInput.ts","../src/queries/isNodeMentionInput.ts","../src/queries/isSelectionInMentionInput.ts","../src/transforms/removeMentionInput.ts","../src/handlers/moveSelectionByOffset.ts","../src/handlers/mentionOnKeyDownHandler.ts","../src/withMention.ts","../src/createMentionPlugin.ts","../src/getMentionOnSelectItem.ts"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\n// We make this a function so it can be tested in describe block mocks with Jest.\nvar IS_MAC = () => typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\n// We make this a function so it can be tested in describe block mocks with Jest.\nvar ALIASES = () => ({\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC() ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n});\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?') && value.length > 1;\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key' && event.key != null) {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES()[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;","import {\n  findNode,\n  FindNodeOptions,\n  getPluginType,\n  PlateEditor,\n  Value,\n} from '@udecode/plate-common';\n\nimport { ELEMENT_MENTION_INPUT } from '../createMentionPlugin';\nimport { TMentionInputElement } from '../types';\n\nexport const findMentionInput = <V extends Value>(\n  editor: PlateEditor<V>,\n  options?: Omit<FindNodeOptions<V>, 'match'>\n) =>\n  findNode<TMentionInputElement>(editor, {\n    ...options,\n    match: { type: getPluginType(editor, ELEMENT_MENTION_INPUT) },\n  });\n","import {\n  getPluginType,\n  PlateEditor,\n  TNode,\n  Value,\n} from '@udecode/plate-common';\n\nimport { ELEMENT_MENTION_INPUT } from '../createMentionPlugin';\nimport { TMentionInputElement } from '../types';\n\nexport const isNodeMentionInput = <V extends Value>(\n  editor: PlateEditor<V>,\n  node: TNode\n): node is TMentionInputElement => {\n  return node.type === getPluginType(editor, ELEMENT_MENTION_INPUT);\n};\n","import { PlateEditor, Value } from '@udecode/plate-common';\n\nimport { findMentionInput } from './findMentionInput';\n\nexport const isSelectionInMentionInput = <V extends Value>(\n  editor: PlateEditor<V>\n) => findMentionInput(editor) !== undefined;\n","import {\n  getNode,\n  insertText,\n  PlateEditor,\n  unwrapNodes,\n  Value,\n  withoutNormalizing,\n} from '@udecode/plate-common';\nimport { Path } from 'slate';\n\nimport { TMentionInputElement } from '../types';\n\nexport const removeMentionInput = <V extends Value>(\n  editor: PlateEditor<V>,\n  path: Path\n) =>\n  withoutNormalizing(editor, () => {\n    const node = getNode<TMentionInputElement>(editor, path);\n    if (!node) return;\n\n    const { trigger } = node;\n\n    insertText(editor, trigger, {\n      at: { path: [...path, 0], offset: 0 },\n    });\n    unwrapNodes(editor, {\n      at: path,\n    });\n  });\n","import { moveSelection, PlateEditor, Value } from '@udecode/plate-common';\nimport isHotkey from 'is-hotkey';\nimport { Range } from 'slate';\n\nimport { KeyboardEventHandler } from './KeyboardEventHandler';\n\nexport interface MoveSelectionByOffsetOptions<V extends Value = Value> {\n  query?: (editor: PlateEditor<V>) => boolean;\n}\n\n// TODO: move to core\nexport const moveSelectionByOffset: <V extends Value>(\n  editor: PlateEditor<V>,\n  options?: MoveSelectionByOffsetOptions<V>\n) => KeyboardEventHandler =\n  (editor, { query = () => true } = {}) =>\n  (event) => {\n    const { selection } = editor;\n\n    if (!selection || Range.isExpanded(selection) || !query(editor)) {\n      return false;\n    }\n\n    if (isHotkey('left', event)) {\n      event.preventDefault();\n      moveSelection(editor, { unit: 'offset', reverse: true });\n      return true;\n    }\n\n    if (isHotkey('right', event)) {\n      event.preventDefault();\n      moveSelection(editor, { unit: 'offset' });\n      return true;\n    }\n  };\n","import { PlateEditor, Value } from '@udecode/plate-common';\nimport isHotkey from 'is-hotkey';\n\nimport { findMentionInput } from '../queries/index';\nimport { removeMentionInput } from '../transforms/index';\nimport { KeyboardEventHandler } from './KeyboardEventHandler';\nimport {\n  moveSelectionByOffset,\n  MoveSelectionByOffsetOptions,\n} from './moveSelectionByOffset';\n\nexport const mentionOnKeyDownHandler: <V extends Value>(\n  options?: MoveSelectionByOffsetOptions<V>\n) => (editor: PlateEditor<V>) => KeyboardEventHandler =\n  (options) => (editor) => (event) => {\n    if (isHotkey('escape', event)) {\n      const currentMentionInput = findMentionInput(editor)!;\n      if (currentMentionInput) {\n        event.preventDefault();\n        removeMentionInput(editor, currentMentionInput[1]);\n        return true;\n      }\n      return false;\n    }\n\n    return moveSelectionByOffset(editor, options)(event);\n  };\n","import { comboboxActions } from '@udecode/plate-combobox';\nimport {\n  getEditorString,\n  getNodeString,\n  getPlugin,\n  getPointBefore,\n  getRange,\n  PlateEditor,\n  setSelection,\n  TNode,\n  TText,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-common';\nimport { Range } from 'slate';\n\nimport { ELEMENT_MENTION_INPUT } from './createMentionPlugin';\nimport {\n  findMentionInput,\n  isNodeMentionInput,\n  isSelectionInMentionInput,\n} from './queries/index';\nimport { removeMentionInput } from './transforms/removeMentionInput';\nimport { MentionPlugin, TMentionInputElement } from './types';\n\nexport const withMention = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>,\n>(\n  editor: E,\n  {\n    options: { id, trigger, triggerPreviousCharPattern, query, inputCreation },\n  }: WithPlatePlugin<MentionPlugin, V, E>\n) => {\n  const { type } = getPlugin<{}, V>(editor, ELEMENT_MENTION_INPUT);\n\n  const {\n    apply,\n    insertBreak,\n    insertText,\n    deleteBackward,\n    insertFragment,\n    insertTextData,\n    insertNode,\n  } = editor;\n\n  const stripNewLineAndTrim: (text: string) => string = (text) => {\n    return text\n      .split(/\\r\\n|\\r|\\n/)\n      .map((line) => line.trim())\n      .join('');\n  };\n\n  editor.insertFragment = (fragment) => {\n    const inMentionInput = findMentionInput(editor) !== undefined;\n    if (!inMentionInput) {\n      return insertFragment(fragment);\n    }\n\n    return insertText(\n      fragment.map((node) => stripNewLineAndTrim(getNodeString(node))).join('')\n    );\n  };\n\n  editor.insertTextData = (data) => {\n    const inMentionInput = findMentionInput(editor) !== undefined;\n    if (!inMentionInput) {\n      return insertTextData(data);\n    }\n\n    const text = data.getData('text/plain');\n    if (!text) {\n      return false;\n    }\n\n    editor.insertText(stripNewLineAndTrim(text));\n\n    return true;\n  };\n\n  editor.deleteBackward = (unit) => {\n    const currentMentionInput = findMentionInput(editor);\n    if (currentMentionInput && getNodeString(currentMentionInput[0]) === '') {\n      return removeMentionInput(editor, currentMentionInput[1]);\n    }\n\n    deleteBackward(unit);\n  };\n\n  editor.insertBreak = () => {\n    if (isSelectionInMentionInput(editor)) {\n      return;\n    }\n\n    insertBreak();\n  };\n\n  editor.insertText = (text) => {\n    if (\n      !editor.selection ||\n      text !== trigger ||\n      (query && !query(editor as PlateEditor)) ||\n      isSelectionInMentionInput(editor)\n    ) {\n      return insertText(text);\n    }\n\n    // Make sure a mention input is created at the beginning of line or after a whitespace\n    const previousChar = getEditorString(\n      editor,\n      getRange(\n        editor,\n        editor.selection,\n        getPointBefore(editor, editor.selection)\n      )\n    );\n    const matchesPreviousCharPattern =\n      triggerPreviousCharPattern?.test(previousChar);\n\n    if (matchesPreviousCharPattern && text === trigger) {\n      const data: TMentionInputElement = {\n        type,\n        children: [{ text: '' }],\n        trigger,\n      };\n      if (inputCreation) {\n        data[inputCreation.key] = inputCreation.value;\n      }\n      return insertNode(data);\n    }\n\n    return insertText(text);\n  };\n\n  editor.apply = (operation) => {\n    apply(operation);\n\n    if (operation.type === 'insert_text' || operation.type === 'remove_text') {\n      const currentMentionInput = findMentionInput(editor);\n      if (currentMentionInput) {\n        comboboxActions.text(getNodeString(currentMentionInput[0]));\n      }\n    } else if (operation.type === 'set_selection') {\n      const previousMentionInputPath = Range.isRange(operation.properties)\n        ? findMentionInput(editor, { at: operation.properties })?.[1]\n        : undefined;\n\n      const currentMentionInputPath = Range.isRange(operation.newProperties)\n        ? findMentionInput(editor, { at: operation.newProperties })?.[1]\n        : undefined;\n\n      if (previousMentionInputPath && !currentMentionInputPath) {\n        removeMentionInput(editor, previousMentionInputPath);\n      }\n\n      if (currentMentionInputPath) {\n        comboboxActions.targetRange(editor.selection);\n      }\n    } else if (\n      operation.type === 'insert_node' &&\n      isNodeMentionInput(editor, operation.node as TNode)\n    ) {\n      if ((operation.node as TMentionInputElement).trigger !== trigger) {\n        return;\n      }\n\n      const text =\n        ((operation.node as TMentionInputElement).children as TText[])[0]\n          ?.text ?? '';\n\n      if (\n        inputCreation === undefined ||\n        operation.node[inputCreation.key] === inputCreation.value\n      ) {\n        // Needed for undo - after an undo a mention insert we only receive\n        // an insert_node with the mention input, i.e. nothing indicating that it\n        // was an undo.\n        setSelection(editor, {\n          anchor: { path: operation.path.concat([0]), offset: text.length },\n          focus: { path: operation.path.concat([0]), offset: text.length },\n        });\n\n        comboboxActions.open({\n          activeId: id!,\n          text,\n          targetRange: editor.selection,\n        });\n      }\n    } else if (\n      operation.type === 'remove_node' &&\n      isNodeMentionInput(editor, operation.node as TNode)\n    ) {\n      if ((operation.node as TMentionInputElement).trigger !== trigger) {\n        return;\n      }\n\n      comboboxActions.reset();\n    }\n  };\n\n  return editor;\n};\n","import { createPluginFactory, removeNodes } from '@udecode/plate-common';\n\nimport { mentionOnKeyDownHandler } from './handlers/mentionOnKeyDownHandler';\nimport { isSelectionInMentionInput } from './queries/index';\nimport { MentionPlugin } from './types';\nimport { withMention } from './withMention';\n\nexport const ELEMENT_MENTION = 'mention';\nexport const ELEMENT_MENTION_INPUT = 'mention_input';\n\n/**\n * Enables support for autocompleting @mentions.\n */\nexport const createMentionPlugin = createPluginFactory<MentionPlugin>({\n  key: ELEMENT_MENTION,\n  isElement: true,\n  isInline: true,\n  isVoid: true,\n  isMarkableVoid: true,\n  handlers: {\n    onKeyDown: mentionOnKeyDownHandler({ query: isSelectionInMentionInput }),\n    onBlur: (editor) => () => {\n      // remove mention_input nodes from editor on blur\n      removeNodes(editor, {\n        match: (n) => n.type === ELEMENT_MENTION_INPUT,\n        at: [],\n      });\n    },\n  },\n  withOverrides: withMention,\n  options: {\n    trigger: '@',\n    triggerPreviousCharPattern: /^\\s?$/,\n    createMentionNode: (item) => ({ value: item.text }),\n  },\n  plugins: [\n    {\n      key: ELEMENT_MENTION_INPUT,\n      isElement: true,\n      isInline: true,\n    },\n  ],\n  then: (editor, { key }) => ({\n    options: {\n      id: key,\n    },\n  }),\n});\n","import {\n  comboboxActions,\n  ComboboxOnSelectItem,\n  comboboxSelectors,\n  Data,\n  NoData,\n  TComboboxItem,\n} from '@udecode/plate-combobox';\nimport {\n  getBlockAbove,\n  getPlugin,\n  insertNodes,\n  insertText,\n  isEndPoint,\n  moveSelection,\n  PlatePluginKey,\n  removeNodes,\n  select,\n  TNodeProps,\n  withoutMergingHistory,\n  withoutNormalizing,\n} from '@udecode/plate-common';\n\nimport { ELEMENT_MENTION } from './createMentionPlugin';\nimport { isNodeMentionInput } from './queries/isNodeMentionInput';\nimport { MentionPlugin, TMentionElement } from './types';\n\nexport interface CreateMentionNode<TData extends Data> {\n  (\n    item: TComboboxItem<TData>,\n    meta: CreateMentionNodeMeta\n  ): TNodeProps<TMentionElement>;\n}\n\nexport interface CreateMentionNodeMeta {\n  search: string;\n}\n\nexport const getMentionOnSelectItem =\n  <TData extends Data = NoData>({\n    key = ELEMENT_MENTION,\n  }: PlatePluginKey = {}): ComboboxOnSelectItem<TData> =>\n  (editor, item) => {\n    const targetRange = comboboxSelectors.targetRange();\n    if (!targetRange) return;\n\n    const {\n      type,\n      options: { insertSpaceAfterMention, createMentionNode },\n    } = getPlugin<MentionPlugin>(editor as any, key);\n\n    const pathAbove = getBlockAbove(editor)?.[1];\n    const isBlockEnd = () =>\n      editor.selection &&\n      pathAbove &&\n      isEndPoint(editor, editor.selection.anchor, pathAbove);\n\n    withoutNormalizing(editor, () => {\n      // Selectors are sensitive to operations, it's better to create everything\n      // before the editor state is changed. For example, asking for text after\n      // removeNodes below will return null.\n      const props = createMentionNode!(item, {\n        search: comboboxSelectors.text() ?? '',\n      });\n\n      select(editor, targetRange);\n\n      withoutMergingHistory(editor, () =>\n        removeNodes(editor, {\n          match: (node) => isNodeMentionInput(editor, node),\n        })\n      );\n\n      insertNodes<TMentionElement>(editor, {\n        type,\n        children: [{ text: '' }],\n        ...props,\n      } as TMentionElement);\n\n      // move the selection after the element\n      moveSelection(editor, { unit: 'offset' });\n\n      if (isBlockEnd() && insertSpaceAfterMention) {\n        insertText(editor, ' ');\n      }\n    });\n\n    return comboboxActions.reset();\n  };\n"],"names":["findMentionInput","editor","options","findNode","match","type","getPluginType","ELEMENT_MENTION_INPUT","isNodeMentionInput","node","isSelectionInMentionInput","undefined","removeMentionInput","path","withoutNormalizing","getNode","trigger","insertText","at","offset","unwrapNodes","moveSelectionByOffset","query","event","selection","Range","isExpanded","isHotkey","preventDefault","moveSelection","unit","reverse","mentionOnKeyDownHandler","currentMentionInput","withMention","id","triggerPreviousCharPattern","inputCreation","getPlugin","apply","insertBreak","deleteBackward","insertFragment","insertTextData","insertNode","stripNewLineAndTrim","text","split","map","line","trim","join","fragment","inMentionInput","getNodeString","data","getData","previousChar","getEditorString","getRange","getPointBefore","matchesPreviousCharPattern","test","children","key","value","operation","comboboxActions","_findMentionInput","_findMentionInput2","previousMentionInputPath","isRange","properties","currentMentionInputPath","newProperties","targetRange","_$text","_","setSelection","anchor","concat","length","focus","open","activeId","reset","ELEMENT_MENTION","createMentionPlugin","createPluginFactory","isElement","isInline","isVoid","isMarkableVoid","handlers","onKeyDown","onBlur","removeNodes","n","withOverrides","createMentionNode","item","plugins","then","getMentionOnSelectItem","_getBlockAbove","comboboxSelectors","insertSpaceAfterMention","pathAbove","getBlockAbove","isBlockEnd","isEndPoint","_comboboxSelectors$te","props","search","select","withoutMergingHistory","insertNodes"],"mappings":";;;;;;;;;;;;;AACA;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE;AAC7C,EAAE,KAAK,EAAE,IAAI;AACb,CAAC,CAAC,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,GAAG,MAAM,OAAO,MAAM,IAAI,WAAW,IAAI,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AAC1G;AACA,IAAI,SAAS,GAAG;AAChB,EAAE,GAAG,EAAE,QAAQ;AACf,EAAE,OAAO,EAAE,SAAS;AACpB,EAAE,IAAI,EAAE,SAAS;AACjB,EAAE,KAAK,EAAE,UAAU;AACnB,CAAC,CAAC;AACF;AACA;AACA,IAAI,OAAO,GAAG,OAAO;AACrB,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,KAAK,EAAE,OAAO;AAChB,EAAE,GAAG,EAAE,MAAM;AACb,EAAE,OAAO,EAAE,MAAM;AACjB,EAAE,GAAG,EAAE,SAAS;AAChB,EAAE,IAAI,EAAE,SAAS;AACjB,EAAE,GAAG,EAAE,QAAQ;AACf,EAAE,IAAI,EAAE,WAAW;AACnB,EAAE,GAAG,EAAE,QAAQ;AACf,EAAE,GAAG,EAAE,QAAQ;AACf,EAAE,IAAI,EAAE,WAAW;AACnB,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,MAAM,GAAG,SAAS;AACpC,EAAE,GAAG,EAAE,KAAK;AACZ,EAAE,MAAM,EAAE,KAAK;AACf,EAAE,MAAM,EAAE,OAAO;AACjB,EAAE,KAAK,EAAE,YAAY;AACrB,EAAE,KAAK,EAAE,GAAG;AACZ,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,EAAE,EAAE,SAAS;AACf,EAAE,GAAG,EAAE,MAAM;AACb,EAAE,OAAO,EAAE,MAAM;AACjB,CAAC,CAAC,CAAC;AACH;AACA,IAAI,KAAK,GAAG;AACZ,EAAE,SAAS,EAAE,CAAC;AACd,EAAE,GAAG,EAAE,CAAC;AACR,EAAE,KAAK,EAAE,EAAE;AACX,EAAE,KAAK,EAAE,EAAE;AACX,EAAE,OAAO,EAAE,EAAE;AACb,EAAE,GAAG,EAAE,EAAE;AACT,EAAE,KAAK,EAAE,EAAE;AACX,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,MAAM,EAAE,EAAE;AACZ,EAAE,GAAG,EAAE,EAAE;AACT,EAAE,MAAM,EAAE,EAAE;AACZ,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,GAAG,EAAE,EAAE;AACT,EAAE,IAAI,EAAE,EAAE;AACV,EAAE,SAAS,EAAE,EAAE;AACf,EAAE,OAAO,EAAE,EAAE;AACb,EAAE,UAAU,EAAE,EAAE;AAChB,EAAE,SAAS,EAAE,EAAE;AACf,EAAE,MAAM,EAAE,EAAE;AACZ,EAAE,MAAM,EAAE,EAAE;AACZ,EAAE,IAAI,EAAE,EAAE;AACV,EAAE,OAAO,EAAE,GAAG;AACd,EAAE,UAAU,EAAE,GAAG;AACjB,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,IAAI,EAAE,GAAG;AACX,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,IAAI,EAAE,GAAG;AACX,CAAC,CAAC;AACF;AACA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AAC7B,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAC3B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE;AAC1C,EAAE,IAAI,OAAO,IAAI,EAAE,OAAO,IAAI,OAAO,CAAC,EAAE;AACxC,IAAI,KAAK,GAAG,OAAO,CAAC;AACpB,IAAI,OAAO,GAAG,IAAI,CAAC;AACnB,GAAG;AACH;AACA,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAC9B,IAAI,MAAM,GAAG,CAAC,MAAM,CAAC,CAAC;AACtB,GAAG;AACH;AACA,EAAE,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,MAAM,EAAE;AAC3C,IAAI,OAAO,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACxC,GAAG,CAAC,CAAC;AACL,EAAE,IAAI,KAAK,GAAG,SAAS,KAAK,CAAC,CAAC,EAAE;AAChC,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,UAAU,MAAM,EAAE;AACxC,MAAM,OAAO,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AACtC,KAAK,CAAC,CAAC;AACP,GAAG,CAAC;AACJ,EAAE,IAAI,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACjD,EAAE,OAAO,GAAG,CAAC;AACb,CAAC;AACD;AACA,SAAS,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE;AACrC,EAAE,OAAO,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACjC,CAAC;AACD;AACA,SAAS,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE;AACpC,EAAE,OAAO,QAAQ,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC;AAClD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE;AACtC,EAAE,IAAI,KAAK,GAAG,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC;AACvC,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC;AACf;AACA;AACA,EAAE,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACxC,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACjC,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC7B;AACA;AACA;AACA,EAAE,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;AAC3B,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;AAC9B,GAAG;AACH;AACA,EAAE,IAAI,yBAAyB,GAAG,IAAI,CAAC;AACvC,EAAE,IAAI,iBAAiB,GAAG,KAAK,CAAC;AAChC,EAAE,IAAI,cAAc,GAAG,SAAS,CAAC;AACjC;AACA,EAAE,IAAI;AACN,IAAI,KAAK,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,yBAAyB,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,yBAAyB,GAAG,IAAI,EAAE;AAC7J,MAAM,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAC9B;AACA,MAAM,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAC7D;AACA,MAAM,IAAI,QAAQ,EAAE;AACpB,QAAQ,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACnC,OAAO;AACP;AACA,MAAM,IAAI,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;AAClC,MAAM,IAAI,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AACrC;AACA,MAAM,IAAI,MAAM,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;AACrC,QAAQ,IAAI,KAAK,EAAE;AACnB,UAAU,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC;AACzB,SAAS,MAAM;AACf,UAAU,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;AACvC,SAAS;AACT,OAAO;AACP;AACA,MAAM,IAAI,QAAQ,EAAE;AACpB,QAAQ,GAAG,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC;AAC/C,OAAO;AACP,KAAK;AACL,GAAG,CAAC,OAAO,GAAG,EAAE;AAChB,IAAI,iBAAiB,GAAG,IAAI,CAAC;AAC7B,IAAI,cAAc,GAAG,GAAG,CAAC;AACzB,GAAG,SAAS;AACZ,IAAI,IAAI;AACR,MAAM,IAAI,CAAC,yBAAyB,IAAI,SAAS,CAAC,MAAM,EAAE;AAC1D,QAAQ,SAAS,CAAC,MAAM,EAAE,CAAC;AAC3B,OAAO;AACP,KAAK,SAAS;AACd,MAAM,IAAI,iBAAiB,EAAE;AAC7B,QAAQ,MAAM,cAAc,CAAC;AAC7B,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA,EAAE,OAAO,GAAG,CAAC;AACb,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE;AACtC,EAAE,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;AAC1B,IAAI,IAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAC/B,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC;AACxB;AACA,IAAI,IAAI,QAAQ,IAAI,IAAI,EAAE;AAC1B,MAAM,SAAS;AACf,KAAK;AACL;AACA,IAAI,IAAI,GAAG,KAAK,KAAK,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,EAAE;AAC5C,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;AACvC,KAAK,MAAM,IAAI,GAAG,KAAK,OAAO,EAAE;AAChC,MAAM,MAAM,GAAG,QAAQ,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;AACxE,KAAK,MAAM;AACX,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;AAC1B,KAAK;AACL;AACA,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,QAAQ,KAAK,KAAK,EAAE;AAC9C,MAAM,SAAS;AACf,KAAK;AACL;AACA,IAAI,IAAI,MAAM,KAAK,QAAQ,EAAE;AAC7B,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL,GAAG;AACH;AACA,EAAE,OAAO,IAAI,CAAC;AACd,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,IAAI,EAAE;AACzB,EAAE,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AACzB,EAAE,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC7D,EAAE,OAAO,IAAI,CAAC;AACd,CAAC;AACD;AACA,SAAS,SAAS,CAAC,IAAI,EAAE;AACzB,EAAE,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAC5B,EAAE,IAAI,GAAG,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;AACjC,EAAE,OAAO,IAAI,CAAC;AACd,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,OAAe,CAAA,OAAA,GAAG,QAAQ,CAAC;AAC3B,OAAgB,CAAA,QAAA,GAAG,QAAQ,CAAC;AAC5B,OAAoB,CAAA,YAAA,GAAG,YAAY,CAAC;AACpC,OAAmB,CAAA,WAAA,GAAG,WAAW,CAAC;AAClC,OAAmB,CAAA,WAAA,GAAG,WAAW,CAAC;AAClC,OAAqB,CAAA,aAAA,GAAG,aAAa,CAAC;AACtC,OAAiB,CAAA,SAAA,GAAG,SAAS,CAAC;AAC9B,OAAA,CAAA,SAAiB,GAAG,SAAS,CAAA;;;;;;;;;;;;AC3OtB,MAAMA,gBAAgB,GAAGA,CAC9BC,MAAsB,EACtBC,OAA2C,KAE3CC,QAAQ,CAAuBF,MAAM,EAAE;AACrC,EAAA,GAAGC,OAAO;AACVE,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAI,EAAEC,aAAa,CAACL,MAAM,EAAEM,qBAAqB,CAAA;AAAE,GAAA;AAC9D,CAAC;;MCRUC,kBAAkB,GAAGA,CAChCP,MAAsB,EACtBQ,IAAW,KACsB;EACjC,OAAOA,IAAI,CAACJ,IAAI,KAAKC,aAAa,CAACL,MAAM,EAAEM,qBAAqB,CAAC,CAAA;AACnE;;ACXO,MAAMG,yBAAyB,GACpCT,MAAsB,IACnBD,gBAAgB,CAACC,MAAM,CAAC,KAAKU;;ACMrBC,MAAAA,kBAAkB,GAAGA,CAChCX,MAAsB,EACtBY,IAAU,KAEVC,kBAAkB,CAACb,MAAM,EAAE,MAAM;AAC/B,EAAA,MAAMQ,IAAI,GAAGM,OAAO,CAAuBd,MAAM,EAAEY,IAAI,CAAC,CAAA;EACxD,IAAI,CAACJ,IAAI,EAAE,OAAA;EAEX,MAAM;AAAEO,IAAAA,OAAAA;AAAQ,GAAC,GAAGP,IAAI,CAAA;AAExBQ,EAAAA,UAAU,CAAChB,MAAM,EAAEe,OAAO,EAAE;AAC1BE,IAAAA,EAAE,EAAE;AAAEL,MAAAA,IAAI,EAAE,CAAC,GAAGA,IAAI,EAAE,CAAC,CAAC;AAAEM,MAAAA,MAAM,EAAE,CAAA;AAAE,KAAA;AACtC,GAAC,CAAC,CAAA;EACFC,WAAW,CAACnB,MAAM,EAAE;AAClBiB,IAAAA,EAAE,EAAEL,IAAAA;AACN,GAAC,CAAC,CAAA;AACJ,CAAC;;AClBH;AACaQ,MAAAA,qBAGY,GACvBA,CAACpB,MAAM,EAAE;EAAEqB,KAAK,GAAGA,MAAM,IAAA;AAAK,CAAC,GAAG,EAAE,KACnCC,KAAK,IAAK;EACT,MAAM;AAAEC,IAAAA,SAAAA;AAAU,GAAC,GAAGvB,MAAM,CAAA;AAE5B,EAAA,IAAI,CAACuB,SAAS,IAAIC,KAAK,CAACC,UAAU,CAACF,SAAS,CAAC,IAAI,CAACF,KAAK,CAACrB,MAAM,CAAC,EAAE;AAC/D,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;AAEA,EAAA,IAAI0B,QAAQ,CAAC,MAAM,EAAEJ,KAAK,CAAC,EAAE;IAC3BA,KAAK,CAACK,cAAc,EAAE,CAAA;IACtBC,aAAa,CAAC5B,MAAM,EAAE;AAAE6B,MAAAA,IAAI,EAAE,QAAQ;AAAEC,MAAAA,OAAO,EAAE,IAAA;AAAK,KAAC,CAAC,CAAA;AACxD,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAEA,EAAA,IAAIJ,QAAQ,CAAC,OAAO,EAAEJ,KAAK,CAAC,EAAE;IAC5BA,KAAK,CAACK,cAAc,EAAE,CAAA;IACtBC,aAAa,CAAC5B,MAAM,EAAE;AAAE6B,MAAAA,IAAI,EAAE,QAAA;AAAS,KAAC,CAAC,CAAA;AACzC,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AACF;;ACvBK,MAAME,uBAEwC,GAClD9B,OAAO,IAAMD,MAAM,IAAMsB,KAAK,IAAK;AAClC,EAAA,IAAII,QAAQ,CAAC,QAAQ,EAAEJ,KAAK,CAAC,EAAE;AAC7B,IAAA,MAAMU,mBAAmB,GAAGjC,gBAAgB,CAACC,MAAM,CAAE,CAAA;AACrD,IAAA,IAAIgC,mBAAmB,EAAE;MACvBV,KAAK,CAACK,cAAc,EAAE,CAAA;AACtBhB,MAAAA,kBAAkB,CAACX,MAAM,EAAEgC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAA;AAClD,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;AACA,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;EAEA,OAAOZ,qBAAqB,CAACpB,MAAM,EAAEC,OAAO,CAAC,CAACqB,KAAK,CAAC,CAAA;AACtD;;ACDWW,MAAAA,WAAW,GAAGA,CAIzBjC,MAAS,EACT;AACEC,EAAAA,OAAO,EAAE;IAAEiC,EAAE;IAAEnB,OAAO;IAAEoB,0BAA0B;IAAEd,KAAK;AAAEe,IAAAA,aAAAA;AAAc,GAAA;AACrC,CAAC,KACpC;EACH,MAAM;AAAEhC,IAAAA,IAAAA;AAAK,GAAC,GAAGiC,SAAS,CAAQrC,MAAM,EAAEM,qBAAqB,CAAC,CAAA;EAEhE,MAAM;IACJgC,KAAK;IACLC,WAAW;IACXvB,UAAU;IACVwB,cAAc;IACdC,cAAc;IACdC,cAAc;AACdC,IAAAA,UAAAA;AACF,GAAC,GAAG3C,MAAM,CAAA;EAEV,MAAM4C,mBAA6C,GAAIC,IAAI,IAAK;IAC9D,OAAOA,IAAI,CACRC,KAAK,CAAC,YAAY,CAAC,CACnBC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,CAAC,CAC1BC,IAAI,CAAC,EAAE,CAAC,CAAA;GACZ,CAAA;AAEDlD,EAAAA,MAAM,CAACyC,cAAc,GAAIU,QAAQ,IAAK;AACpC,IAAA,MAAMC,cAAc,GAAGrD,gBAAgB,CAACC,MAAM,CAAC,KAAKU,SAAS,CAAA;IAC7D,IAAI,CAAC0C,cAAc,EAAE;MACnB,OAAOX,cAAc,CAACU,QAAQ,CAAC,CAAA;AACjC,KAAA;IAEA,OAAOnC,UAAU,CACfmC,QAAQ,CAACJ,GAAG,CAAEvC,IAAI,IAAKoC,mBAAmB,CAACS,aAAa,CAAC7C,IAAI,CAAC,CAAC,CAAC,CAAC0C,IAAI,CAAC,EAAE,CAC1E,CAAC,CAAA;GACF,CAAA;AAEDlD,EAAAA,MAAM,CAAC0C,cAAc,GAAIY,IAAI,IAAK;AAChC,IAAA,MAAMF,cAAc,GAAGrD,gBAAgB,CAACC,MAAM,CAAC,KAAKU,SAAS,CAAA;IAC7D,IAAI,CAAC0C,cAAc,EAAE;MACnB,OAAOV,cAAc,CAACY,IAAI,CAAC,CAAA;AAC7B,KAAA;AAEA,IAAA,MAAMT,IAAI,GAAGS,IAAI,CAACC,OAAO,CAAC,YAAY,CAAC,CAAA;IACvC,IAAI,CAACV,IAAI,EAAE;AACT,MAAA,OAAO,KAAK,CAAA;AACd,KAAA;AAEA7C,IAAAA,MAAM,CAACgB,UAAU,CAAC4B,mBAAmB,CAACC,IAAI,CAAC,CAAC,CAAA;AAE5C,IAAA,OAAO,IAAI,CAAA;GACZ,CAAA;AAED7C,EAAAA,MAAM,CAACwC,cAAc,GAAIX,IAAI,IAAK;AAChC,IAAA,MAAMG,mBAAmB,GAAGjC,gBAAgB,CAACC,MAAM,CAAC,CAAA;IACpD,IAAIgC,mBAAmB,IAAIqB,aAAa,CAACrB,mBAAmB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;MACvE,OAAOrB,kBAAkB,CAACX,MAAM,EAAEgC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAA;AAC3D,KAAA;IAEAQ,cAAc,CAACX,IAAI,CAAC,CAAA;GACrB,CAAA;EAED7B,MAAM,CAACuC,WAAW,GAAG,MAAM;AACzB,IAAA,IAAI9B,yBAAyB,CAACT,MAAM,CAAC,EAAE;AACrC,MAAA,OAAA;AACF,KAAA;AAEAuC,IAAAA,WAAW,EAAE,CAAA;GACd,CAAA;AAEDvC,EAAAA,MAAM,CAACgB,UAAU,GAAI6B,IAAI,IAAK;IAC5B,IACE,CAAC7C,MAAM,CAACuB,SAAS,IACjBsB,IAAI,KAAK9B,OAAO,IACfM,KAAK,IAAI,CAACA,KAAK,CAACrB,MAAqB,CAAE,IACxCS,yBAAyB,CAACT,MAAM,CAAC,EACjC;MACA,OAAOgB,UAAU,CAAC6B,IAAI,CAAC,CAAA;AACzB,KAAA;;AAEA;IACA,MAAMW,YAAY,GAAGC,eAAe,CAClCzD,MAAM,EACN0D,QAAQ,CACN1D,MAAM,EACNA,MAAM,CAACuB,SAAS,EAChBoC,cAAc,CAAC3D,MAAM,EAAEA,MAAM,CAACuB,SAAS,CACzC,CACF,CAAC,CAAA;IACD,MAAMqC,0BAA0B,GAC9BzB,0BAA0B,KAA1BA,IAAAA,IAAAA,0BAA0B,KAA1BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,0BAA0B,CAAE0B,IAAI,CAACL,YAAY,CAAC,CAAA;AAEhD,IAAA,IAAII,0BAA0B,IAAIf,IAAI,KAAK9B,OAAO,EAAE;AAClD,MAAA,MAAMuC,IAA0B,GAAG;QACjClD,IAAI;AACJ0D,QAAAA,QAAQ,EAAE,CAAC;AAAEjB,UAAAA,IAAI,EAAE,EAAA;AAAG,SAAC,CAAC;AACxB9B,QAAAA,OAAAA;OACD,CAAA;AACD,MAAA,IAAIqB,aAAa,EAAE;QACjBkB,IAAI,CAAClB,aAAa,CAAC2B,GAAG,CAAC,GAAG3B,aAAa,CAAC4B,KAAK,CAAA;AAC/C,OAAA;MACA,OAAOrB,UAAU,CAACW,IAAI,CAAC,CAAA;AACzB,KAAA;IAEA,OAAOtC,UAAU,CAAC6B,IAAI,CAAC,CAAA;GACxB,CAAA;AAED7C,EAAAA,MAAM,CAACsC,KAAK,GAAI2B,SAAS,IAAK;IAC5B3B,KAAK,CAAC2B,SAAS,CAAC,CAAA;IAEhB,IAAIA,SAAS,CAAC7D,IAAI,KAAK,aAAa,IAAI6D,SAAS,CAAC7D,IAAI,KAAK,aAAa,EAAE;AACxE,MAAA,MAAM4B,mBAAmB,GAAGjC,gBAAgB,CAACC,MAAM,CAAC,CAAA;AACpD,MAAA,IAAIgC,mBAAmB,EAAE;QACvBkC,eAAe,CAACrB,IAAI,CAACQ,aAAa,CAACrB,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AAC7D,OAAA;AACF,KAAC,MAAM,IAAIiC,SAAS,CAAC7D,IAAI,KAAK,eAAe,EAAE;MAAA,IAAA+D,iBAAA,EAAAC,kBAAA,CAAA;AAC7C,MAAA,MAAMC,wBAAwB,GAAG7C,KAAK,CAAC8C,OAAO,CAACL,SAAS,CAACM,UAAU,CAAC,IAAAJ,iBAAA,GAChEpE,gBAAgB,CAACC,MAAM,EAAE;QAAEiB,EAAE,EAAEgD,SAAS,CAACM,UAAAA;OAAY,CAAC,cAAAJ,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAtDA,iBAAA,CAAyD,CAAC,CAAC,GAC3DzD,SAAS,CAAA;AAEb,MAAA,MAAM8D,uBAAuB,GAAGhD,KAAK,CAAC8C,OAAO,CAACL,SAAS,CAACQ,aAAa,CAAC,IAAAL,kBAAA,GAClErE,gBAAgB,CAACC,MAAM,EAAE;QAAEiB,EAAE,EAAEgD,SAAS,CAACQ,aAAAA;OAAe,CAAC,cAAAL,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAzDA,kBAAA,CAA4D,CAAC,CAAC,GAC9D1D,SAAS,CAAA;AAEb,MAAA,IAAI2D,wBAAwB,IAAI,CAACG,uBAAuB,EAAE;AACxD7D,QAAAA,kBAAkB,CAACX,MAAM,EAAEqE,wBAAwB,CAAC,CAAA;AACtD,OAAA;AAEA,MAAA,IAAIG,uBAAuB,EAAE;AAC3BN,QAAAA,eAAe,CAACQ,WAAW,CAAC1E,MAAM,CAACuB,SAAS,CAAC,CAAA;AAC/C,OAAA;AACF,KAAC,MAAM,IACL0C,SAAS,CAAC7D,IAAI,KAAK,aAAa,IAChCG,kBAAkB,CAACP,MAAM,EAAEiE,SAAS,CAACzD,IAAa,CAAC,EACnD;MAAA,IAAAmE,MAAA,EAAAC,CAAA,CAAA;AACA,MAAA,IAAKX,SAAS,CAACzD,IAAI,CAA0BO,OAAO,KAAKA,OAAO,EAAE;AAChE,QAAA,OAAA;AACF,OAAA;MAEA,MAAM8B,IAAI,GAAA8B,CAAAA,MAAA,GAAAC,CAAAA,CAAA,GACNX,SAAS,CAACzD,IAAI,CAA0BsD,QAAQ,CAAa,CAAC,CAAC,MAAA,IAAA,IAAAc,CAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjEA,CAAA,CACI/B,IAAI,MAAA,IAAA,IAAA8B,MAAA,KAAA,KAAA,CAAA,GAAAA,MAAA,GAAI,EAAE,CAAA;AAEhB,MAAA,IACEvC,aAAa,KAAK1B,SAAS,IAC3BuD,SAAS,CAACzD,IAAI,CAAC4B,aAAa,CAAC2B,GAAG,CAAC,KAAK3B,aAAa,CAAC4B,KAAK,EACzD;AACA;AACA;AACA;QACAa,YAAY,CAAC7E,MAAM,EAAE;AACnB8E,UAAAA,MAAM,EAAE;YAAElE,IAAI,EAAEqD,SAAS,CAACrD,IAAI,CAACmE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAAE7D,MAAM,EAAE2B,IAAI,CAACmC,MAAAA;WAAQ;AACjEC,UAAAA,KAAK,EAAE;YAAErE,IAAI,EAAEqD,SAAS,CAACrD,IAAI,CAACmE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAAE7D,MAAM,EAAE2B,IAAI,CAACmC,MAAAA;AAAO,WAAA;AACjE,SAAC,CAAC,CAAA;QAEFd,eAAe,CAACgB,IAAI,CAAC;AACnBC,UAAAA,QAAQ,EAAEjD,EAAG;UACbW,IAAI;UACJ6B,WAAW,EAAE1E,MAAM,CAACuB,SAAAA;AACtB,SAAC,CAAC,CAAA;AACJ,OAAA;AACF,KAAC,MAAM,IACL0C,SAAS,CAAC7D,IAAI,KAAK,aAAa,IAChCG,kBAAkB,CAACP,MAAM,EAAEiE,SAAS,CAACzD,IAAa,CAAC,EACnD;AACA,MAAA,IAAKyD,SAAS,CAACzD,IAAI,CAA0BO,OAAO,KAAKA,OAAO,EAAE;AAChE,QAAA,OAAA;AACF,OAAA;MAEAmD,eAAe,CAACkB,KAAK,EAAE,CAAA;AACzB,KAAA;GACD,CAAA;AAED,EAAA,OAAOpF,MAAM,CAAA;AACf;;AClMO,MAAMqF,eAAe,GAAG,UAAS;AACjC,MAAM/E,qBAAqB,GAAG,gBAAe;;AAEpD;AACA;AACA;AACagF,MAAAA,mBAAmB,GAAGC,mBAAmB,CAAgB;AACpExB,EAAAA,GAAG,EAAEsB,eAAe;AACpBG,EAAAA,SAAS,EAAE,IAAI;AACfC,EAAAA,QAAQ,EAAE,IAAI;AACdC,EAAAA,MAAM,EAAE,IAAI;AACZC,EAAAA,cAAc,EAAE,IAAI;AACpBC,EAAAA,QAAQ,EAAE;IACRC,SAAS,EAAE9D,uBAAuB,CAAC;AAAEV,MAAAA,KAAK,EAAEZ,yBAAAA;AAA0B,KAAC,CAAC;IACxEqF,MAAM,EAAG9F,MAAM,IAAK,MAAM;AACxB;MACA+F,WAAW,CAAC/F,MAAM,EAAE;AAClBG,QAAAA,KAAK,EAAG6F,CAAC,IAAKA,CAAC,CAAC5F,IAAI,KAAKE,qBAAqB;AAC9CW,QAAAA,EAAE,EAAE,EAAA;AACN,OAAC,CAAC,CAAA;AACJ,KAAA;GACD;AACDgF,EAAAA,aAAa,EAAEhE,WAAW;AAC1BhC,EAAAA,OAAO,EAAE;AACPc,IAAAA,OAAO,EAAE,GAAG;AACZoB,IAAAA,0BAA0B,EAAE,OAAO;IACnC+D,iBAAiB,EAAGC,IAAI,KAAM;MAAEnC,KAAK,EAAEmC,IAAI,CAACtD,IAAAA;KAAM,CAAA;GACnD;AACDuD,EAAAA,OAAO,EAAE,CACP;AACErC,IAAAA,GAAG,EAAEzD,qBAAqB;AAC1BkF,IAAAA,SAAS,EAAE,IAAI;AACfC,IAAAA,QAAQ,EAAE,IAAA;AACZ,GAAC,CACF;EACDY,IAAI,EAAEA,CAACrG,MAAM,EAAE;AAAE+D,IAAAA,GAAAA;AAAI,GAAC,MAAM;AAC1B9D,IAAAA,OAAO,EAAE;AACPiC,MAAAA,EAAE,EAAE6B,GAAAA;AACN,KAAA;GACD,CAAA;AACH,CAAC;;ACTM,MAAMuC,sBAAsB,GACjCA,CAA8B;AAC5BvC,EAAAA,GAAG,GAAGsB,eAAAA;AACQ,CAAC,GAAG,EAAE,KACtB,CAACrF,MAAM,EAAEmG,IAAI,KAAK;AAAA,EAAA,IAAAI,cAAA,CAAA;AAChB,EAAA,MAAM7B,WAAW,GAAG8B,iBAAiB,CAAC9B,WAAW,EAAE,CAAA;EACnD,IAAI,CAACA,WAAW,EAAE,OAAA;EAElB,MAAM;IACJtE,IAAI;AACJH,IAAAA,OAAO,EAAE;MAAEwG,uBAAuB;AAAEP,MAAAA,iBAAAA;AAAkB,KAAA;AACxD,GAAC,GAAG7D,SAAS,CAAgBrC,MAAM,EAAS+D,GAAG,CAAC,CAAA;AAEhD,EAAA,MAAM2C,SAAS,GAAA,CAAAH,cAAA,GAAGI,aAAa,CAAC3G,MAAM,CAAC,MAAA,IAAA,IAAAuG,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAArBA,cAAA,CAAwB,CAAC,CAAC,CAAA;EAC5C,MAAMK,UAAU,GAAGA,MACjB5G,MAAM,CAACuB,SAAS,IAChBmF,SAAS,IACTG,UAAU,CAAC7G,MAAM,EAAEA,MAAM,CAACuB,SAAS,CAACuD,MAAM,EAAE4B,SAAS,CAAC,CAAA;EAExD7F,kBAAkB,CAACb,MAAM,EAAE,MAAM;AAAA,IAAA,IAAA8G,qBAAA,CAAA;AAC/B;AACA;AACA;AACA,IAAA,MAAMC,KAAK,GAAGb,iBAAiB,CAAEC,IAAI,EAAE;AACrCa,MAAAA,MAAM,EAAAF,CAAAA,qBAAA,GAAEN,iBAAiB,CAAC3D,IAAI,EAAE,MAAAiE,IAAAA,IAAAA,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,EAAA;AACtC,KAAC,CAAC,CAAA;AAEFG,IAAAA,MAAM,CAACjH,MAAM,EAAE0E,WAAW,CAAC,CAAA;AAE3BwC,IAAAA,qBAAqB,CAAClH,MAAM,EAAE,MAC5B+F,WAAW,CAAC/F,MAAM,EAAE;AAClBG,MAAAA,KAAK,EAAGK,IAAI,IAAKD,kBAAkB,CAACP,MAAM,EAAEQ,IAAI,CAAA;AAClD,KAAC,CACH,CAAC,CAAA;IAED2G,WAAW,CAAkBnH,MAAM,EAAE;MACnCI,IAAI;AACJ0D,MAAAA,QAAQ,EAAE,CAAC;AAAEjB,QAAAA,IAAI,EAAE,EAAA;AAAG,OAAC,CAAC;MACxB,GAAGkE,KAAAA;AACL,KAAoB,CAAC,CAAA;;AAErB;IACAnF,aAAa,CAAC5B,MAAM,EAAE;AAAE6B,MAAAA,IAAI,EAAE,QAAA;AAAS,KAAC,CAAC,CAAA;AAEzC,IAAA,IAAI+E,UAAU,EAAE,IAAIH,uBAAuB,EAAE;AAC3CzF,MAAAA,UAAU,CAAChB,MAAM,EAAE,GAAG,CAAC,CAAA;AACzB,KAAA;AACF,GAAC,CAAC,CAAA;AAEF,EAAA,OAAOkE,eAAe,CAACkB,KAAK,EAAE,CAAA;AAChC;;;;","x_google_ignoreList":[0]}