{"version":3,"file":"index.js","sources":["../../../node_modules/is-hotkey/lib/index.js","../src/onKeyDownAutoformat.ts","../../../node_modules/lodash/isArray.js","../../../node_modules/lodash/castArray.js","../src/utils/getMatchRange.ts","../src/transforms/autoformatBlock.ts","../src/utils/isPreviousCharacterEmpty.ts","../src/utils/getMatchPoints.ts","../src/transforms/autoformatMark.ts","../src/transforms/autoformatText.ts","../src/withAutoformat.ts","../src/createAutoformatPlugin.ts","../src/rules/autoformatArrow.ts","../src/rules/autoformatLegal.ts","../src/rules/autoformatPunctuation.ts","../src/rules/autoformatSmartQuotes.ts","../src/rules/math/autoformatComparison.ts","../src/rules/math/autoformatEquality.ts","../src/rules/math/autoformatFraction.ts","../src/rules/math/autoformatOperation.ts","../src/rules/math/autoformatSubscript.ts","../src/rules/math/autoformatSuperscript.ts","../src/rules/math/autoformatMath.ts"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\n// We make this a function so it can be tested in describe block mocks with Jest.\nvar IS_MAC = () => typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\n// We make this a function so it can be tested in describe block mocks with Jest.\nvar ALIASES = () => ({\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC() ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n});\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?') && value.length > 1;\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key' && event.key != null) {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES()[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;","import { KeyboardEvent } from 'react';\nimport {\n  deleteBackward,\n  getEditorString,\n  getPointBefore,\n  insertText,\n  KeyboardHandlerReturnType,\n  PlateEditor,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-common';\nimport isHotkey from 'is-hotkey';\nimport { Range } from 'slate';\n\nimport { AutoformatPlugin, AutoformatRule, AutoformatTextRule } from './types';\n\nexport const onKeyDownAutoformat =\n  <V extends Value = Value, E extends PlateEditor<V> = PlateEditor<V>>(\n    editor: PlateEditor<V>,\n    {\n      options: { rules, enableUndoOnDelete },\n    }: WithPlatePlugin<AutoformatPlugin, V, E>\n  ): KeyboardHandlerReturnType =>\n  (e: KeyboardEvent) => {\n    if (e.defaultPrevented) return false;\n\n    // Abort quicky if hotKey was not pressed.\n    if (!isHotkey('backspace', { byKey: true }, e)) return false;\n\n    if (!rules) return false;\n    if (!enableUndoOnDelete) return false;\n\n    // Abort if selection is not collapsed i.e. we're not deleting single character.\n    const { selection } = editor;\n    if (!selection || !Range.isCollapsed(selection)) return;\n\n    // Get start and end point of selection.\n    // For example: Text|\n    //                  ^ cursor at the moment of pressing the hotkey\n    // start, end will be equal to the location of the |\n    const [start, end] = Range.edges(selection);\n\n    // Get location before the cursor.\n    // before will be a point one character before | so:\n    // Text|\n    //    ^\n    const before = getPointBefore(editor, end, {\n      unit: 'character',\n      distance: 1,\n    });\n    if (!start) return false;\n    if (!before) return false;\n\n    // Abort if there doesn't exist a valid character to replace.\n    const charRange = { anchor: before, focus: start };\n    if (!charRange) return false;\n\n    // Text|\n    //    ^\n    // Between ^ and | is t\n    const char = getEditorString(editor, charRange);\n    if (!char) return false;\n\n    const matchers: AutoformatRule[] = [...rules].filter((rule) => {\n      const textRule = rule as AutoformatTextRule;\n      if (textRule) {\n        return textRule.mode === 'text' && textRule.format === char;\n      }\n      return false;\n    });\n\n    // abort if no matching substitution is found.\n    if (!matchers || matchers.length === 0) return false;\n\n    e.preventDefault();\n\n    // remove the shorthand character.\n    deleteBackward(editor, { unit: 'character' });\n\n    // put back the orignal characters. This could match to a single string or an array.\n    const rule = matchers[0] as AutoformatTextRule;\n\n    if (rule && typeof rule.match === 'string') {\n      insertText(editor, rule.match);\n    } else {\n      const matchArray = rule.match as string[];\n      if (matchArray && matchArray.length > 0) {\n        insertText(editor, matchArray[0]);\n      }\n    }\n    return true;\n  };\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isArray = require('./isArray');\n\n/**\n * Casts `value` as an array if it's not one.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Lang\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast array.\n * @example\n *\n * _.castArray(1);\n * // => [1]\n *\n * _.castArray({ 'a': 1 });\n * // => [{ 'a': 1 }]\n *\n * _.castArray('abc');\n * // => ['abc']\n *\n * _.castArray(null);\n * // => [null]\n *\n * _.castArray(undefined);\n * // => [undefined]\n *\n * _.castArray();\n * // => []\n *\n * var array = [1, 2, 3];\n * console.log(_.castArray(array) === array);\n * // => true\n */\nfunction castArray() {\n  if (!arguments.length) {\n    return [];\n  }\n  var value = arguments[0];\n  return isArray(value) ? value : [value];\n}\n\nmodule.exports = castArray;\n","import castArray from 'lodash/castArray';\n\nimport { AutoformatRule, MatchRange } from '../types';\n\nexport const getMatchRange = ({\n  match,\n  trigger,\n}: {\n  match: string | MatchRange;\n  trigger: AutoformatRule['trigger'];\n}) => {\n  let start: string;\n  let end: string;\n\n  if (typeof match === 'object') {\n    start = match.start;\n    end = match.end;\n  } else {\n    start = match;\n    end = start.split('').reverse().join('');\n  }\n\n  const triggers: string[] = trigger ? castArray(trigger) : [end.slice(-1)];\n\n  end = trigger ? end : end.slice(0, -1);\n\n  return {\n    start,\n    end,\n    triggers,\n  };\n};\n","import {\n  deleteText,\n  ELEMENT_DEFAULT,\n  getEditorString,\n  getRangeBefore,\n  getRangeFromBlockStart,\n  isBlock,\n  isVoid,\n  PlateEditor,\n  setElements,\n  someNode,\n  Value,\n} from '@udecode/plate-common';\nimport castArray from 'lodash/castArray';\nimport { Range } from 'slate';\n\nimport { AutoformatBlockRule } from '../types';\nimport { getMatchRange } from '../utils/getMatchRange';\n\nexport interface AutoformatBlockOptions<V extends Value = Value>\n  extends AutoformatBlockRule<V> {\n  text: string;\n}\n\nexport const autoformatBlock = <V extends Value>(\n  editor: PlateEditor<V>,\n  {\n    text,\n    trigger,\n    match: _match,\n    type = ELEMENT_DEFAULT,\n    allowSameTypeAbove = false,\n    preFormat,\n    format,\n    triggerAtBlockStart = true,\n  }: AutoformatBlockOptions<V>\n) => {\n  const matches = castArray(_match as string | string[]);\n\n  for (const match of matches) {\n    const { end, triggers } = getMatchRange({\n      match: { start: '', end: match },\n      trigger,\n    });\n\n    if (!triggers.includes(text)) continue;\n\n    let matchRange: Range | undefined;\n\n    if (triggerAtBlockStart) {\n      matchRange = getRangeFromBlockStart(editor) as Range;\n\n      // Don't autoformat if there is void nodes.\n      const hasVoidNode = someNode(editor, {\n        at: matchRange,\n        match: (n) => isVoid(editor, n),\n      });\n      if (hasVoidNode) continue;\n\n      const textFromBlockStart = getEditorString(editor, matchRange);\n\n      if (end !== textFromBlockStart) continue;\n    } else {\n      matchRange = getRangeBefore(editor, editor.selection as Range, {\n        matchString: end,\n      });\n      if (!matchRange) continue;\n    }\n\n    if (!allowSameTypeAbove) {\n      // Don't autoformat if already in a block of the same type.\n      const isBelowSameBlockType = someNode(editor, { match: { type } });\n      if (isBelowSameBlockType) continue;\n    }\n\n    // if the trigger is only 1 char there is nothing to delete, so we'd delete unrelated text\n    if (match.length > 1) {\n      deleteText(editor, {\n        at: matchRange,\n      });\n    }\n\n    if (preFormat) {\n      preFormat(editor);\n    }\n\n    if (format) {\n      format(editor);\n    } else {\n      setElements(\n        editor,\n        { type },\n        {\n          match: (n) => isBlock(editor, n),\n        }\n      );\n    }\n\n    return true;\n  }\n\n  return false;\n};\n","import {\n  getEditorString,\n  getRangeBefore,\n  TEditor,\n  Value,\n} from '@udecode/plate-common';\nimport { Location } from 'slate';\n\nexport const isPreviousCharacterEmpty = <V extends Value>(\n  editor: TEditor<V>,\n  at: Location\n) => {\n  const range = getRangeBefore(editor, at);\n  if (range) {\n    const text = getEditorString(editor, range);\n    if (text) {\n      const noWhiteSpaceRegex = new RegExp(`\\\\S+`);\n\n      return !text.match(noWhiteSpaceRegex);\n    }\n  }\n\n  return true;\n};\n","import { getPointBeforeLocation, TEditor, Value } from '@udecode/plate-common';\nimport { Point, Range } from 'slate';\n\nimport { MatchRange } from '../types';\nimport { isPreviousCharacterEmpty } from './isPreviousCharacterEmpty';\n\nexport type GetMatchPointsReturnType =\n  | undefined\n  | {\n      beforeStartMatchPoint: Point | undefined;\n      afterStartMatchPoint: Point | undefined;\n      beforeEndMatchPoint: Point;\n    };\n\nexport const getMatchPoints = <V extends Value>(\n  editor: TEditor<V>,\n  { start, end }: MatchRange\n) => {\n  const selection = editor.selection as Range;\n\n  let beforeEndMatchPoint = selection.anchor;\n  if (end) {\n    beforeEndMatchPoint = getPointBeforeLocation(editor, selection, {\n      matchString: end,\n    });\n\n    if (!beforeEndMatchPoint) return;\n  }\n\n  let afterStartMatchPoint: Point | undefined;\n  let beforeStartMatchPoint: Point | undefined;\n\n  if (start) {\n    afterStartMatchPoint = getPointBeforeLocation(editor, beforeEndMatchPoint, {\n      matchString: start,\n      skipInvalid: true,\n      afterMatch: true,\n    });\n\n    if (!afterStartMatchPoint) return;\n\n    beforeStartMatchPoint = getPointBeforeLocation(\n      editor,\n      beforeEndMatchPoint,\n      {\n        matchString: start,\n        skipInvalid: true,\n      }\n    );\n\n    if (!isPreviousCharacterEmpty(editor, beforeStartMatchPoint as Point))\n      return;\n  }\n\n  return {\n    afterStartMatchPoint,\n    beforeStartMatchPoint,\n    beforeEndMatchPoint,\n  };\n};\n","import {\n  collapseSelection,\n  deleteText,\n  getEditorString,\n  removeMark,\n  select,\n  TEditor,\n  Value,\n} from '@udecode/plate-common';\nimport castArray from 'lodash/castArray';\nimport { Point, Range } from 'slate';\n\nimport { AutoformatMarkRule } from '../types';\nimport { getMatchPoints } from '../utils/getMatchPoints';\nimport { getMatchRange } from '../utils/getMatchRange';\n\nexport interface AutoformatMarkOptions extends AutoformatMarkRule {\n  text: string;\n}\n\nexport const autoformatMark = <V extends Value>(\n  editor: TEditor<V>,\n  { type, text, trigger, match: _match, ignoreTrim }: AutoformatMarkOptions\n) => {\n  if (!type) return false;\n\n  const selection = editor.selection as Range;\n  const matches = castArray(_match);\n\n  for (const match of matches) {\n    const { start, end, triggers } = getMatchRange({\n      match,\n      trigger,\n    });\n\n    if (!triggers.includes(text)) continue;\n\n    const matched = getMatchPoints(editor, { start, end });\n    if (!matched) continue;\n\n    const { afterStartMatchPoint, beforeEndMatchPoint, beforeStartMatchPoint } =\n      matched;\n\n    const matchRange = {\n      anchor: afterStartMatchPoint,\n      focus: beforeEndMatchPoint,\n    } as Range;\n\n    if (!ignoreTrim) {\n      const matchText = getEditorString(editor, matchRange);\n      if (matchText.trim() !== matchText) continue;\n    }\n\n    // delete end match\n    if (end) {\n      deleteText(editor, {\n        at: {\n          anchor: beforeEndMatchPoint,\n          focus: selection.anchor,\n        },\n      });\n    }\n\n    const marks = castArray(type);\n\n    // add mark to the text between the matches\n    select(editor, matchRange as Range);\n    marks.forEach((mark) => {\n      editor.addMark(mark, true);\n    });\n    collapseSelection(editor, { edge: 'end' });\n    removeMark(editor, { key: marks as any, shouldChange: false });\n\n    deleteText(editor, {\n      at: {\n        anchor: beforeStartMatchPoint as Point,\n        focus: afterStartMatchPoint as Point,\n      },\n    });\n\n    return true;\n  }\n\n  return false;\n};\n","import {\n  deleteText,\n  insertText,\n  PlateEditor,\n  Value,\n} from '@udecode/plate-common';\nimport castArray from 'lodash/castArray';\nimport { Point, Range } from 'slate';\n\nimport { AutoformatTextRule } from '../types';\nimport { getMatchPoints } from '../utils/getMatchPoints';\nimport { getMatchRange } from '../utils/getMatchRange';\n\nexport interface AutoformatTextOptions<V extends Value = Value>\n  extends AutoformatTextRule<V> {\n  text: string;\n}\n\nexport const autoformatText = <V extends Value>(\n  editor: PlateEditor<V>,\n  { text, match: _match, trigger, format }: AutoformatTextOptions<V>\n) => {\n  const selection = editor.selection as Range;\n  const matches = castArray(_match);\n\n  // dup\n  for (const match of matches) {\n    const { start, end, triggers } = getMatchRange({\n      match: Array.isArray(format)\n        ? match\n        : {\n            start: '',\n            end: match,\n          },\n      trigger,\n    });\n\n    if (!triggers.includes(text)) continue;\n\n    const matched = getMatchPoints(editor, { start, end });\n    if (!matched) continue;\n\n    const { afterStartMatchPoint, beforeEndMatchPoint, beforeStartMatchPoint } =\n      matched;\n\n    if (end) {\n      deleteText(editor, {\n        at: {\n          anchor: beforeEndMatchPoint,\n          focus: selection.anchor,\n        },\n      });\n    }\n\n    if (typeof format === 'function') {\n      format(editor, matched);\n    } else {\n      const formatEnd = Array.isArray(format) ? format[1] : format;\n      editor.insertText(formatEnd);\n\n      if (beforeStartMatchPoint) {\n        const formatStart = Array.isArray(format) ? format[0] : format;\n\n        deleteText(editor, {\n          at: {\n            anchor: beforeStartMatchPoint as Point,\n            focus: afterStartMatchPoint as Point,\n          },\n        });\n\n        insertText(editor, formatStart, {\n          at: beforeStartMatchPoint,\n        });\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n};\n","import {\n  isCollapsed,\n  PlateEditor,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-common';\n\nimport { autoformatBlock } from './transforms/autoformatBlock';\nimport { autoformatMark } from './transforms/autoformatMark';\nimport { autoformatText } from './transforms/autoformatText';\nimport { AutoformatPlugin } from './types';\n\n/**\n * Enables support for autoformatting actions.\n * Once a match rule is validated, it does not check the following rules.\n */\nexport const withAutoformat = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>,\n>(\n  editor: E,\n  { options: { rules } }: WithPlatePlugin<AutoformatPlugin, V, E>\n) => {\n  const { insertText } = editor;\n\n  editor.insertText = (text) => {\n    if (!isCollapsed(editor.selection)) return insertText(text);\n\n    for (const rule of rules!) {\n      const { mode = 'text', insertTrigger, query } = rule;\n\n      if (query && !query(editor as any, { ...rule, text })) continue;\n\n      const autoformatter: Record<typeof mode, Function> = {\n        block: autoformatBlock,\n        mark: autoformatMark,\n        text: autoformatText,\n      };\n\n      if (\n        autoformatter[mode]?.(editor, {\n          ...(rule as any),\n          text,\n        })\n      ) {\n        return insertTrigger && insertText(text);\n      }\n    }\n\n    insertText(text);\n  };\n\n  return editor;\n};\n","import { createPluginFactory } from '@udecode/plate-common';\n\nimport { onKeyDownAutoformat } from './onKeyDownAutoformat';\nimport { AutoformatPlugin } from './types';\nimport { withAutoformat } from './withAutoformat';\n\nexport const KEY_AUTOFORMAT = 'autoformat';\n\n/**\n * @see {@link withAutoformat}\n */\nexport const createAutoformatPlugin = createPluginFactory<AutoformatPlugin>({\n  key: KEY_AUTOFORMAT,\n  withOverrides: withAutoformat,\n  handlers: {\n    onKeyDown: onKeyDownAutoformat,\n  },\n  options: {\n    rules: [],\n  },\n});\n","import { AutoformatRule } from '../types';\n\nexport const autoformatArrow: AutoformatRule[] = [\n  {\n    mode: 'text',\n    match: '->',\n    format: '→',\n  },\n  {\n    mode: 'text',\n    match: '<-',\n    format: '←',\n  },\n  {\n    mode: 'text',\n    match: '=>',\n    format: '⇒',\n  },\n  {\n    mode: 'text',\n    match: ['<=', '≤='],\n    format: '⇐',\n  },\n];\n","import { AutoformatRule } from '../types';\n\nexport const autoformatLegal: AutoformatRule[] = [\n  {\n    mode: 'text',\n    match: ['(tm)', '(TM)'],\n    format: '™',\n  },\n  {\n    mode: 'text',\n    match: ['(r)', '(R)'],\n    format: '®',\n  },\n\n  {\n    mode: 'text',\n    match: ['(c)', '(C)'],\n    format: '©',\n  },\n];\n\nexport const autoformatLegalHtml: AutoformatRule[] = [\n  {\n    mode: 'text',\n    match: '&trade;',\n    format: '™',\n  },\n  {\n    mode: 'text',\n    match: '&reg;',\n    format: '®',\n  },\n  {\n    mode: 'text',\n    match: '&copy;',\n    format: '©',\n  },\n  {\n    mode: 'text',\n    match: '&sect;',\n    format: '§',\n  },\n];\n","import { AutoformatRule } from '../types';\n\nexport const autoformatPunctuation: AutoformatRule[] = [\n  {\n    mode: 'text',\n    match: '--',\n    format: '\\u2014',\n  },\n  {\n    mode: 'text',\n    match: '...',\n    format: '…',\n  },\n  {\n    mode: 'text',\n    match: '>>',\n    format: '»',\n  },\n  {\n    mode: 'text',\n    match: '<<',\n    format: '«',\n  },\n];\n","import { AutoformatRule } from '../types';\n\nexport const autoformatSmartQuotes: AutoformatRule[] = [\n  {\n    mode: 'text',\n    match: '\"',\n    format: ['“', '”'],\n  },\n  {\n    mode: 'text',\n    match: \"'\",\n    format: ['‘', '’'],\n  },\n];\n","import { AutoformatRule } from '../../types';\n\nexport const autoformatComparison: AutoformatRule[] = [\n  {\n    mode: 'text',\n    match: '!>',\n    format: '≯',\n  },\n  {\n    mode: 'text',\n    match: '!<',\n    format: '≮',\n  },\n  {\n    mode: 'text',\n    match: '>=',\n    format: '≥',\n  },\n  {\n    mode: 'text',\n    match: '<=',\n    format: '≤',\n  },\n  {\n    mode: 'text',\n    match: '!>=',\n    format: '≱',\n  },\n  {\n    mode: 'text',\n    match: '!<=',\n    format: '≰',\n  },\n];\n","import { AutoformatRule } from '../../types';\n\nexport const autoformatEquality: AutoformatRule[] = [\n  {\n    mode: 'text',\n    match: '!=',\n    format: '≠',\n  },\n  {\n    mode: 'text',\n    match: '==',\n    format: '≡',\n  },\n  {\n    mode: 'text',\n    match: ['!==', '≠='],\n    format: '≢',\n  },\n  {\n    mode: 'text',\n    match: '~=',\n    format: '≈',\n  },\n  {\n    mode: 'text',\n    match: '!~=',\n    format: '≉',\n  },\n];\n","import { AutoformatRule } from '../../types';\n\nexport const autoformatFraction: AutoformatRule[] = [\n  {\n    mode: 'text',\n    match: '1/2',\n    format: '½',\n  },\n  {\n    mode: 'text',\n    match: '1/3',\n    format: '⅓',\n  },\n  {\n    mode: 'text',\n    match: '1/4',\n    format: '¼',\n  },\n  {\n    mode: 'text',\n    match: '1/5',\n    format: '⅕',\n  },\n  {\n    mode: 'text',\n    match: '1/6',\n    format: '⅙',\n  },\n  {\n    mode: 'text',\n    match: '1/7',\n    format: '⅐',\n  },\n  {\n    mode: 'text',\n    match: '1/8',\n    format: '⅛',\n  },\n  {\n    mode: 'text',\n    match: '1/9',\n    format: '⅑',\n  },\n  {\n    mode: 'text',\n    match: '1/10',\n    format: '⅒',\n  },\n  {\n    mode: 'text',\n    match: '2/3',\n    format: '⅔',\n  },\n  {\n    mode: 'text',\n    match: '2/5',\n    format: '⅖',\n  },\n  {\n    mode: 'text',\n    match: '3/4',\n    format: '¾',\n  },\n  {\n    mode: 'text',\n    match: '3/5',\n    format: '⅗',\n  },\n  {\n    mode: 'text',\n    match: '3/8',\n    format: '⅜',\n  },\n  {\n    mode: 'text',\n    match: '4/5',\n    format: '⅘',\n  },\n  {\n    mode: 'text',\n    match: '5/6',\n    format: '⅚',\n  },\n  {\n    mode: 'text',\n    match: '5/8',\n    format: '⅝',\n  },\n  {\n    mode: 'text',\n    match: '7/8',\n    format: '⅞',\n  },\n];\n","import { AutoformatRule } from '../../types';\n\nexport const autoformatDivision: AutoformatRule[] = [\n  {\n    mode: 'text',\n    match: '//',\n    format: '÷',\n  },\n];\n\nexport const autoformatOperation: AutoformatRule[] = [\n  {\n    mode: 'text',\n    match: '+-',\n    format: '±',\n  },\n  {\n    mode: 'text',\n    match: '%%',\n    format: '‰',\n  },\n  {\n    mode: 'text',\n    match: ['%%%', '‰%'],\n    format: '‱',\n  },\n  ...autoformatDivision,\n];\n","import { AutoformatRule } from '../../types';\n\nexport const autoformatSubscriptNumbers: AutoformatRule[] = [\n  {\n    mode: 'text',\n    match: '~0',\n    format: '₀',\n  },\n  {\n    mode: 'text',\n    match: '~1',\n    format: '₁',\n  },\n  {\n    mode: 'text',\n    match: '~2',\n    format: '₂',\n  },\n  {\n    mode: 'text',\n    match: '~3',\n    format: '₃',\n  },\n  {\n    mode: 'text',\n    match: '~4',\n    format: '₄',\n  },\n  {\n    mode: 'text',\n    match: '~5',\n    format: '₅',\n  },\n  {\n    mode: 'text',\n    match: '~6',\n    format: '₆',\n  },\n  {\n    mode: 'text',\n    match: '~7',\n    format: '₇',\n  },\n  {\n    mode: 'text',\n    match: '~8',\n    format: '₈',\n  },\n  {\n    mode: 'text',\n    match: '~9',\n    format: '₉',\n  },\n];\n\nexport const autoformatSubscriptSymbols: AutoformatRule[] = [\n  {\n    mode: 'text',\n    match: '~+',\n    format: '₊',\n  },\n  {\n    mode: 'text',\n    match: '~-',\n    format: '₋',\n  },\n];\n","import { AutoformatRule } from '../../types';\n\nexport const autoformatSuperscriptNumbers: AutoformatRule[] = [\n  {\n    mode: 'text',\n    match: '^0',\n    format: '⁰',\n  },\n  {\n    mode: 'text',\n    match: '^1',\n    format: '¹',\n  },\n  {\n    mode: 'text',\n    match: '^2',\n    format: '²',\n  },\n  {\n    mode: 'text',\n    match: '^3',\n    format: '³',\n  },\n  {\n    mode: 'text',\n    match: '^4',\n    format: '⁴',\n  },\n  {\n    mode: 'text',\n    match: '^5',\n    format: '⁵',\n  },\n  {\n    mode: 'text',\n    match: '^6',\n    format: '⁶',\n  },\n  {\n    mode: 'text',\n    match: '^7',\n    format: '⁷',\n  },\n  {\n    mode: 'text',\n    match: '^8',\n    format: '⁸',\n  },\n  {\n    mode: 'text',\n    match: '^9',\n    format: '⁹',\n  },\n];\n\nexport const autoformatSuperscriptSymbols: AutoformatRule[] = [\n  {\n    mode: 'text',\n    match: '^o',\n    format: '°',\n  },\n  {\n    mode: 'text',\n    match: '^+',\n    format: '⁺',\n  },\n  {\n    mode: 'text',\n    match: '^-',\n    format: '⁻',\n  },\n];\n","import { autoformatComparison } from './autoformatComparison';\nimport { autoformatEquality } from './autoformatEquality';\nimport { autoformatFraction } from './autoformatFraction';\nimport { autoformatOperation } from './autoformatOperation';\nimport {\n  autoformatSubscriptNumbers,\n  autoformatSubscriptSymbols,\n} from './autoformatSubscript';\nimport {\n  autoformatSuperscriptNumbers,\n  autoformatSuperscriptSymbols,\n} from './autoformatSuperscript';\n\nexport const autoformatMath = [\n  ...autoformatComparison,\n  ...autoformatEquality,\n  ...autoformatOperation,\n  ...autoformatFraction,\n  ...autoformatSuperscriptSymbols,\n  ...autoformatSubscriptSymbols,\n  ...autoformatSuperscriptNumbers,\n  ...autoformatSubscriptNumbers,\n];\n"],"names":["onKeyDownAutoformat","editor","options","rules","enableUndoOnDelete","e","defaultPrevented","isHotkey","byKey","selection","Range","isCollapsed","start","end","edges","before","getPointBefore","unit","distance","charRange","anchor","focus","char","getEditorString","matchers","filter","rule","textRule","mode","format","length","preventDefault","deleteBackward","match","insertText","matchArray","isArray","getMatchRange","trigger","split","reverse","join","triggers","castArray","slice","autoformatBlock","text","_match","type","ELEMENT_DEFAULT","allowSameTypeAbove","preFormat","triggerAtBlockStart","matches","includes","matchRange","getRangeFromBlockStart","hasVoidNode","someNode","at","n","isVoid","textFromBlockStart","getRangeBefore","matchString","isBelowSameBlockType","deleteText","setElements","isBlock","isPreviousCharacterEmpty","range","noWhiteSpaceRegex","RegExp","getMatchPoints","beforeEndMatchPoint","getPointBeforeLocation","afterStartMatchPoint","beforeStartMatchPoint","skipInvalid","afterMatch","autoformatMark","ignoreTrim","matched","matchText","trim","marks","select","forEach","mark","addMark","collapseSelection","edge","removeMark","key","shouldChange","autoformatText","Array","formatEnd","formatStart","withAutoformat","_autoformatter$mode","insertTrigger","query","autoformatter","block","call","KEY_AUTOFORMAT","createAutoformatPlugin","createPluginFactory","withOverrides","handlers","onKeyDown","autoformatArrow","autoformatLegal","autoformatLegalHtml","autoformatPunctuation","autoformatSmartQuotes","autoformatComparison","autoformatEquality","autoformatFraction","autoformatDivision","autoformatOperation","autoformatSubscriptNumbers","autoformatSubscriptSymbols","autoformatSuperscriptNumbers","autoformatSuperscriptSymbols","autoformatMath"],"mappings":"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","x_google_ignoreList":[0,2,3]}