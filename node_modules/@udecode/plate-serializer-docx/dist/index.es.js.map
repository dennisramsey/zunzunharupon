{"version":3,"file":"index.es.js","sources":["../src/docx-cleaner/utils/cleanDocxBrComments.ts","../src/docx-cleaner/utils/cleanDocxEmptyParagraphs.ts","../src/docx-cleaner/utils/isDocxFootnote.ts","../src/docx-cleaner/utils/cleanDocxFootnotes.ts","../../../node_modules/validator/lib/util/assertString.js","../../../node_modules/validator/lib/util/merge.js","../../../node_modules/validator/lib/isFQDN.js","../../../node_modules/validator/lib/isIP.js","../../../node_modules/validator/lib/isURL.js","../src/docx-cleaner/utils/getRtfImageHex.ts","../src/docx-cleaner/utils/getRtfImageMimeType.ts","../src/docx-cleaner/utils/getRtfImageSpid.ts","../src/docx-cleaner/utils/getRtfImagesByType.ts","../src/docx-cleaner/utils/getRtfImagesMap.ts","../src/docx-cleaner/utils/getVShapes.ts","../src/docx-cleaner/utils/getVShapeSpid.ts","../src/docx-cleaner/utils/cleanDocxImageElements.ts","../src/docx-cleaner/utils/cleanDocxListElements.ts","../src/docx-cleaner/utils/getDocxListContentHtml.ts","../src/docx-cleaner/utils/getDocxListIndent.ts","../src/docx-cleaner/utils/isDocxBookmark.ts","../src/docx-cleaner/utils/isDocxList.ts","../src/docx-cleaner/utils/getDocxListNode.ts","../src/docx-cleaner/utils/isDocxOl.ts","../src/docx-cleaner/utils/docxListToList.ts","../src/docx-cleaner/utils/cleanDocxListElementsToList.ts","../src/docx-cleaner/utils/cleanDocxQuotes.ts","../src/docx-cleaner/utils/generateSpaces.ts","../src/docx-cleaner/utils/cleanDocxSpacerun.ts","../src/docx-cleaner/utils/cleanDocxTabCount.ts","../src/docx-cleaner/utils/cleanDocxSpans.ts","../src/docx-cleaner/utils/getDocxIndent.ts","../src/docx-cleaner/utils/getTextListStyleType.ts","../src/docx-cleaner/utils/isDocxContent.ts","../src/docx-cleaner/cleanDocx.ts","../src/deserializer/createDeserializeDocxPlugin.ts"],"sourcesContent":["import {\n  isHtmlComment,\n  removeHtmlNodesBetweenComments,\n  traverseHtmlElements,\n} from '@udecode/plate-common';\n\n/**\n * Remove HTML nodes between comments in the next sibling after BR.\n */\nexport const cleanDocxBrComments = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.tagName !== 'BR') {\n      return true;\n    }\n\n    if (\n      element.nextSibling &&\n      isHtmlComment(element.nextSibling) &&\n      element.nextSibling.data === '[if !supportLineBreakNewLine]'\n    ) {\n      removeHtmlNodesBetweenComments(\n        element.nextSibling,\n        '[if !supportLineBreakNewLine]',\n        '[endif]'\n      );\n    }\n\n    return false;\n  });\n};\n","import { NO_BREAK_SPACE, traverseHtmlElements } from '@udecode/plate-common';\n\nconst isHtmlOpEmpty = (element: Element): boolean =>\n  element.nodeName === 'O:P' && element.textContent === NO_BREAK_SPACE;\n\nconst isHtmlElementEmpty = (element: Element): boolean =>\n  element.children.length === 1 &&\n  element.firstElementChild !== null &&\n  (isHtmlOpEmpty(element.firstElementChild) ||\n    isHtmlElementEmpty(element.firstElementChild));\n\n/**\n * Remove paragraph innerHTML if its child is 'O:P' with NO_BREAK_SPACE.\n */\nexport const cleanDocxEmptyParagraphs = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.tagName === 'P' && isHtmlElementEmpty(element)) {\n      element.innerHTML = '';\n    }\n\n    return true;\n  });\n};\n","/**\n * Is element a docx footnote.\n */\nexport const isDocxFootnote = (element: Element): boolean => {\n  return (\n    element.tagName === 'SPAN' &&\n    element.classList.contains('MsoFootnoteReference')\n  );\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\n\nimport { isDocxFootnote } from './isDocxFootnote';\n\n/**\n * Gets \"4\" from \"[4]\", \"A\" from \"[A]\", etc.\n */\nconst extractFootnoteNumber = (footnote: Element): string => {\n  return (footnote.textContent || '').trim().replaceAll(/[[\\]]/g, '');\n};\n\n/**\n * Replace docx footnotes with sup element.\n */\nexport const cleanDocxFootnotes = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (isDocxFootnote(element)) {\n      const footnoteReplacement = document.createElement('sup');\n      footnoteReplacement.textContent = extractFootnoteNumber(element);\n\n      if (element.parentElement) {\n        element.parentElement.replaceChild(footnoteReplacement, element);\n      }\n\n      return true;\n    }\n\n    return true;\n  });\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    var invalidType = _typeof(input);\n\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\n\nfunction merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments.length > 1 ? arguments[1] : undefined;\n\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n\n  return obj;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFQDN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false,\n  allow_wildcard: false,\n  ignore_max_length: false\n};\n\nfunction isFQDN(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_fqdn_options);\n  /* Remove the optional trailing dot before checking validity */\n\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n  /* Remove the optional wildcard before checking validity */\n\n\n  if (options.allow_wildcard === true && str.indexOf('*.') === 0) {\n    str = str.substring(2);\n  }\n\n  var parts = str.split('.');\n  var tld = parts[parts.length - 1];\n\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n\n    if (!options.allow_numeric_tld && !/^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    } // disallow spaces\n\n\n    if (/\\s/.test(tld)) {\n      return false;\n    }\n  } // reject numeric TLDs\n\n\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n\n  return parts.every(function (part) {\n    if (part.length > 63 && !options.ignore_max_length) {\n      return false;\n    }\n\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    } // disallow full-width chars\n\n\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    } // disallow parts starting or ending with hyphen\n\n\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIP;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n11.3.  Examples\n\n   The following addresses\n\n             fe80::1234 (on the 1st link of the node)\n             ff02::5678 (on the 5th link of the node)\n             ff08::9abc (on the 10th organization of the node)\n\n   would be represented as follows:\n\n             fe80::1234%1\n             ff02::5678%5\n             ff08::9abc%10\n\n   (Here we assume a natural translation from a zone index to the\n   <zone_id> part, where the Nth zone of any scope is translated into\n   \"N\".)\n\n   If we use interface names as <zone_id>, those addresses could also be\n   represented as follows:\n\n            fe80::1234%ne0\n            ff02::5678%pvc1.3\n            ff08::9abc%interface10\n\n   where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\n   to the 5th link, and \"interface10\" belongs to the 10th organization.\n * * */\nvar IPv4SegmentFormat = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nvar IPv4AddressFormat = \"(\".concat(IPv4SegmentFormat, \"[.]){3}\").concat(IPv4SegmentFormat);\nvar IPv4AddressRegExp = new RegExp(\"^\".concat(IPv4AddressFormat, \"$\"));\nvar IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\nvar IPv6AddressRegExp = new RegExp('^(' + \"(?:\".concat(IPv6SegmentFormat, \":){7}(?:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){6}(?:\").concat(IPv4AddressFormat, \"|:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){5}(?::\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,2}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){4}(?:(:\").concat(IPv6SegmentFormat, \"){0,1}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,3}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){3}(?:(:\").concat(IPv6SegmentFormat, \"){0,2}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,4}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){2}(?:(:\").concat(IPv6SegmentFormat, \"){0,3}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,5}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){1}(?:(:\").concat(IPv6SegmentFormat, \"){0,4}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,6}|:)|\") + \"(?::((?::\".concat(IPv6SegmentFormat, \"){0,5}:\").concat(IPv4AddressFormat, \"|(?::\").concat(IPv6SegmentFormat, \"){1,7}|:))\") + ')(%[0-9a-zA-Z-.:]{1,})?$');\n\nfunction isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  version = String(version);\n\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  }\n\n  if (version === '4') {\n    return IPv4AddressRegExp.test(str);\n  }\n\n  if (version === '6') {\n    return IPv6AddressRegExp.test(str);\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\noptions for isURL method\n\nrequire_protocol - if set as true isURL will return false if protocol is not present in the URL\nrequire_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\nprotocols - valid protocols can be modified with this option\nrequire_host - if set as false isURL will not check if host is present in the URL\nrequire_port - if set as true isURL will check if port is present in the URL\nallow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\nvalidate_length - if set as false isURL will skip string length validation (IE maximum is 2083)\n\n*/\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_port: false,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false,\n  allow_fragments: true,\n  allow_query_components: true,\n  validate_length: true\n};\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString.default)(url);\n\n  if (!url || /[\\s<>]/.test(url)) {\n    return false;\n  }\n\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n\n  options = (0, _merge.default)(options, default_url_options);\n\n  if (options.validate_length && url.length >= 2083) {\n    return false;\n  }\n\n  if (!options.allow_fragments && url.includes('#')) {\n    return false;\n  }\n\n  if (!options.allow_query_components && (url.includes('?') || url.includes('&'))) {\n    return false;\n  }\n\n  var protocol, auth, host, hostname, port, port_str, split, ipv6;\n  split = url.split('#');\n  url = split.shift();\n  split = url.split('?');\n  url = split.shift();\n  split = url.split('://');\n\n  if (split.length > 1) {\n    protocol = split.shift().toLowerCase();\n\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (url.slice(0, 2) === '//') {\n    if (!options.allow_protocol_relative_urls) {\n      return false;\n    }\n\n    split[0] = url.slice(2);\n  }\n\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n\n  if (split.length > 1) {\n    if (options.disallow_auth) {\n      return false;\n    }\n\n    if (split[0] === '') {\n      return false;\n    }\n\n    auth = split.shift();\n\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n\n    var _auth$split = auth.split(':'),\n        _auth$split2 = _slicedToArray(_auth$split, 2),\n        user = _auth$split2[0],\n        password = _auth$split2[1];\n\n    if (user === '' && password === '') {\n      return false;\n    }\n  }\n\n  hostname = split.join('@');\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null && port_str.length > 0) {\n    port = parseInt(port_str, 10);\n\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  } else if (options.require_port) {\n    return false;\n  }\n\n  if (options.host_whitelist) {\n    return checkHost(host, options.host_whitelist);\n  }\n\n  if (host === '' && !options.require_host) {\n    return true;\n  }\n\n  if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","import { SPACE } from '@udecode/plate-common';\n\nexport const getRtfImageHex = (imageData: string): string | null => {\n  const [, bliptagData = ''] = imageData.split('bliptag');\n  const bracketSplit = bliptagData.split('}');\n\n  if (bracketSplit.length < 2) {\n    return null;\n  }\n\n  const [beforeBracket, afterBracket] = bracketSplit;\n\n  if (bracketSplit.length > 2 && beforeBracket.includes('blipuid')) {\n    return afterBracket.split(SPACE).join('');\n  }\n\n  const spaceSplit = beforeBracket.split(SPACE);\n\n  if (spaceSplit.length < 2) {\n    return null;\n  }\n\n  return spaceSplit.slice(1).join('');\n};\n","export const getRtfImageMimeType = (imageData: string): string | null => {\n  const [bliptagMeta] = imageData.split('bliptag');\n\n  if (bliptagMeta.includes('pngblip')) {\n    return 'image/png';\n  }\n\n  if (bliptagMeta.includes('jpegblip')) {\n    return 'image/jpeg';\n  }\n\n  return null;\n};\n","import { CARRIAGE_RETURN, LINE_FEED, SPACE } from '@udecode/plate-common';\n\nconst END_OF_ID_SEQUENCE_CHARACTERS = [\n  '\\\\',\n  '{',\n  CARRIAGE_RETURN,\n  LINE_FEED,\n  SPACE,\n];\n\nexport const getRtfImageSpid = (\n  imageData: string,\n  spidPrefix: string\n): string | null => {\n  const indexes = END_OF_ID_SEQUENCE_CHARACTERS.map((character) =>\n    imageData.indexOf(character)\n  );\n  const foundIndexes = indexes.filter((index) => index !== -1);\n  const idLength = Math.min(imageData.length, ...foundIndexes);\n  const id = imageData.slice(0, Math.max(0, idLength));\n  return id ? `${spidPrefix}${id}` : null;\n};\n","import { RtfImage } from '../types';\nimport { getRtfImageHex } from './getRtfImageHex';\nimport { getRtfImageMimeType } from './getRtfImageMimeType';\nimport { getRtfImageSpid } from './getRtfImageSpid';\n\nexport const getRtfImagesByType = (\n  rtf: string,\n  spidPrefix: string,\n  type: string\n): RtfImage[] => {\n  const [, ...images] = rtf.split(type);\n\n  return images.reduce<RtfImage[]>((rtfImages, image) => {\n    const [, imageData = ''] = image.split('shplid');\n    const spid = getRtfImageSpid(imageData, spidPrefix);\n    const mimeType = getRtfImageMimeType(imageData);\n    const hex = getRtfImageHex(imageData);\n\n    if (spid && mimeType && hex) {\n      rtfImages.push({ hex, mimeType, spid });\n    }\n\n    return rtfImages;\n  }, []);\n};\n","import { RtfImagesMap } from '../types';\nimport { getRtfImagesByType } from './getRtfImagesByType';\n\nexport const getRtfImagesMap = (rtf: string): RtfImagesMap => {\n  const rtfImagesMap: RtfImagesMap = {};\n\n  const shppictRtfImages = getRtfImagesByType(rtf, 'i', '\\\\shppict');\n  for (const shppictRtfImage of shppictRtfImages) {\n    rtfImagesMap[shppictRtfImage.spid] = shppictRtfImage;\n  }\n\n  const shpRtfImages = getRtfImagesByType(rtf, 's', '\\\\shp');\n  for (const shpRtfImage of shpRtfImages) {\n    rtfImagesMap[shpRtfImage.spid] = shpRtfImage;\n  }\n\n  return rtfImagesMap;\n};\n","import { getHtmlComments } from '@udecode/plate-common';\n\nexport const getVShapes = (document: Document): Record<string, string> => {\n  const comments = getHtmlComments(document);\n\n  return comments.reduce<Record<string, string>>((vShapesMap, comment) => {\n    try {\n      const xmlDocument = new DOMParser().parseFromString(comment, 'text/html');\n      const vShapes = Array.from(xmlDocument.querySelectorAll('V:SHAPE'));\n\n      vShapes.forEach((vShape) => {\n        const { id } = vShape;\n        const spid = vShape.getAttribute('o:spid');\n\n        if (typeof id === 'string' && typeof spid === 'string') {\n          vShapesMap[id] = spid;\n        }\n      });\n    } catch (error) {\n      // Cannot parse as XML, we're not interested in this comment\n    }\n\n    return vShapesMap;\n  }, {});\n};\n","import { getVShapes } from './getVShapes';\n\nconst normalizeSpid = (spid: string): string => {\n  const id = spid.split('_')[2];\n  return id;\n};\n\nexport const getVShapeSpid = (\n  document: Document,\n  element: Element\n): string | null => {\n  if (element.tagName === 'IMG') {\n    const vShapeId = element.getAttribute('v:shapes');\n    const vShapes = getVShapes(document);\n\n    if (!vShapeId) {\n      return null;\n    }\n\n    const vShapeSpid = vShapes[vShapeId];\n\n    if (vShapeSpid) {\n      return normalizeSpid(vShapeSpid);\n    }\n\n    if (\n      element.parentElement &&\n      element.parentElement.parentElement &&\n      element.parentElement.parentElement.innerHTML.includes('msEquation')\n    ) {\n      return null;\n    }\n\n    return normalizeSpid(vShapeId);\n  }\n\n  if (!element.parentElement) {\n    return null;\n  }\n\n  const spid = element.parentElement.getAttribute('o:spid');\n\n  if (spid) {\n    return normalizeSpid(spid);\n  }\n\n  return spid;\n};\n","import { hexToBase64, traverseHtmlElements } from '@udecode/plate-common';\nimport isURL from 'validator/lib/isURL';\n\nimport { getRtfImagesMap } from './getRtfImagesMap';\nimport { getVShapeSpid } from './getVShapeSpid';\n\n/**\n * Clean docx image elements.\n */\nexport const cleanDocxImageElements = (\n  document: Document,\n  rtf: string,\n  rootNode: Node\n): void => {\n  if (!rtf) {\n    return;\n  }\n\n  traverseHtmlElements(rootNode, (element) => {\n    if (!['IMG', 'V:IMAGEDATA'].includes(element.tagName)) {\n      return true;\n    }\n\n    if (element.tagName === 'IMG') {\n      const src = element.getAttribute('src');\n\n      if (!src || !src.startsWith('file://')) {\n        return true;\n      }\n\n      const alt = element.getAttribute('alt');\n\n      if (typeof alt === 'string' && isURL(alt, { require_protocol: true })) {\n        element.setAttribute('src', alt);\n        return true;\n      }\n    }\n\n    const vShapeSpid = getVShapeSpid(document, element);\n\n    if (!vShapeSpid) {\n      return true;\n    }\n\n    const rtfImagesMap = getRtfImagesMap(rtf);\n    const rtfImage = rtfImagesMap[vShapeSpid];\n\n    if (!rtfImage) {\n      // We fould some kind of vshape (perhaps a drawing) that we don't know\n      // how to recover from RTF. So we just skip it.\n      element.remove();\n      return true;\n    }\n\n    const dataUri = `data:${rtfImage.mimeType};base64,${hexToBase64(\n      rtfImage.hex\n    )}`;\n\n    if (element.tagName === 'IMG') {\n      element.setAttribute('src', dataUri);\n    } else if (element.parentNode && element.parentNode.parentNode) {\n      const imageElement = document.createElement('img');\n      imageElement.setAttribute('src', dataUri);\n      element.parentNode.parentNode.replaceChild(\n        imageElement,\n        element.parentNode\n      );\n    }\n    return true;\n  });\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\n\n/**\n * Clean elements style mso-list to mso-list:Ignore\n */\nexport const cleanDocxListElements = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute) {\n      element.setAttribute(\n        'style',\n        styleAttribute.replaceAll(/mso-list:\\s*ignore/gi, 'mso-list:Ignore')\n      );\n    }\n\n    return true;\n  });\n};\n","import {\n  removeHtmlNodesBetweenComments,\n  traverseHtmlElements,\n} from '@udecode/plate-common';\n\nexport const getDocxListContentHtml = (rootElement: Element): string => {\n  const clonedElement = rootElement.cloneNode(true) as Element;\n\n  removeHtmlNodesBetweenComments(\n    clonedElement,\n    '[if !supportLists]',\n    '[endif]'\n  );\n\n  traverseHtmlElements(clonedElement, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute === 'mso-list:Ignore') {\n      element.remove();\n    }\n\n    return true;\n  });\n\n  return clonedElement.innerHTML;\n};\n","export const getDocxListIndent = (element: Element): number => {\n  const styleAttribute = element.getAttribute('style') || '';\n  const matches = styleAttribute.match(/level(\\d+)/i);\n\n  if (matches && matches.length > 0) {\n    const [, level] = matches;\n    return Number.parseInt(level, 10);\n  }\n\n  return 1;\n};\n","export const isDocxBookmark = (element: Element): boolean => {\n  const styleAttribute = element.getAttribute('style');\n  return (\n    (styleAttribute || '').startsWith('mso-bookmark') && !element.textContent\n  );\n};\n","export const isDocxList = (element: Element): boolean => {\n  const styleAttribute = element.getAttribute('style');\n\n  if (!styleAttribute) {\n    return false;\n  }\n\n  const hasMsoListInStyle = /mso-list:\\s*l/i.test(styleAttribute);\n\n  if (!hasMsoListInStyle) {\n    return false;\n  }\n\n  const hasMsoListIgnoreChild = Boolean(\n    element.querySelector('[style=\"mso-list:Ignore\"]')\n  );\n\n  if (hasMsoListIgnoreChild) {\n    return true;\n  }\n\n  return element.outerHTML.includes('<!--[if !supportLists]-->');\n};\n","export const getDocxListNode = (element: Element): Node | null => {\n  return (\n    element.querySelector('[style=\"mso-list:Ignore\"]') ||\n    element.querySelector('span[lang]')\n  );\n};\n","import { isOlSymbol } from '@udecode/plate-common';\n\nimport { getDocxListNode } from './getDocxListNode';\n\nexport const isDocxOl = (element: Element): boolean => {\n  const listNode = getDocxListNode(element);\n\n  if (!listNode) {\n    return false;\n  }\n\n  return isOlSymbol(listNode.textContent || '');\n};\n","import { parseHtmlElement } from '@udecode/plate-common';\n\nimport { getDocxListContentHtml } from './getDocxListContentHtml';\nimport { getDocxListIndent } from './getDocxListIndent';\nimport { isDocxBookmark } from './isDocxBookmark';\nimport { isDocxList } from './isDocxList';\nimport { isDocxOl } from './isDocxOl';\n\ninterface Result {\n  list: Element | null;\n  nextSibling: Element | null;\n}\n\nexport const docxListToList = (element: Element): Result => {\n  const listLevel = getDocxListIndent(element);\n  let listHtml = '';\n  let nextSibling: Element | null = element;\n\n  while (nextSibling) {\n    if (isDocxBookmark(nextSibling)) {\n      nextSibling = nextSibling.nextElementSibling;\n      continue;\n    }\n\n    if (!isDocxList(nextSibling)) {\n      break;\n    }\n\n    const nextListLevel = getDocxListIndent(nextSibling);\n\n    if (nextListLevel < listLevel) {\n      // Lower level found. Current list is done.\n      break;\n    }\n\n    if (nextListLevel > listLevel) {\n      const nestedList = docxListToList(nextSibling);\n\n      if (nestedList.list) {\n        listHtml += nestedList.list.outerHTML;\n      }\n\n      nextSibling = nestedList.nextSibling;\n      continue;\n    }\n\n    listHtml += `<li>${getDocxListContentHtml(nextSibling)}</li>`;\n    const currentElement = nextSibling;\n    nextSibling = currentElement.nextElementSibling;\n    currentElement.remove();\n  }\n\n  const listTagName = isDocxOl(element) ? 'ol' : 'ul';\n  const list = parseHtmlElement(`<${listTagName}>${listHtml}</${listTagName}>`);\n\n  return { list, nextSibling };\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\n\nimport { docxListToList } from './docxListToList';\nimport { isDocxList } from './isDocxList';\n\nexport const cleanDocxListElementsToList = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute) {\n      element.setAttribute(\n        'style',\n        styleAttribute.replaceAll(/mso-list:\\s*ignore/gi, 'mso-list:Ignore')\n      );\n    }\n\n    return true;\n  });\n\n  traverseHtmlElements(rootNode, (element) => {\n    if (!isDocxList(element)) {\n      return true;\n    }\n\n    const { parentElement, previousSibling } = element;\n\n    if (!parentElement) {\n      return true;\n    }\n\n    const { list } = docxListToList(element);\n\n    if (!list) {\n      return true;\n    }\n\n    const beforeElement = previousSibling\n      ? previousSibling.nextSibling\n      : parentElement.firstChild;\n\n    if (beforeElement) {\n      beforeElement.before(list);\n    } else {\n      parentElement.append(list);\n    }\n\n    return false;\n  });\n};\n","import { replaceTagName, traverseHtmlElements } from '@udecode/plate-common';\n\n/**\n * Replace p.MsoQuote elements with blockquote.\n */\nexport const cleanDocxQuotes = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (\n      element.parentNode &&\n      element.tagName === 'P' &&\n      element.classList.contains('MsoQuote')\n    ) {\n      replaceTagName(element, 'blockquote');\n    }\n\n    return true;\n  });\n};\n","import { SPACE, TAB } from '@udecode/plate-common';\n\nexport const generateSpaces = (count: number): string =>\n  Array.from({ length: count }, () => SPACE).join('');\n\nexport const generateTabs = (count: number): string =>\n  Array.from({ length: count }, () => TAB).join('');\n","import { generateSpaces } from './generateSpaces';\n\n/**\n * Replace the element with spaces if its style includes 'mso-spacerun: yes'.\n */\nexport const cleanDocxSpacerun = (element: Element): void => {\n  const styleAttribute = element.getAttribute('style');\n\n  if (\n    !(\n      styleAttribute &&\n      ['mso-spacerun:yes', 'mso-spacerun: yes'].includes(styleAttribute)\n    )\n  ) {\n    return;\n  }\n\n  const spacesCount = (element.textContent || '').length;\n  const replacementNode = document.createTextNode(generateSpaces(spacesCount));\n\n  if (element.parentNode) {\n    element.parentNode.replaceChild(replacementNode, element);\n  }\n};\n","import { generateTabs } from './generateSpaces';\n\n/**\n * Replace element with tabs if its style starts with 'mso-tab-count'.\n */\nexport const cleanDocxTabCount = (element: Element): void => {\n  const styleAttribute = element.getAttribute('style') || '';\n\n  if (!styleAttribute.startsWith('mso-tab-count:')) {\n    return;\n  }\n\n  const [, countString] = styleAttribute.split(':');\n  const count = Number.parseInt(countString, 10);\n  const replacementNode = document.createTextNode(generateTabs(count));\n\n  if (element.parentNode) {\n    element.parentNode.replaceChild(replacementNode, element);\n  }\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\n\nimport { cleanDocxSpacerun } from './cleanDocxSpacerun';\nimport { cleanDocxTabCount } from './cleanDocxTabCount';\n\n/**\n * Clean docx spaceruns and tab counts.\n */\nexport const cleanDocxSpans = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.nodeName !== 'SPAN') {\n      return true;\n    }\n\n    cleanDocxSpacerun(element);\n    cleanDocxTabCount(element);\n\n    return true;\n  });\n};\n","const DOCX_INDENT_STEP = 36;\n\n/**\n * Convert a string to floating number.\n * Negative values are ignored.\n * Values starting by \".\" are replaced by \"0.\"\n */\nconst extractNumber = (str: string) => {\n  if (str[0] === '-') return 0;\n\n  let number = str.replace(/[^\\d,.]+/, '');\n\n  if (number[0] === '.') {\n    number = `0${number}`;\n  }\n  return Number.parseFloat(number);\n};\n\nconst styleToIndent = (style: string, indentStep = DOCX_INDENT_STEP) => {\n  const indent = extractNumber(style);\n  if (indent) {\n    if (style.includes('in')) {\n      return Math.round((indent * 72) / indentStep);\n    }\n    return Math.round(indent / indentStep);\n  }\n  return 0;\n};\n\nexport const getDocxSpacing = (element: Element, cssProp: string): number => {\n  const el = element as HTMLElement;\n  const spacing = (el.style as any)[cssProp];\n\n  if (!spacing) return 0;\n\n  return styleToIndent(spacing) || 0;\n};\n\nexport const getDocxIndent = (element: Element) =>\n  getDocxSpacing(element, 'marginLeft');\n\nexport const getDocxTextIndent = (element: Element) =>\n  getDocxSpacing(element, 'textIndent');\n","import { ListStyleType } from '@udecode/plate-indent-list';\n\nexport const getTextListStyleType = (\n  text: string\n): ListStyleType | undefined => {\n  text = text.trimStart();\n\n  if (text.match(/^\\d+[.\\\\]/)?.[0]) {\n    if (text[0] === '0') {\n      return ListStyleType.DecimalLeadingZero;\n    }\n\n    return ListStyleType.Decimal;\n  }\n\n  if (text.match(/^[cdilmvx]+\\./)?.[0]) {\n    return ListStyleType.LowerRoman;\n  }\n\n  if (text.match(/^[a-z]+\\./)?.[0]) {\n    return ListStyleType.LowerAlpha;\n  }\n\n  if (text.match(/^[CDILMVX]+\\./)?.[0]) {\n    return ListStyleType.UpperRoman;\n  }\n\n  if (text.match(/^[A-Z]+\\./)?.[0]) {\n    return ListStyleType.UpperAlpha;\n  }\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\n\n/**\n * Check if the element contains docx content.\n * True if one element has:\n * - style including 'mso-'\n * - className including 'Mso'\n */\nexport const isDocxContent = (body: HTMLElement): boolean => {\n  let result = false;\n\n  traverseHtmlElements(body, (element) => {\n    const styleAttribute = element.getAttribute('style') || '';\n    const classList = Array.from(element.classList);\n\n    const isMsoElement =\n      styleAttribute.includes('mso-') ||\n      classList.some((className) => className.startsWith('Mso'));\n\n    result = result || isMsoElement;\n\n    return !result;\n  });\n\n  return result;\n};\n","import {\n  cleanHtmlBrElements,\n  cleanHtmlEmptyElements,\n  cleanHtmlFontElements,\n  cleanHtmlLinkElements,\n  cleanHtmlTextNodes,\n  copyBlockMarksToSpanChild,\n  postCleanHtml,\n  preCleanHtml,\n} from '@udecode/plate-common';\n\nimport {\n  cleanDocxBrComments,\n  cleanDocxEmptyParagraphs,\n  cleanDocxFootnotes,\n  cleanDocxImageElements,\n  cleanDocxListElements,\n  cleanDocxQuotes,\n  cleanDocxSpans,\n  isDocxContent,\n} from './utils/index';\n\nexport const cleanDocx = (html: string, rtf: string): string => {\n  const document = new DOMParser().parseFromString(\n    preCleanHtml(html),\n    'text/html'\n  );\n  const { body } = document;\n\n  if (!rtf && !isDocxContent(body)) {\n    return html;\n  }\n\n  cleanDocxFootnotes(body);\n  cleanDocxImageElements(document, rtf, body);\n  cleanHtmlEmptyElements(body);\n  cleanDocxEmptyParagraphs(body);\n  cleanDocxQuotes(body);\n  cleanDocxSpans(body);\n  cleanHtmlTextNodes(body);\n  cleanDocxBrComments(body);\n  cleanHtmlBrElements(body);\n  cleanHtmlLinkElements(body);\n  cleanHtmlFontElements(body);\n  cleanDocxListElements(body);\n  copyBlockMarksToSpanChild(body);\n\n  return postCleanHtml(body.innerHTML);\n};\n","import {\n  createPluginFactory,\n  DeserializeHtml,\n  KEY_DESERIALIZE_HTML,\n  PlatePlugin,\n} from '@udecode/plate-common';\nimport {\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_H3,\n  ELEMENT_H4,\n  ELEMENT_H5,\n  ELEMENT_H6,\n} from '@udecode/plate-heading';\nimport { KEY_INDENT, KEY_TEXT_INDENT } from '@udecode/plate-indent';\nimport { KEY_LIST_STYLE_TYPE, ListStyleType } from '@udecode/plate-indent-list';\nimport { ELEMENT_IMAGE } from '@udecode/plate-media';\nimport { ELEMENT_PARAGRAPH } from '@udecode/plate-paragraph';\n\nimport { cleanDocx } from '../docx-cleaner/cleanDocx';\nimport {\n  getDocxIndent,\n  getDocxTextIndent,\n} from '../docx-cleaner/utils/getDocxIndent';\nimport { getDocxListContentHtml } from '../docx-cleaner/utils/getDocxListContentHtml';\nimport { getDocxListIndent } from '../docx-cleaner/utils/getDocxListIndent';\nimport { getTextListStyleType } from '../docx-cleaner/utils/getTextListStyleType';\nimport { isDocxContent } from '../docx-cleaner/utils/isDocxContent';\nimport { isDocxList } from '../docx-cleaner/utils/isDocxList';\n\nexport const KEY_DESERIALIZE_DOCX = 'deserializeDocx';\n\nconst getListNode =\n  (type: string): DeserializeHtml['getNode'] =>\n  (element) => {\n    const node: any = { type };\n\n    if (isDocxList(element)) {\n      node[KEY_INDENT] = getDocxListIndent(element);\n\n      const text = element.textContent ?? '';\n\n      node[KEY_LIST_STYLE_TYPE] =\n        getTextListStyleType(text) ?? ListStyleType.Disc;\n\n      element.innerHTML = getDocxListContentHtml(element);\n    } else {\n      const indent = getDocxIndent(element);\n      if (indent) {\n        node[KEY_INDENT] = indent;\n      }\n\n      const textIndent = getDocxTextIndent(element);\n      if (textIndent) {\n        node[KEY_TEXT_INDENT] = textIndent;\n      }\n    }\n\n    return node;\n  };\n\nconst KEYS = [\n  ELEMENT_PARAGRAPH,\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_H3,\n  ELEMENT_H4,\n  ELEMENT_H5,\n  ELEMENT_H6,\n];\n\nconst overrideByKey: Record<string, Partial<PlatePlugin>> = {};\n\nKEYS.forEach((key) => {\n  overrideByKey[key] = {\n    then: (editor, { type }) => ({\n      deserializeHtml: {\n        getNode: getListNode(type),\n      },\n    }),\n  };\n});\n\nexport const createDeserializeDocxPlugin = createPluginFactory({\n  key: KEY_DESERIALIZE_DOCX,\n  inject: {\n    pluginsByKey: {\n      [KEY_DESERIALIZE_HTML]: {\n        editor: {\n          insertData: {\n            transformData: (data, { dataTransfer }) => {\n              const rtf = dataTransfer.getData('text/rtf');\n\n              return cleanDocx(data, rtf);\n            },\n          },\n        },\n      },\n    },\n  },\n  overrideByKey: {\n    ...overrideByKey,\n    [ELEMENT_IMAGE]: {\n      editor: {\n        insertData: {\n          query: ({ dataTransfer }) => {\n            const data = dataTransfer.getData('text/html');\n            const { body } = new DOMParser().parseFromString(data, 'text/html');\n\n            return !isDocxContent(body);\n          },\n        },\n      },\n    },\n  },\n});\n"],"names":["cleanDocxBrComments","rootNode","traverseHtmlElements","element","tagName","nextSibling","isHtmlComment","data","removeHtmlNodesBetweenComments","isHtmlOpEmpty","nodeName","textContent","NO_BREAK_SPACE","isHtmlElementEmpty","children","length","firstElementChild","cleanDocxEmptyParagraphs","innerHTML","isDocxFootnote","classList","contains","extractFootnoteNumber","footnote","trim","replaceAll","cleanDocxFootnotes","footnoteReplacement","document","createElement","parentElement","replaceChild","require$$0","require$$1","require$$2","require$$3","getRtfImageHex","imageData","bliptagData","split","bracketSplit","beforeBracket","afterBracket","includes","SPACE","join","spaceSplit","slice","getRtfImageMimeType","bliptagMeta","END_OF_ID_SEQUENCE_CHARACTERS","CARRIAGE_RETURN","LINE_FEED","getRtfImageSpid","spidPrefix","indexes","map","character","indexOf","foundIndexes","filter","index","idLength","Math","min","id","max","getRtfImagesByType","rtf","type","images","reduce","rtfImages","image","spid","mimeType","hex","push","getRtfImagesMap","rtfImagesMap","shppictRtfImages","shppictRtfImage","shpRtfImages","shpRtfImage","getVShapes","comments","getHtmlComments","vShapesMap","comment","xmlDocument","DOMParser","parseFromString","vShapes","Array","from","querySelectorAll","forEach","vShape","getAttribute","error","normalizeSpid","getVShapeSpid","vShapeId","vShapeSpid","cleanDocxImageElements","src","startsWith","alt","isURL","require_protocol","setAttribute","rtfImage","remove","dataUri","hexToBase64","parentNode","imageElement","cleanDocxListElements","styleAttribute","getDocxListContentHtml","rootElement","clonedElement","cloneNode","getDocxListIndent","matches","match","level","Number","parseInt","isDocxBookmark","isDocxList","hasMsoListInStyle","test","hasMsoListIgnoreChild","Boolean","querySelector","outerHTML","getDocxListNode","isDocxOl","listNode","isOlSymbol","docxListToList","listLevel","listHtml","nextElementSibling","nextListLevel","nestedList","list","currentElement","listTagName","parseHtmlElement","cleanDocxListElementsToList","previousSibling","beforeElement","firstChild","before","append","cleanDocxQuotes","replaceTagName","generateSpaces","count","generateTabs","TAB","cleanDocxSpacerun","spacesCount","replacementNode","createTextNode","cleanDocxTabCount","countString","cleanDocxSpans","DOCX_INDENT_STEP","extractNumber","str","number","replace","parseFloat","styleToIndent","style","indentStep","indent","round","getDocxSpacing","cssProp","el","spacing","getDocxIndent","getDocxTextIndent","getTextListStyleType","text","_text$match","_text$match2","_text$match3","_text$match4","_text$match5","trimStart","ListStyleType","DecimalLeadingZero","Decimal","LowerRoman","LowerAlpha","UpperRoman","UpperAlpha","isDocxContent","body","result","isMsoElement","some","className","cleanDocx","html","preCleanHtml","cleanHtmlEmptyElements","cleanHtmlTextNodes","cleanHtmlBrElements","cleanHtmlLinkElements","cleanHtmlFontElements","copyBlockMarksToSpanChild","postCleanHtml","KEY_DESERIALIZE_DOCX","getListNode","node","_element$textContent","_getTextListStyleType","KEY_INDENT","KEY_LIST_STYLE_TYPE","Disc","textIndent","KEY_TEXT_INDENT","KEYS","ELEMENT_PARAGRAPH","ELEMENT_H1","ELEMENT_H2","ELEMENT_H3","ELEMENT_H4","ELEMENT_H5","ELEMENT_H6","overrideByKey","key","then","editor","deserializeHtml","getNode","createDeserializeDocxPlugin","createPluginFactory","inject","pluginsByKey","KEY_DESERIALIZE_HTML","insertData","transformData","dataTransfer","getData","ELEMENT_IMAGE","query"],"mappings":";;;;;;;AAMA;AACA;AACA;AACaA,MAAAA,mBAAmB,GAAIC,QAAc,IAAW;AAC3DC,EAAAA,oBAAoB,CAACD,QAAQ,EAAGE,OAAO,IAAK;AAC1C,IAAA,IAAIA,OAAO,CAACC,OAAO,KAAK,IAAI,EAAE;AAC5B,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;AAEA,IAAA,IACED,OAAO,CAACE,WAAW,IACnBC,aAAa,CAACH,OAAO,CAACE,WAAW,CAAC,IAClCF,OAAO,CAACE,WAAW,CAACE,IAAI,KAAK,+BAA+B,EAC5D;MACAC,8BAA8B,CAC5BL,OAAO,CAACE,WAAW,EACnB,+BAA+B,EAC/B,SACF,CAAC,CAAA;AACH,KAAA;AAEA,IAAA,OAAO,KAAK,CAAA;AACd,GAAC,CAAC,CAAA;AACJ;;AC3BA,MAAMI,aAAa,GAAIN,OAAgB,IACrCA,OAAO,CAACO,QAAQ,KAAK,KAAK,IAAIP,OAAO,CAACQ,WAAW,KAAKC,cAAc,CAAA;AAEtE,MAAMC,kBAAkB,GAAIV,OAAgB,IAC1CA,OAAO,CAACW,QAAQ,CAACC,MAAM,KAAK,CAAC,IAC7BZ,OAAO,CAACa,iBAAiB,KAAK,IAAI,KACjCP,aAAa,CAACN,OAAO,CAACa,iBAAiB,CAAC,IACvCH,kBAAkB,CAACV,OAAO,CAACa,iBAAiB,CAAC,CAAC,CAAA;;AAElD;AACA;AACA;AACaC,MAAAA,wBAAwB,GAAIhB,QAAc,IAAW;AAChEC,EAAAA,oBAAoB,CAACD,QAAQ,EAAGE,OAAO,IAAK;IAC1C,IAAIA,OAAO,CAACC,OAAO,KAAK,GAAG,IAAIS,kBAAkB,CAACV,OAAO,CAAC,EAAE;MAC1DA,OAAO,CAACe,SAAS,GAAG,EAAE,CAAA;AACxB,KAAA;AAEA,IAAA,OAAO,IAAI,CAAA;AACb,GAAC,CAAC,CAAA;AACJ;;ACtBA;AACA;AACA;AACaC,MAAAA,cAAc,GAAIhB,OAAgB,IAAc;AAC3D,EAAA,OACEA,OAAO,CAACC,OAAO,KAAK,MAAM,IAC1BD,OAAO,CAACiB,SAAS,CAACC,QAAQ,CAAC,sBAAsB,CAAC,CAAA;AAEtD;;ACJA;AACA;AACA;AACA,MAAMC,qBAAqB,GAAIC,QAAiB,IAAa;AAC3D,EAAA,OAAO,CAACA,QAAQ,CAACZ,WAAW,IAAI,EAAE,EAAEa,IAAI,EAAE,CAACC,UAAU,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAA;AACrE,CAAC,CAAA;;AAED;AACA;AACA;AACaC,MAAAA,kBAAkB,GAAIzB,QAAc,IAAW;AAC1DC,EAAAA,oBAAoB,CAACD,QAAQ,EAAGE,OAAO,IAAK;AAC1C,IAAA,IAAIgB,cAAc,CAAChB,OAAO,CAAC,EAAE;AAC3B,MAAA,MAAMwB,mBAAmB,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAAA;AACzDF,MAAAA,mBAAmB,CAAChB,WAAW,GAAGW,qBAAqB,CAACnB,OAAO,CAAC,CAAA;MAEhE,IAAIA,OAAO,CAAC2B,aAAa,EAAE;QACzB3B,OAAO,CAAC2B,aAAa,CAACC,YAAY,CAACJ,mBAAmB,EAAExB,OAAO,CAAC,CAAA;AAClE,OAAA;AAEA,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;AAEA,IAAA,OAAO,IAAI,CAAA;AACb,GAAC,CAAC,CAAA;AACJ;;;;;;;;;;;AC5BA;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE;AAC7C,EAAE,KAAK,EAAE,IAAI;AACb,CAAC,CAAC,CAAC;AACH,OAAe,CAAA,OAAA,GAAG,YAAY,CAAC;AAC/B;AACA,SAAS,OAAO,CAAC,GAAG,EAAE,EAAE,yBAAyB,CAAC,CAAC,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,QAAQ,EAAE,EAAE,OAAO,GAAG,SAAS,OAAO,CAAC,GAAG,EAAE,EAAE,OAAO,OAAO,GAAG,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,GAAG,SAAS,OAAO,CAAC,GAAG,EAAE,EAAE,OAAO,GAAG,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,GAAG,CAAC,WAAW,KAAK,MAAM,IAAI,GAAG,KAAK,MAAM,CAAC,SAAS,GAAG,QAAQ,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;AAC1X;AACA,SAAS,YAAY,CAAC,KAAK,EAAE;AAC7B,EAAE,IAAI,QAAQ,GAAG,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,MAAM,CAAC;AACtE;AACA,EAAE,IAAI,CAAC,QAAQ,EAAE;AACjB,IAAI,IAAI,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AACrC;AACA,IAAI,IAAI,KAAK,KAAK,IAAI,EAAE,WAAW,GAAG,MAAM,CAAC,KAAK,IAAI,WAAW,KAAK,QAAQ,EAAE,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC;AACrH,IAAI,MAAM,IAAI,SAAS,CAAC,mCAAmC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;AACjF,GAAG;AACH,CAAC;AACD;AACA,MAAA,CAAA,OAAc,GAAG,OAAO,CAAC,OAAO,CAAC;AACjC,MAAsB,CAAA,OAAA,CAAA,OAAA,GAAG,OAAO,CAAC,OAAO,CAAA;;;;;;ACpBxC;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE;AAC7C,EAAE,KAAK,EAAE,IAAI;AACb,CAAC,CAAC,CAAC;AACH,OAAe,CAAA,OAAA,GAAG,KAAK,CAAC;AACxB;AACA,SAAS,KAAK,GAAG;AACjB,EAAE,IAAI,GAAG,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACnF,EAAE,IAAI,QAAQ,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;AACjE;AACA,EAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,EAAE;AAC5B,IAAI,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,WAAW,EAAE;AACzC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;AAC/B,KAAK;AACL,GAAG;AACH;AACA,EAAE,OAAO,GAAG,CAAC;AACb,CAAC;AACD;AACA,MAAA,CAAA,OAAc,GAAG,OAAO,CAAC,OAAO,CAAC;AACjC,MAAsB,CAAA,OAAA,CAAA,OAAA,GAAG,OAAO,CAAC,OAAO,CAAA;;;;;;ACpBxC;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE;AAC7C,EAAE,KAAK,EAAE,IAAI;AACb,CAAC,CAAC,CAAC;AACH,OAAe,CAAA,OAAA,GAAG,MAAM,CAAC;AACzB;AACA,IAAI,aAAa,GAAG,sBAAsB,CAAC6B,cAA8B,CAAC,CAAC;AAC3E;AACA,IAAI,MAAM,GAAG,sBAAsB,CAACC,OAAuB,CAAC,CAAC;AAC7D;AACA,SAAS,sBAAsB,CAAC,GAAG,EAAE,EAAE,OAAO,GAAG,IAAI,GAAG,CAAC,UAAU,GAAG,GAAG,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE;AAC/F;AACA,IAAI,oBAAoB,GAAG;AAC3B,EAAE,WAAW,EAAE,IAAI;AACnB,EAAE,iBAAiB,EAAE,KAAK;AAC1B,EAAE,kBAAkB,EAAE,KAAK;AAC3B,EAAE,iBAAiB,EAAE,KAAK;AAC1B,EAAE,cAAc,EAAE,KAAK;AACvB,EAAE,iBAAiB,EAAE,KAAK;AAC1B,CAAC,CAAC;AACF;AACA,SAAS,MAAM,CAAC,GAAG,EAAE,OAAO,EAAE;AAC9B,EAAE,IAAI,aAAa,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;AAClC,EAAE,OAAO,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,oBAAoB,CAAC,CAAC;AAC/D;AACA;AACA,EAAE,IAAI,OAAO,CAAC,kBAAkB,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;AACjE,IAAI,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC3C,GAAG;AACH;AACA;AACA;AACA,EAAE,IAAI,OAAO,CAAC,cAAc,KAAK,IAAI,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAClE,IAAI,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC3B,GAAG;AACH;AACA,EAAE,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC7B,EAAE,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACpC;AACA,EAAE,IAAI,OAAO,CAAC,WAAW,EAAE;AAC3B;AACA,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AAC1B,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL;AACA,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,IAAI,CAAC,oFAAoF,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACvI,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL;AACA;AACA,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACxB,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,IAAI,CAAC,OAAO,CAAC,iBAAiB,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACvD,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH;AACA,EAAE,OAAO,KAAK,CAAC,KAAK,CAAC,UAAU,IAAI,EAAE;AACrC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE;AACxD,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL;AACA,IAAI,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACnD,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL;AACA;AACA,IAAI,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACtC,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL;AACA;AACA,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAC5B,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL;AACA,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACtD,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL;AACA,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC,CAAC;AACL,CAAC;AACD;AACA,MAAA,CAAA,OAAc,GAAG,OAAO,CAAC,OAAO,CAAC;AACjC,MAAsB,CAAA,OAAA,CAAA,OAAA,GAAG,OAAO,CAAC,OAAO,CAAA;;;;;;ACxFxC;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE;AAC7C,EAAE,KAAK,EAAE,IAAI;AACb,CAAC,CAAC,CAAC;AACH,OAAe,CAAA,OAAA,GAAG,IAAI,CAAC;AACvB;AACA,IAAI,aAAa,GAAG,sBAAsB,CAACD,cAA8B,CAAC,CAAC;AAC3E;AACA,SAAS,sBAAsB,CAAC,GAAG,EAAE,EAAE,OAAO,GAAG,IAAI,GAAG,CAAC,UAAU,GAAG,GAAG,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,GAAG,sDAAsD,CAAC;AAC/E,IAAI,iBAAiB,GAAG,GAAG,CAAC,MAAM,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;AAC3F,IAAI,iBAAiB,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,CAAC;AACvE,IAAI,iBAAiB,GAAG,sBAAsB,CAAC;AAC/C,IAAI,iBAAiB,GAAG,IAAI,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,YAAY,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,YAAY,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,YAAY,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,YAAY,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,YAAY,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,YAAY,CAAC,GAAG,0BAA0B,CAAC,CAAC;AACpnC;AACA,SAAS,IAAI,CAAC,GAAG,EAAE;AACnB,EAAE,IAAI,OAAO,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACvF,EAAE,IAAI,aAAa,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;AAClC,EAAE,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;AAC5B;AACA,EAAE,IAAI,CAAC,OAAO,EAAE;AAChB,IAAI,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACxC,GAAG;AACH;AACA,EAAE,IAAI,OAAO,KAAK,GAAG,EAAE;AACvB,IAAI,OAAO,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACvC,GAAG;AACH;AACA,EAAE,IAAI,OAAO,KAAK,GAAG,EAAE;AACvB,IAAI,OAAO,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACvC,GAAG;AACH;AACA,EAAE,OAAO,KAAK,CAAC;AACf,CAAC;AACD;AACA,MAAA,CAAA,OAAc,GAAG,OAAO,CAAC,OAAO,CAAC;AACjC,MAAsB,CAAA,OAAA,CAAA,OAAA,GAAG,OAAO,CAAC,OAAO,CAAA;;;;;;AClExC;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE;AAC7C,EAAE,KAAK,EAAE,IAAI;AACb,CAAC,CAAC,CAAC;AACH,OAAe,CAAA,OAAA,GAAG,KAAK,CAAC;AACxB;AACA,IAAI,aAAa,GAAG,sBAAsB,CAACA,cAA8B,CAAC,CAAC;AAC3E;AACA,IAAI,OAAO,GAAG,sBAAsB,CAACC,QAAmB,CAAC,CAAC;AAC1D;AACA,IAAI,KAAK,GAAG,sBAAsB,CAACC,MAAiB,CAAC,CAAC;AACtD;AACA,IAAI,MAAM,GAAG,sBAAsB,CAACC,OAAuB,CAAC,CAAC;AAC7D;AACA,SAAS,sBAAsB,CAAC,GAAG,EAAE,EAAE,OAAO,GAAG,IAAI,GAAG,CAAC,UAAU,GAAG,GAAG,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE;AAC/F;AACA,SAAS,cAAc,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,OAAO,eAAe,CAAC,GAAG,CAAC,IAAI,qBAAqB,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,2BAA2B,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,gBAAgB,EAAE,CAAC,EAAE;AAC9J;AACA,SAAS,gBAAgB,GAAG,EAAE,MAAM,IAAI,SAAS,CAAC,2IAA2I,CAAC,CAAC,EAAE;AACjM;AACA,SAAS,2BAA2B,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,OAAO,iBAAiB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,iBAAiB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE;AACha;AACA,SAAS,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,IAAI,CAAC,EAAE;AACvL;AACA,SAAS,qBAAqB,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,EAAE,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,IAAI,EAAE,GAAG,SAAS,CAAC,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,OAAO,GAAG,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,OAAO,IAAI,CAAC,EAAE;AACze;AACA,SAAS,eAAe,CAAC,GAAG,EAAE,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mBAAmB,GAAG;AAC1B,EAAE,SAAS,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC;AACrC,EAAE,WAAW,EAAE,IAAI;AACnB,EAAE,gBAAgB,EAAE,KAAK;AACzB,EAAE,YAAY,EAAE,IAAI;AACpB,EAAE,YAAY,EAAE,KAAK;AACrB,EAAE,sBAAsB,EAAE,IAAI;AAC9B,EAAE,iBAAiB,EAAE,KAAK;AAC1B,EAAE,kBAAkB,EAAE,KAAK;AAC3B,EAAE,4BAA4B,EAAE,KAAK;AACrC,EAAE,eAAe,EAAE,IAAI;AACvB,EAAE,sBAAsB,EAAE,IAAI;AAC9B,EAAE,eAAe,EAAE,IAAI;AACvB,CAAC,CAAC;AACF,IAAI,YAAY,GAAG,8BAA8B,CAAC;AAClD;AACA,SAAS,QAAQ,CAAC,GAAG,EAAE;AACvB,EAAE,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,iBAAiB,CAAC;AACnE,CAAC;AACD;AACA,SAAS,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE;AAClC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,IAAI,IAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AAC3B;AACA,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAC/D,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK;AACL,GAAG;AACH;AACA,EAAE,OAAO,KAAK,CAAC;AACf,CAAC;AACD;AACA,SAAS,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE;AAC7B,EAAE,IAAI,aAAa,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;AAClC;AACA,EAAE,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AAClC,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH;AACA,EAAE,IAAI,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;AACpC,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH;AACA,EAAE,OAAO,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,mBAAmB,CAAC,CAAC;AAC9D;AACA,EAAE,IAAI,OAAO,CAAC,eAAe,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE;AACrD,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH;AACA,EAAE,IAAI,CAAC,OAAO,CAAC,eAAe,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AACrD,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH;AACA,EAAE,IAAI,CAAC,OAAO,CAAC,sBAAsB,KAAK,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;AACnF,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH;AACA,EAAE,IAAI,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC;AAClE,EAAE,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACzB,EAAE,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;AACtB,EAAE,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACzB,EAAE,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;AACtB,EAAE,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC3B;AACA,EAAE,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AACxB,IAAI,QAAQ,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,WAAW,EAAE,CAAC;AAC3C;AACA,IAAI,IAAI,OAAO,CAAC,sBAAsB,IAAI,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;AACtF,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL,GAAG,MAAM,IAAI,OAAO,CAAC,gBAAgB,EAAE;AACvC,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;AACvC,IAAI,IAAI,CAAC,OAAO,CAAC,4BAA4B,EAAE;AAC/C,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL;AACA,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC5B,GAAG;AACH;AACA,EAAE,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1B;AACA,EAAE,IAAI,GAAG,KAAK,EAAE,EAAE;AAClB,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH;AACA,EAAE,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACzB,EAAE,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;AACtB;AACA,EAAE,IAAI,GAAG,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;AAC3C,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH;AACA,EAAE,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACzB;AACA,EAAE,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AACxB,IAAI,IAAI,OAAO,CAAC,aAAa,EAAE;AAC/B,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL;AACA,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;AACzB,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL;AACA,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;AACzB;AACA,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;AAC9D,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL;AACA,IAAI,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AACrC,QAAQ,YAAY,GAAG,cAAc,CAAC,WAAW,EAAE,CAAC,CAAC;AACrD,QAAQ,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC;AAC9B,QAAQ,QAAQ,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AACnC;AACA,IAAI,IAAI,IAAI,KAAK,EAAE,IAAI,QAAQ,KAAK,EAAE,EAAE;AACxC,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL,GAAG;AACH;AACA,EAAE,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7B,EAAE,QAAQ,GAAG,IAAI,CAAC;AAClB,EAAE,IAAI,GAAG,IAAI,CAAC;AACd,EAAE,IAAI,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAChD;AACA,EAAE,IAAI,UAAU,EAAE;AAClB,IAAI,IAAI,GAAG,EAAE,CAAC;AACd,IAAI,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AACzB,IAAI,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;AACrC,GAAG,MAAM;AACT,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAChC,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;AACzB;AACA,IAAI,IAAI,KAAK,CAAC,MAAM,EAAE;AACtB,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACjC,KAAK;AACL,GAAG;AACH;AACA,EAAE,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AAChD,IAAI,IAAI,GAAG,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AAClC;AACA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,KAAK,EAAE;AACjE,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL,GAAG,MAAM,IAAI,OAAO,CAAC,YAAY,EAAE;AACnC,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH;AACA,EAAE,IAAI,OAAO,CAAC,cAAc,EAAE;AAC9B,IAAI,OAAO,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC;AACnD,GAAG;AACH;AACA,EAAE,IAAI,IAAI,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;AAC5C,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH;AACA,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;AACpH,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH;AACA,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC;AACtB;AACA,EAAE,IAAI,OAAO,CAAC,cAAc,IAAI,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,cAAc,CAAC,EAAE;AACzE,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH;AACA,EAAE,OAAO,IAAI,CAAC;AACd,CAAC;AACD;AACA,MAAA,CAAA,OAAc,GAAG,OAAO,CAAC,OAAO,CAAC;AACjC,MAAsB,CAAA,OAAA,CAAA,OAAA,GAAG,OAAO,CAAC,OAAO,CAAA;;;;;ACjN3BC,MAAAA,cAAc,GAAIC,SAAiB,IAAoB;EAClE,MAAM,GAAGC,WAAW,GAAG,EAAE,CAAC,GAAGD,SAAS,CAACE,KAAK,CAAC,SAAS,CAAC,CAAA;AACvD,EAAA,MAAMC,YAAY,GAAGF,WAAW,CAACC,KAAK,CAAC,GAAG,CAAC,CAAA;AAE3C,EAAA,IAAIC,YAAY,CAACzB,MAAM,GAAG,CAAC,EAAE;AAC3B,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAEA,EAAA,MAAM,CAAC0B,aAAa,EAAEC,YAAY,CAAC,GAAGF,YAAY,CAAA;AAElD,EAAA,IAAIA,YAAY,CAACzB,MAAM,GAAG,CAAC,IAAI0B,aAAa,CAACE,QAAQ,CAAC,SAAS,CAAC,EAAE;IAChE,OAAOD,YAAY,CAACH,KAAK,CAACK,KAAK,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAA;AAC3C,GAAA;AAEA,EAAA,MAAMC,UAAU,GAAGL,aAAa,CAACF,KAAK,CAACK,KAAK,CAAC,CAAA;AAE7C,EAAA,IAAIE,UAAU,CAAC/B,MAAM,GAAG,CAAC,EAAE;AACzB,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;EAEA,OAAO+B,UAAU,CAACC,KAAK,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,EAAE,CAAC,CAAA;AACrC;;ACvBaG,MAAAA,mBAAmB,GAAIX,SAAiB,IAAoB;EACvE,MAAM,CAACY,WAAW,CAAC,GAAGZ,SAAS,CAACE,KAAK,CAAC,SAAS,CAAC,CAAA;AAEhD,EAAA,IAAIU,WAAW,CAACN,QAAQ,CAAC,SAAS,CAAC,EAAE;AACnC,IAAA,OAAO,WAAW,CAAA;AACpB,GAAA;AAEA,EAAA,IAAIM,WAAW,CAACN,QAAQ,CAAC,UAAU,CAAC,EAAE;AACpC,IAAA,OAAO,YAAY,CAAA;AACrB,GAAA;AAEA,EAAA,OAAO,IAAI,CAAA;AACb;;ACVA,MAAMO,6BAA6B,GAAG,CACpC,IAAI,EACJ,GAAG,EACHC,eAAe,EACfC,SAAS,EACTR,KAAK,CACN,CAAA;MAEYS,eAAe,GAAGA,CAC7BhB,SAAiB,EACjBiB,UAAkB,KACA;AAClB,EAAA,MAAMC,OAAO,GAAGL,6BAA6B,CAACM,GAAG,CAAEC,SAAS,IAC1DpB,SAAS,CAACqB,OAAO,CAACD,SAAS,CAC7B,CAAC,CAAA;AACD,EAAA,MAAME,YAAY,GAAGJ,OAAO,CAACK,MAAM,CAAEC,KAAK,IAAKA,KAAK,KAAK,CAAC,CAAC,CAAC,CAAA;AAC5D,EAAA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC3B,SAAS,CAACtB,MAAM,EAAE,GAAG4C,YAAY,CAAC,CAAA;AAC5D,EAAA,MAAMM,EAAE,GAAG5B,SAAS,CAACU,KAAK,CAAC,CAAC,EAAEgB,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEJ,QAAQ,CAAC,CAAC,CAAA;EACpD,OAAOG,EAAE,GAAI,CAAEX,EAAAA,UAAW,GAAEW,EAAG,CAAA,CAAC,GAAG,IAAI,CAAA;AACzC;;AChBO,MAAME,kBAAkB,GAAGA,CAChCC,GAAW,EACXd,UAAkB,EAClBe,IAAY,KACG;EACf,MAAM,GAAG,GAAGC,MAAM,CAAC,GAAGF,GAAG,CAAC7B,KAAK,CAAC8B,IAAI,CAAC,CAAA;EAErC,OAAOC,MAAM,CAACC,MAAM,CAAa,CAACC,SAAS,EAAEC,KAAK,KAAK;IACrD,MAAM,GAAGpC,SAAS,GAAG,EAAE,CAAC,GAAGoC,KAAK,CAAClC,KAAK,CAAC,QAAQ,CAAC,CAAA;AAChD,IAAA,MAAMmC,IAAI,GAAGrB,eAAe,CAAChB,SAAS,EAAEiB,UAAU,CAAC,CAAA;AACnD,IAAA,MAAMqB,QAAQ,GAAG3B,mBAAmB,CAACX,SAAS,CAAC,CAAA;AAC/C,IAAA,MAAMuC,GAAG,GAAGxC,cAAc,CAACC,SAAS,CAAC,CAAA;AAErC,IAAA,IAAIqC,IAAI,IAAIC,QAAQ,IAAIC,GAAG,EAAE;MAC3BJ,SAAS,CAACK,IAAI,CAAC;QAAED,GAAG;QAAED,QAAQ;AAAED,QAAAA,IAAAA;AAAK,OAAC,CAAC,CAAA;AACzC,KAAA;AAEA,IAAA,OAAOF,SAAS,CAAA;GACjB,EAAE,EAAE,CAAC,CAAA;AACR;;ACrBaM,MAAAA,eAAe,GAAIV,GAAW,IAAmB;EAC5D,MAAMW,YAA0B,GAAG,EAAE,CAAA;EAErC,MAAMC,gBAAgB,GAAGb,kBAAkB,CAACC,GAAG,EAAE,GAAG,EAAE,WAAW,CAAC,CAAA;AAClE,EAAA,KAAK,MAAMa,eAAe,IAAID,gBAAgB,EAAE;AAC9CD,IAAAA,YAAY,CAACE,eAAe,CAACP,IAAI,CAAC,GAAGO,eAAe,CAAA;AACtD,GAAA;EAEA,MAAMC,YAAY,GAAGf,kBAAkB,CAACC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,CAAA;AAC1D,EAAA,KAAK,MAAMe,WAAW,IAAID,YAAY,EAAE;AACtCH,IAAAA,YAAY,CAACI,WAAW,CAACT,IAAI,CAAC,GAAGS,WAAW,CAAA;AAC9C,GAAA;AAEA,EAAA,OAAOJ,YAAY,CAAA;AACrB;;ACfaK,MAAAA,UAAU,GAAIxD,QAAkB,IAA6B;AACxE,EAAA,MAAMyD,QAAQ,GAAGC,eAAe,CAAC1D,QAAQ,CAAC,CAAA;EAE1C,OAAOyD,QAAQ,CAACd,MAAM,CAAyB,CAACgB,UAAU,EAAEC,OAAO,KAAK;IACtE,IAAI;AACF,MAAA,MAAMC,WAAW,GAAG,IAAIC,SAAS,EAAE,CAACC,eAAe,CAACH,OAAO,EAAE,WAAW,CAAC,CAAA;AACzE,MAAA,MAAMI,OAAO,GAAGC,KAAK,CAACC,IAAI,CAACL,WAAW,CAACM,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAA;AAEnEH,MAAAA,OAAO,CAACI,OAAO,CAAEC,MAAM,IAAK;QAC1B,MAAM;AAAEhC,UAAAA,EAAAA;AAAG,SAAC,GAAGgC,MAAM,CAAA;AACrB,QAAA,MAAMvB,IAAI,GAAGuB,MAAM,CAACC,YAAY,CAAC,QAAQ,CAAC,CAAA;QAE1C,IAAI,OAAOjC,EAAE,KAAK,QAAQ,IAAI,OAAOS,IAAI,KAAK,QAAQ,EAAE;AACtDa,UAAAA,UAAU,CAACtB,EAAE,CAAC,GAAGS,IAAI,CAAA;AACvB,SAAA;AACF,OAAC,CAAC,CAAA;KACH,CAAC,OAAOyB,KAAK,EAAE;AACd;AAAA,KAAA;AAGF,IAAA,OAAOZ,UAAU,CAAA;GAClB,EAAE,EAAE,CAAC,CAAA;AACR;;ACtBA,MAAMa,aAAa,GAAI1B,IAAY,IAAa;EAC9C,MAAMT,EAAE,GAAGS,IAAI,CAACnC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AAC7B,EAAA,OAAO0B,EAAE,CAAA;AACX,CAAC,CAAA;MAEYoC,aAAa,GAAGA,CAC3BzE,QAAkB,EAClBzB,OAAgB,KACE;AAClB,EAAA,IAAIA,OAAO,CAACC,OAAO,KAAK,KAAK,EAAE;AAC7B,IAAA,MAAMkG,QAAQ,GAAGnG,OAAO,CAAC+F,YAAY,CAAC,UAAU,CAAC,CAAA;AACjD,IAAA,MAAMN,OAAO,GAAGR,UAAU,CAACxD,QAAQ,CAAC,CAAA;IAEpC,IAAI,CAAC0E,QAAQ,EAAE;AACb,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;AAEA,IAAA,MAAMC,UAAU,GAAGX,OAAO,CAACU,QAAQ,CAAC,CAAA;AAEpC,IAAA,IAAIC,UAAU,EAAE;MACd,OAAOH,aAAa,CAACG,UAAU,CAAC,CAAA;AAClC,KAAA;IAEA,IACEpG,OAAO,CAAC2B,aAAa,IACrB3B,OAAO,CAAC2B,aAAa,CAACA,aAAa,IACnC3B,OAAO,CAAC2B,aAAa,CAACA,aAAa,CAACZ,SAAS,CAACyB,QAAQ,CAAC,YAAY,CAAC,EACpE;AACA,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;IAEA,OAAOyD,aAAa,CAACE,QAAQ,CAAC,CAAA;AAChC,GAAA;AAEA,EAAA,IAAI,CAACnG,OAAO,CAAC2B,aAAa,EAAE;AAC1B,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;EAEA,MAAM4C,IAAI,GAAGvE,OAAO,CAAC2B,aAAa,CAACoE,YAAY,CAAC,QAAQ,CAAC,CAAA;AAEzD,EAAA,IAAIxB,IAAI,EAAE;IACR,OAAO0B,aAAa,CAAC1B,IAAI,CAAC,CAAA;AAC5B,GAAA;AAEA,EAAA,OAAOA,IAAI,CAAA;AACb;;ACzCA;AACA;AACA;AACO,MAAM8B,sBAAsB,GAAGA,CACpC5E,QAAkB,EAClBwC,GAAW,EACXnE,QAAc,KACL;EACT,IAAI,CAACmE,GAAG,EAAE;AACR,IAAA,OAAA;AACF,GAAA;AAEAlE,EAAAA,oBAAoB,CAACD,QAAQ,EAAGE,OAAO,IAAK;AAC1C,IAAA,IAAI,CAAC,CAAC,KAAK,EAAE,aAAa,CAAC,CAACwC,QAAQ,CAACxC,OAAO,CAACC,OAAO,CAAC,EAAE;AACrD,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;AAEA,IAAA,IAAID,OAAO,CAACC,OAAO,KAAK,KAAK,EAAE;AAC7B,MAAA,MAAMqG,GAAG,GAAGtG,OAAO,CAAC+F,YAAY,CAAC,KAAK,CAAC,CAAA;MAEvC,IAAI,CAACO,GAAG,IAAI,CAACA,GAAG,CAACC,UAAU,CAAC,SAAS,CAAC,EAAE;AACtC,QAAA,OAAO,IAAI,CAAA;AACb,OAAA;AAEA,MAAA,MAAMC,GAAG,GAAGxG,OAAO,CAAC+F,YAAY,CAAC,KAAK,CAAC,CAAA;MAEvC,IAAI,OAAOS,GAAG,KAAK,QAAQ,IAAIC,KAAK,CAACD,GAAG,EAAE;AAAEE,QAAAA,gBAAgB,EAAE,IAAA;AAAK,OAAC,CAAC,EAAE;AACrE1G,QAAAA,OAAO,CAAC2G,YAAY,CAAC,KAAK,EAAEH,GAAG,CAAC,CAAA;AAChC,QAAA,OAAO,IAAI,CAAA;AACb,OAAA;AACF,KAAA;AAEA,IAAA,MAAMJ,UAAU,GAAGF,aAAa,CAACzE,QAAQ,EAAEzB,OAAO,CAAC,CAAA;IAEnD,IAAI,CAACoG,UAAU,EAAE;AACf,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;AAEA,IAAA,MAAMxB,YAAY,GAAGD,eAAe,CAACV,GAAG,CAAC,CAAA;AACzC,IAAA,MAAM2C,QAAQ,GAAGhC,YAAY,CAACwB,UAAU,CAAC,CAAA;IAEzC,IAAI,CAACQ,QAAQ,EAAE;AACb;AACA;MACA5G,OAAO,CAAC6G,MAAM,EAAE,CAAA;AAChB,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;AAEA,IAAA,MAAMC,OAAO,GAAI,CAAOF,KAAAA,EAAAA,QAAQ,CAACpC,QAAS,CAAUuC,QAAAA,EAAAA,WAAW,CAC7DH,QAAQ,CAACnC,GACX,CAAE,CAAC,CAAA,CAAA;AAEH,IAAA,IAAIzE,OAAO,CAACC,OAAO,KAAK,KAAK,EAAE;AAC7BD,MAAAA,OAAO,CAAC2G,YAAY,CAAC,KAAK,EAAEG,OAAO,CAAC,CAAA;KACrC,MAAM,IAAI9G,OAAO,CAACgH,UAAU,IAAIhH,OAAO,CAACgH,UAAU,CAACA,UAAU,EAAE;AAC9D,MAAA,MAAMC,YAAY,GAAGxF,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAAA;AAClDuF,MAAAA,YAAY,CAACN,YAAY,CAAC,KAAK,EAAEG,OAAO,CAAC,CAAA;AACzC9G,MAAAA,OAAO,CAACgH,UAAU,CAACA,UAAU,CAACpF,YAAY,CACxCqF,YAAY,EACZjH,OAAO,CAACgH,UACV,CAAC,CAAA;AACH,KAAA;AACA,IAAA,OAAO,IAAI,CAAA;AACb,GAAC,CAAC,CAAA;AACJ;;ACpEA;AACA;AACA;AACaE,MAAAA,qBAAqB,GAAIpH,QAAc,IAAW;AAC7DC,EAAAA,oBAAoB,CAACD,QAAQ,EAAGE,OAAO,IAAK;AAC1C,IAAA,MAAMmH,cAAc,GAAGnH,OAAO,CAAC+F,YAAY,CAAC,OAAO,CAAC,CAAA;AAEpD,IAAA,IAAIoB,cAAc,EAAE;AAClBnH,MAAAA,OAAO,CAAC2G,YAAY,CAClB,OAAO,EACPQ,cAAc,CAAC7F,UAAU,CAAC,sBAAsB,EAAE,iBAAiB,CACrE,CAAC,CAAA;AACH,KAAA;AAEA,IAAA,OAAO,IAAI,CAAA;AACb,GAAC,CAAC,CAAA;AACJ;;ACba8F,MAAAA,sBAAsB,GAAIC,WAAoB,IAAa;AACtE,EAAA,MAAMC,aAAa,GAAGD,WAAW,CAACE,SAAS,CAAC,IAAI,CAAY,CAAA;AAE5DlH,EAAAA,8BAA8B,CAC5BiH,aAAa,EACb,oBAAoB,EACpB,SACF,CAAC,CAAA;AAEDvH,EAAAA,oBAAoB,CAACuH,aAAa,EAAGtH,OAAO,IAAK;AAC/C,IAAA,MAAMmH,cAAc,GAAGnH,OAAO,CAAC+F,YAAY,CAAC,OAAO,CAAC,CAAA;IAEpD,IAAIoB,cAAc,KAAK,iBAAiB,EAAE;MACxCnH,OAAO,CAAC6G,MAAM,EAAE,CAAA;AAClB,KAAA;AAEA,IAAA,OAAO,IAAI,CAAA;AACb,GAAC,CAAC,CAAA;EAEF,OAAOS,aAAa,CAACvG,SAAS,CAAA;AAChC;;ACzBayG,MAAAA,iBAAiB,GAAIxH,OAAgB,IAAa;EAC7D,MAAMmH,cAAc,GAAGnH,OAAO,CAAC+F,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,CAAA;AAC1D,EAAA,MAAM0B,OAAO,GAAGN,cAAc,CAACO,KAAK,CAAC,aAAa,CAAC,CAAA;AAEnD,EAAA,IAAID,OAAO,IAAIA,OAAO,CAAC7G,MAAM,GAAG,CAAC,EAAE;AACjC,IAAA,MAAM,GAAG+G,KAAK,CAAC,GAAGF,OAAO,CAAA;AACzB,IAAA,OAAOG,MAAM,CAACC,QAAQ,CAACF,KAAK,EAAE,EAAE,CAAC,CAAA;AACnC,GAAA;AAEA,EAAA,OAAO,CAAC,CAAA;AACV;;ACVaG,MAAAA,cAAc,GAAI9H,OAAgB,IAAc;AAC3D,EAAA,MAAMmH,cAAc,GAAGnH,OAAO,CAAC+F,YAAY,CAAC,OAAO,CAAC,CAAA;AACpD,EAAA,OACE,CAACoB,cAAc,IAAI,EAAE,EAAEZ,UAAU,CAAC,cAAc,CAAC,IAAI,CAACvG,OAAO,CAACQ,WAAW,CAAA;AAE7E;;ACLauH,MAAAA,UAAU,GAAI/H,OAAgB,IAAc;AACvD,EAAA,MAAMmH,cAAc,GAAGnH,OAAO,CAAC+F,YAAY,CAAC,OAAO,CAAC,CAAA;EAEpD,IAAI,CAACoB,cAAc,EAAE;AACnB,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;AAEA,EAAA,MAAMa,iBAAiB,GAAG,gBAAgB,CAACC,IAAI,CAACd,cAAc,CAAC,CAAA;EAE/D,IAAI,CAACa,iBAAiB,EAAE;AACtB,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;EAEA,MAAME,qBAAqB,GAAGC,OAAO,CACnCnI,OAAO,CAACoI,aAAa,CAAC,2BAA2B,CACnD,CAAC,CAAA;AAED,EAAA,IAAIF,qBAAqB,EAAE;AACzB,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAEA,EAAA,OAAOlI,OAAO,CAACqI,SAAS,CAAC7F,QAAQ,CAAC,2BAA2B,CAAC,CAAA;AAChE;;ACtBa8F,MAAAA,eAAe,GAAItI,OAAgB,IAAkB;AAChE,EAAA,OACEA,OAAO,CAACoI,aAAa,CAAC,2BAA2B,CAAC,IAClDpI,OAAO,CAACoI,aAAa,CAAC,YAAY,CAAC,CAAA;AAEvC;;ACDaG,MAAAA,QAAQ,GAAIvI,OAAgB,IAAc;AACrD,EAAA,MAAMwI,QAAQ,GAAGF,eAAe,CAACtI,OAAO,CAAC,CAAA;EAEzC,IAAI,CAACwI,QAAQ,EAAE;AACb,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;AAEA,EAAA,OAAOC,UAAU,CAACD,QAAQ,CAAChI,WAAW,IAAI,EAAE,CAAC,CAAA;AAC/C;;ACCakI,MAAAA,cAAc,GAAI1I,OAAgB,IAAa;AAC1D,EAAA,MAAM2I,SAAS,GAAGnB,iBAAiB,CAACxH,OAAO,CAAC,CAAA;EAC5C,IAAI4I,QAAQ,GAAG,EAAE,CAAA;EACjB,IAAI1I,WAA2B,GAAGF,OAAO,CAAA;AAEzC,EAAA,OAAOE,WAAW,EAAE;AAClB,IAAA,IAAI4H,cAAc,CAAC5H,WAAW,CAAC,EAAE;MAC/BA,WAAW,GAAGA,WAAW,CAAC2I,kBAAkB,CAAA;AAC5C,MAAA,SAAA;AACF,KAAA;AAEA,IAAA,IAAI,CAACd,UAAU,CAAC7H,WAAW,CAAC,EAAE;AAC5B,MAAA,MAAA;AACF,KAAA;AAEA,IAAA,MAAM4I,aAAa,GAAGtB,iBAAiB,CAACtH,WAAW,CAAC,CAAA;IAEpD,IAAI4I,aAAa,GAAGH,SAAS,EAAE;AAC7B;AACA,MAAA,MAAA;AACF,KAAA;IAEA,IAAIG,aAAa,GAAGH,SAAS,EAAE;AAC7B,MAAA,MAAMI,UAAU,GAAGL,cAAc,CAACxI,WAAW,CAAC,CAAA;MAE9C,IAAI6I,UAAU,CAACC,IAAI,EAAE;AACnBJ,QAAAA,QAAQ,IAAIG,UAAU,CAACC,IAAI,CAACX,SAAS,CAAA;AACvC,OAAA;MAEAnI,WAAW,GAAG6I,UAAU,CAAC7I,WAAW,CAAA;AACpC,MAAA,SAAA;AACF,KAAA;AAEA0I,IAAAA,QAAQ,IAAK,CAAMxB,IAAAA,EAAAA,sBAAsB,CAAClH,WAAW,CAAE,CAAM,KAAA,CAAA,CAAA;IAC7D,MAAM+I,cAAc,GAAG/I,WAAW,CAAA;IAClCA,WAAW,GAAG+I,cAAc,CAACJ,kBAAkB,CAAA;IAC/CI,cAAc,CAACpC,MAAM,EAAE,CAAA;AACzB,GAAA;EAEA,MAAMqC,WAAW,GAAGX,QAAQ,CAACvI,OAAO,CAAC,GAAG,IAAI,GAAG,IAAI,CAAA;EACnD,MAAMgJ,IAAI,GAAGG,gBAAgB,CAAE,CAAA,CAAA,EAAGD,WAAY,CAAA,CAAA,EAAGN,QAAS,CAAA,EAAA,EAAIM,WAAY,CAAA,CAAA,CAAE,CAAC,CAAA;EAE7E,OAAO;IAAEF,IAAI;AAAE9I,IAAAA,WAAAA;GAAa,CAAA;AAC9B;;ACnDakJ,MAAAA,2BAA2B,GAAItJ,QAAc,IAAW;AACnEC,EAAAA,oBAAoB,CAACD,QAAQ,EAAGE,OAAO,IAAK;AAC1C,IAAA,MAAMmH,cAAc,GAAGnH,OAAO,CAAC+F,YAAY,CAAC,OAAO,CAAC,CAAA;AAEpD,IAAA,IAAIoB,cAAc,EAAE;AAClBnH,MAAAA,OAAO,CAAC2G,YAAY,CAClB,OAAO,EACPQ,cAAc,CAAC7F,UAAU,CAAC,sBAAsB,EAAE,iBAAiB,CACrE,CAAC,CAAA;AACH,KAAA;AAEA,IAAA,OAAO,IAAI,CAAA;AACb,GAAC,CAAC,CAAA;AAEFvB,EAAAA,oBAAoB,CAACD,QAAQ,EAAGE,OAAO,IAAK;AAC1C,IAAA,IAAI,CAAC+H,UAAU,CAAC/H,OAAO,CAAC,EAAE;AACxB,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;IAEA,MAAM;MAAE2B,aAAa;AAAE0H,MAAAA,eAAAA;AAAgB,KAAC,GAAGrJ,OAAO,CAAA;IAElD,IAAI,CAAC2B,aAAa,EAAE;AAClB,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;IAEA,MAAM;AAAEqH,MAAAA,IAAAA;AAAK,KAAC,GAAGN,cAAc,CAAC1I,OAAO,CAAC,CAAA;IAExC,IAAI,CAACgJ,IAAI,EAAE;AACT,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;IAEA,MAAMM,aAAa,GAAGD,eAAe,GACjCA,eAAe,CAACnJ,WAAW,GAC3ByB,aAAa,CAAC4H,UAAU,CAAA;AAE5B,IAAA,IAAID,aAAa,EAAE;AACjBA,MAAAA,aAAa,CAACE,MAAM,CAACR,IAAI,CAAC,CAAA;AAC5B,KAAC,MAAM;AACLrH,MAAAA,aAAa,CAAC8H,MAAM,CAACT,IAAI,CAAC,CAAA;AAC5B,KAAA;AAEA,IAAA,OAAO,KAAK,CAAA;AACd,GAAC,CAAC,CAAA;AACJ;;AC9CA;AACA;AACA;AACaU,MAAAA,eAAe,GAAI5J,QAAc,IAAW;AACvDC,EAAAA,oBAAoB,CAACD,QAAQ,EAAGE,OAAO,IAAK;AAC1C,IAAA,IACEA,OAAO,CAACgH,UAAU,IAClBhH,OAAO,CAACC,OAAO,KAAK,GAAG,IACvBD,OAAO,CAACiB,SAAS,CAACC,QAAQ,CAAC,UAAU,CAAC,EACtC;AACAyI,MAAAA,cAAc,CAAC3J,OAAO,EAAE,YAAY,CAAC,CAAA;AACvC,KAAA;AAEA,IAAA,OAAO,IAAI,CAAA;AACb,GAAC,CAAC,CAAA;AACJ;;ACfO,MAAM4J,cAAc,GAAIC,KAAa,IAC1CnE,KAAK,CAACC,IAAI,CAAC;AAAE/E,EAAAA,MAAM,EAAEiJ,KAAAA;AAAM,CAAC,EAAE,MAAMpH,KAAK,CAAC,CAACC,IAAI,CAAC,EAAE,EAAC;AAE9C,MAAMoH,YAAY,GAAID,KAAa,IACxCnE,KAAK,CAACC,IAAI,CAAC;AAAE/E,EAAAA,MAAM,EAAEiJ,KAAAA;AAAM,CAAC,EAAE,MAAME,GAAG,CAAC,CAACrH,IAAI,CAAC,EAAE;;ACJlD;AACA;AACA;AACasH,MAAAA,iBAAiB,GAAIhK,OAAgB,IAAW;AAC3D,EAAA,MAAMmH,cAAc,GAAGnH,OAAO,CAAC+F,YAAY,CAAC,OAAO,CAAC,CAAA;AAEpD,EAAA,IACE,EACEoB,cAAc,IACd,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,CAAC3E,QAAQ,CAAC2E,cAAc,CAAC,CACnE,EACD;AACA,IAAA,OAAA;AACF,GAAA;EAEA,MAAM8C,WAAW,GAAG,CAACjK,OAAO,CAACQ,WAAW,IAAI,EAAE,EAAEI,MAAM,CAAA;EACtD,MAAMsJ,eAAe,GAAGzI,QAAQ,CAAC0I,cAAc,CAACP,cAAc,CAACK,WAAW,CAAC,CAAC,CAAA;EAE5E,IAAIjK,OAAO,CAACgH,UAAU,EAAE;IACtBhH,OAAO,CAACgH,UAAU,CAACpF,YAAY,CAACsI,eAAe,EAAElK,OAAO,CAAC,CAAA;AAC3D,GAAA;AACF;;ACrBA;AACA;AACA;AACaoK,MAAAA,iBAAiB,GAAIpK,OAAgB,IAAW;EAC3D,MAAMmH,cAAc,GAAGnH,OAAO,CAAC+F,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,CAAA;AAE1D,EAAA,IAAI,CAACoB,cAAc,CAACZ,UAAU,CAAC,gBAAgB,CAAC,EAAE;AAChD,IAAA,OAAA;AACF,GAAA;EAEA,MAAM,GAAG8D,WAAW,CAAC,GAAGlD,cAAc,CAAC/E,KAAK,CAAC,GAAG,CAAC,CAAA;EACjD,MAAMyH,KAAK,GAAGjC,MAAM,CAACC,QAAQ,CAACwC,WAAW,EAAE,EAAE,CAAC,CAAA;EAC9C,MAAMH,eAAe,GAAGzI,QAAQ,CAAC0I,cAAc,CAACL,YAAY,CAACD,KAAK,CAAC,CAAC,CAAA;EAEpE,IAAI7J,OAAO,CAACgH,UAAU,EAAE;IACtBhH,OAAO,CAACgH,UAAU,CAACpF,YAAY,CAACsI,eAAe,EAAElK,OAAO,CAAC,CAAA;AAC3D,GAAA;AACF;;ACdA;AACA;AACA;AACasK,MAAAA,cAAc,GAAIxK,QAAc,IAAW;AACtDC,EAAAA,oBAAoB,CAACD,QAAQ,EAAGE,OAAO,IAAK;AAC1C,IAAA,IAAIA,OAAO,CAACO,QAAQ,KAAK,MAAM,EAAE;AAC/B,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;IAEAyJ,iBAAiB,CAAChK,OAAO,CAAC,CAAA;IAC1BoK,iBAAiB,CAACpK,OAAO,CAAC,CAAA;AAE1B,IAAA,OAAO,IAAI,CAAA;AACb,GAAC,CAAC,CAAA;AACJ;;ACnBA,MAAMuK,gBAAgB,GAAG,EAAE,CAAA;;AAE3B;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAIC,GAAW,IAAK;EACrC,IAAIA,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,OAAO,CAAC,CAAA;EAE5B,IAAIC,MAAM,GAAGD,GAAG,CAACE,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;AAExC,EAAA,IAAID,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACrBA,MAAM,GAAI,CAAGA,CAAAA,EAAAA,MAAO,CAAC,CAAA,CAAA;AACvB,GAAA;AACA,EAAA,OAAO9C,MAAM,CAACgD,UAAU,CAACF,MAAM,CAAC,CAAA;AAClC,CAAC,CAAA;AAED,MAAMG,aAAa,GAAGA,CAACC,KAAa,EAAEC,UAAU,GAAGR,gBAAgB,KAAK;AACtE,EAAA,MAAMS,MAAM,GAAGR,aAAa,CAACM,KAAK,CAAC,CAAA;AACnC,EAAA,IAAIE,MAAM,EAAE;AACV,IAAA,IAAIF,KAAK,CAACtI,QAAQ,CAAC,IAAI,CAAC,EAAE;MACxB,OAAOoB,IAAI,CAACqH,KAAK,CAAED,MAAM,GAAG,EAAE,GAAID,UAAU,CAAC,CAAA;AAC/C,KAAA;AACA,IAAA,OAAOnH,IAAI,CAACqH,KAAK,CAACD,MAAM,GAAGD,UAAU,CAAC,CAAA;AACxC,GAAA;AACA,EAAA,OAAO,CAAC,CAAA;AACV,CAAC,CAAA;MAEYG,cAAc,GAAGA,CAAClL,OAAgB,EAAEmL,OAAe,KAAa;EAC3E,MAAMC,EAAE,GAAGpL,OAAsB,CAAA;AACjC,EAAA,MAAMqL,OAAO,GAAID,EAAE,CAACN,KAAK,CAASK,OAAO,CAAC,CAAA;AAE1C,EAAA,IAAI,CAACE,OAAO,EAAE,OAAO,CAAC,CAAA;AAEtB,EAAA,OAAOR,aAAa,CAACQ,OAAO,CAAC,IAAI,CAAC,CAAA;AACpC,EAAC;AAEM,MAAMC,aAAa,GAAItL,OAAgB,IAC5CkL,cAAc,CAAClL,OAAO,EAAE,YAAY,EAAC;AAEhC,MAAMuL,iBAAiB,GAAIvL,OAAgB,IAChDkL,cAAc,CAAClL,OAAO,EAAE,YAAY;;ACxCzBwL,MAAAA,oBAAoB,GAC/BC,IAAY,IACkB;EAAA,IAAAC,WAAA,EAAAC,YAAA,EAAAC,YAAA,EAAAC,YAAA,EAAAC,YAAA,CAAA;AAC9BL,EAAAA,IAAI,GAAGA,IAAI,CAACM,SAAS,EAAE,CAAA;AAEvB,EAAA,IAAA,CAAAL,WAAA,GAAID,IAAI,CAAC/D,KAAK,CAAC,WAAW,CAAC,MAAA,IAAA,IAAAgE,WAAA,KAAvBA,KAAAA,CAAAA,IAAAA,WAAA,CAA0B,CAAC,CAAC,EAAE;AAChC,IAAA,IAAID,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MACnB,OAAOO,aAAa,CAACC,kBAAkB,CAAA;AACzC,KAAA;IAEA,OAAOD,aAAa,CAACE,OAAO,CAAA;AAC9B,GAAA;AAEA,EAAA,IAAA,CAAAP,YAAA,GAAIF,IAAI,CAAC/D,KAAK,CAAC,eAAe,CAAC,MAAA,IAAA,IAAAiE,YAAA,KAA3BA,KAAAA,CAAAA,IAAAA,YAAA,CAA8B,CAAC,CAAC,EAAE;IACpC,OAAOK,aAAa,CAACG,UAAU,CAAA;AACjC,GAAA;AAEA,EAAA,IAAA,CAAAP,YAAA,GAAIH,IAAI,CAAC/D,KAAK,CAAC,WAAW,CAAC,MAAA,IAAA,IAAAkE,YAAA,KAAvBA,KAAAA,CAAAA,IAAAA,YAAA,CAA0B,CAAC,CAAC,EAAE;IAChC,OAAOI,aAAa,CAACI,UAAU,CAAA;AACjC,GAAA;AAEA,EAAA,IAAA,CAAAP,YAAA,GAAIJ,IAAI,CAAC/D,KAAK,CAAC,eAAe,CAAC,MAAA,IAAA,IAAAmE,YAAA,KAA3BA,KAAAA,CAAAA,IAAAA,YAAA,CAA8B,CAAC,CAAC,EAAE;IACpC,OAAOG,aAAa,CAACK,UAAU,CAAA;AACjC,GAAA;AAEA,EAAA,IAAA,CAAAP,YAAA,GAAIL,IAAI,CAAC/D,KAAK,CAAC,WAAW,CAAC,MAAA,IAAA,IAAAoE,YAAA,KAAvBA,KAAAA,CAAAA,IAAAA,YAAA,CAA0B,CAAC,CAAC,EAAE;IAChC,OAAOE,aAAa,CAACM,UAAU,CAAA;AACjC,GAAA;AACF;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACaC,MAAAA,aAAa,GAAIC,IAAiB,IAAc;EAC3D,IAAIC,MAAM,GAAG,KAAK,CAAA;AAElB1M,EAAAA,oBAAoB,CAACyM,IAAI,EAAGxM,OAAO,IAAK;IACtC,MAAMmH,cAAc,GAAGnH,OAAO,CAAC+F,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,CAAA;IAC1D,MAAM9E,SAAS,GAAGyE,KAAK,CAACC,IAAI,CAAC3F,OAAO,CAACiB,SAAS,CAAC,CAAA;IAE/C,MAAMyL,YAAY,GAChBvF,cAAc,CAAC3E,QAAQ,CAAC,MAAM,CAAC,IAC/BvB,SAAS,CAAC0L,IAAI,CAAEC,SAAS,IAAKA,SAAS,CAACrG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAA;IAE5DkG,MAAM,GAAGA,MAAM,IAAIC,YAAY,CAAA;AAE/B,IAAA,OAAO,CAACD,MAAM,CAAA;AAChB,GAAC,CAAC,CAAA;AAEF,EAAA,OAAOA,MAAM,CAAA;AACf;;MCHaI,SAAS,GAAGA,CAACC,IAAY,EAAE7I,GAAW,KAAa;AAC9D,EAAA,MAAMxC,QAAQ,GAAG,IAAI8D,SAAS,EAAE,CAACC,eAAe,CAC9CuH,YAAY,CAACD,IAAI,CAAC,EAClB,WACF,CAAC,CAAA;EACD,MAAM;AAAEN,IAAAA,IAAAA;AAAK,GAAC,GAAG/K,QAAQ,CAAA;EAEzB,IAAI,CAACwC,GAAG,IAAI,CAACsI,aAAa,CAACC,IAAI,CAAC,EAAE;AAChC,IAAA,OAAOM,IAAI,CAAA;AACb,GAAA;EAEAvL,kBAAkB,CAACiL,IAAI,CAAC,CAAA;AACxBnG,EAAAA,sBAAsB,CAAC5E,QAAQ,EAAEwC,GAAG,EAAEuI,IAAI,CAAC,CAAA;EAC3CQ,sBAAsB,CAACR,IAAI,CAAC,CAAA;EAC5B1L,wBAAwB,CAAC0L,IAAI,CAAC,CAAA;EAC9B9C,eAAe,CAAC8C,IAAI,CAAC,CAAA;EACrBlC,cAAc,CAACkC,IAAI,CAAC,CAAA;EACpBS,kBAAkB,CAACT,IAAI,CAAC,CAAA;EACxB3M,mBAAmB,CAAC2M,IAAI,CAAC,CAAA;EACzBU,mBAAmB,CAACV,IAAI,CAAC,CAAA;EACzBW,qBAAqB,CAACX,IAAI,CAAC,CAAA;EAC3BY,qBAAqB,CAACZ,IAAI,CAAC,CAAA;EAC3BtF,qBAAqB,CAACsF,IAAI,CAAC,CAAA;EAC3Ba,yBAAyB,CAACb,IAAI,CAAC,CAAA;AAE/B,EAAA,OAAOc,aAAa,CAACd,IAAI,CAACzL,SAAS,CAAC,CAAA;AACtC;;AClBO,MAAMwM,oBAAoB,GAAG,kBAAiB;AAErD,MAAMC,WAAW,GACdtJ,IAAY,IACZlE,OAAO,IAAK;AACX,EAAA,MAAMyN,IAAS,GAAG;AAAEvJ,IAAAA,IAAAA;GAAM,CAAA;AAE1B,EAAA,IAAI6D,UAAU,CAAC/H,OAAO,CAAC,EAAE;IAAA,IAAA0N,oBAAA,EAAAC,qBAAA,CAAA;AACvBF,IAAAA,IAAI,CAACG,UAAU,CAAC,GAAGpG,iBAAiB,CAACxH,OAAO,CAAC,CAAA;AAE7C,IAAA,MAAMyL,IAAI,GAAA,CAAAiC,oBAAA,GAAG1N,OAAO,CAACQ,WAAW,MAAA,IAAA,IAAAkN,oBAAA,KAAA,KAAA,CAAA,GAAAA,oBAAA,GAAI,EAAE,CAAA;AAEtCD,IAAAA,IAAI,CAACI,mBAAmB,CAAC,GAAAF,CAAAA,qBAAA,GACvBnC,oBAAoB,CAACC,IAAI,CAAC,cAAAkC,qBAAA,KAAA,KAAA,CAAA,GAAAA,qBAAA,GAAI3B,aAAa,CAAC8B,IAAI,CAAA;AAElD9N,IAAAA,OAAO,CAACe,SAAS,GAAGqG,sBAAsB,CAACpH,OAAO,CAAC,CAAA;AACrD,GAAC,MAAM;AACL,IAAA,MAAMgL,MAAM,GAAGM,aAAa,CAACtL,OAAO,CAAC,CAAA;AACrC,IAAA,IAAIgL,MAAM,EAAE;AACVyC,MAAAA,IAAI,CAACG,UAAU,CAAC,GAAG5C,MAAM,CAAA;AAC3B,KAAA;AAEA,IAAA,MAAM+C,UAAU,GAAGxC,iBAAiB,CAACvL,OAAO,CAAC,CAAA;AAC7C,IAAA,IAAI+N,UAAU,EAAE;AACdN,MAAAA,IAAI,CAACO,eAAe,CAAC,GAAGD,UAAU,CAAA;AACpC,KAAA;AACF,GAAA;AAEA,EAAA,OAAON,IAAI,CAAA;AACb,CAAC,CAAA;AAEH,MAAMQ,IAAI,GAAG,CACXC,iBAAiB,EACjBC,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,UAAU,CACX,CAAA;AAED,MAAMC,aAAmD,GAAG,EAAE,CAAA;AAE9DR,IAAI,CAACpI,OAAO,CAAE6I,GAAG,IAAK;EACpBD,aAAa,CAACC,GAAG,CAAC,GAAG;IACnBC,IAAI,EAAEA,CAACC,MAAM,EAAE;AAAE1K,MAAAA,IAAAA;AAAK,KAAC,MAAM;AAC3B2K,MAAAA,eAAe,EAAE;QACfC,OAAO,EAAEtB,WAAW,CAACtJ,IAAI,CAAA;AAC3B,OAAA;KACD,CAAA;GACF,CAAA;AACH,CAAC,CAAC,CAAA;AAEW6K,MAAAA,2BAA2B,GAAGC,mBAAmB,CAAC;AAC7DN,EAAAA,GAAG,EAAEnB,oBAAoB;AACzB0B,EAAAA,MAAM,EAAE;AACNC,IAAAA,YAAY,EAAE;AACZ,MAAA,CAACC,oBAAoB,GAAG;AACtBP,QAAAA,MAAM,EAAE;AACNQ,UAAAA,UAAU,EAAE;YACVC,aAAa,EAAEA,CAACjP,IAAI,EAAE;AAAEkP,cAAAA,YAAAA;AAAa,aAAC,KAAK;AACzC,cAAA,MAAMrL,GAAG,GAAGqL,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAA;AAE5C,cAAA,OAAO1C,SAAS,CAACzM,IAAI,EAAE6D,GAAG,CAAC,CAAA;AAC7B,aAAA;AACF,WAAA;AACF,SAAA;AACF,OAAA;AACF,KAAA;GACD;AACDwK,EAAAA,aAAa,EAAE;AACb,IAAA,GAAGA,aAAa;AAChB,IAAA,CAACe,aAAa,GAAG;AACfZ,MAAAA,MAAM,EAAE;AACNQ,QAAAA,UAAU,EAAE;AACVK,UAAAA,KAAK,EAAEA,CAAC;AAAEH,YAAAA,YAAAA;AAAa,WAAC,KAAK;AAC3B,YAAA,MAAMlP,IAAI,GAAGkP,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAA;YAC9C,MAAM;AAAE/C,cAAAA,IAAAA;aAAM,GAAG,IAAIjH,SAAS,EAAE,CAACC,eAAe,CAACpF,IAAI,EAAE,WAAW,CAAC,CAAA;AAEnE,YAAA,OAAO,CAACmM,aAAa,CAACC,IAAI,CAAC,CAAA;AAC7B,WAAA;AACF,SAAA;AACF,OAAA;AACF,KAAA;AACF,GAAA;AACF,CAAC;;;;","x_google_ignoreList":[4,5,6,7,8]}